
window_normal.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002e90  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  08002f50  08002f50  00003f50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002fc0  08002fc0  0000400c  2**0
                  CONTENTS
  4 .ARM          00000000  08002fc0  08002fc0  0000400c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002fc0  08002fc0  0000400c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002fc0  08002fc0  00003fc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08002fc4  08002fc4  00003fc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000000c  20000000  08002fc8  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  2000000c  08002fd4  0000400c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000040  08002fd4  00004040  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000400c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000208a  00000000  00000000  00004034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000c6f  00000000  00000000  000060be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000340  00000000  00000000  00006d30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000254  00000000  00000000  00007070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000df0a  00000000  00000000  000072c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00004201  00000000  00000000  000151ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005489a  00000000  00000000  000193cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0006dc69  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c78  00000000  00000000  0006dcac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000070  00000000  00000000  0006e924  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000000c 	.word	0x2000000c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08002f38 	.word	0x08002f38

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000010 	.word	0x20000010
 8000104:	08002f38 	.word	0x08002f38

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	@ 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f8f0 	bl	80003f0 <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			@ (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__divsi3>:
 800021c:	4603      	mov	r3, r0
 800021e:	430b      	orrs	r3, r1
 8000220:	d47f      	bmi.n	8000322 <__divsi3+0x106>
 8000222:	2200      	movs	r2, #0
 8000224:	0843      	lsrs	r3, r0, #1
 8000226:	428b      	cmp	r3, r1
 8000228:	d374      	bcc.n	8000314 <__divsi3+0xf8>
 800022a:	0903      	lsrs	r3, r0, #4
 800022c:	428b      	cmp	r3, r1
 800022e:	d35f      	bcc.n	80002f0 <__divsi3+0xd4>
 8000230:	0a03      	lsrs	r3, r0, #8
 8000232:	428b      	cmp	r3, r1
 8000234:	d344      	bcc.n	80002c0 <__divsi3+0xa4>
 8000236:	0b03      	lsrs	r3, r0, #12
 8000238:	428b      	cmp	r3, r1
 800023a:	d328      	bcc.n	800028e <__divsi3+0x72>
 800023c:	0c03      	lsrs	r3, r0, #16
 800023e:	428b      	cmp	r3, r1
 8000240:	d30d      	bcc.n	800025e <__divsi3+0x42>
 8000242:	22ff      	movs	r2, #255	@ 0xff
 8000244:	0209      	lsls	r1, r1, #8
 8000246:	ba12      	rev	r2, r2
 8000248:	0c03      	lsrs	r3, r0, #16
 800024a:	428b      	cmp	r3, r1
 800024c:	d302      	bcc.n	8000254 <__divsi3+0x38>
 800024e:	1212      	asrs	r2, r2, #8
 8000250:	0209      	lsls	r1, r1, #8
 8000252:	d065      	beq.n	8000320 <__divsi3+0x104>
 8000254:	0b03      	lsrs	r3, r0, #12
 8000256:	428b      	cmp	r3, r1
 8000258:	d319      	bcc.n	800028e <__divsi3+0x72>
 800025a:	e000      	b.n	800025e <__divsi3+0x42>
 800025c:	0a09      	lsrs	r1, r1, #8
 800025e:	0bc3      	lsrs	r3, r0, #15
 8000260:	428b      	cmp	r3, r1
 8000262:	d301      	bcc.n	8000268 <__divsi3+0x4c>
 8000264:	03cb      	lsls	r3, r1, #15
 8000266:	1ac0      	subs	r0, r0, r3
 8000268:	4152      	adcs	r2, r2
 800026a:	0b83      	lsrs	r3, r0, #14
 800026c:	428b      	cmp	r3, r1
 800026e:	d301      	bcc.n	8000274 <__divsi3+0x58>
 8000270:	038b      	lsls	r3, r1, #14
 8000272:	1ac0      	subs	r0, r0, r3
 8000274:	4152      	adcs	r2, r2
 8000276:	0b43      	lsrs	r3, r0, #13
 8000278:	428b      	cmp	r3, r1
 800027a:	d301      	bcc.n	8000280 <__divsi3+0x64>
 800027c:	034b      	lsls	r3, r1, #13
 800027e:	1ac0      	subs	r0, r0, r3
 8000280:	4152      	adcs	r2, r2
 8000282:	0b03      	lsrs	r3, r0, #12
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x70>
 8000288:	030b      	lsls	r3, r1, #12
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0ac3      	lsrs	r3, r0, #11
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x7c>
 8000294:	02cb      	lsls	r3, r1, #11
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0a83      	lsrs	r3, r0, #10
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x88>
 80002a0:	028b      	lsls	r3, r1, #10
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0a43      	lsrs	r3, r0, #9
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x94>
 80002ac:	024b      	lsls	r3, r1, #9
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0a03      	lsrs	r3, r0, #8
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0xa0>
 80002b8:	020b      	lsls	r3, r1, #8
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	d2cd      	bcs.n	800025c <__divsi3+0x40>
 80002c0:	09c3      	lsrs	r3, r0, #7
 80002c2:	428b      	cmp	r3, r1
 80002c4:	d301      	bcc.n	80002ca <__divsi3+0xae>
 80002c6:	01cb      	lsls	r3, r1, #7
 80002c8:	1ac0      	subs	r0, r0, r3
 80002ca:	4152      	adcs	r2, r2
 80002cc:	0983      	lsrs	r3, r0, #6
 80002ce:	428b      	cmp	r3, r1
 80002d0:	d301      	bcc.n	80002d6 <__divsi3+0xba>
 80002d2:	018b      	lsls	r3, r1, #6
 80002d4:	1ac0      	subs	r0, r0, r3
 80002d6:	4152      	adcs	r2, r2
 80002d8:	0943      	lsrs	r3, r0, #5
 80002da:	428b      	cmp	r3, r1
 80002dc:	d301      	bcc.n	80002e2 <__divsi3+0xc6>
 80002de:	014b      	lsls	r3, r1, #5
 80002e0:	1ac0      	subs	r0, r0, r3
 80002e2:	4152      	adcs	r2, r2
 80002e4:	0903      	lsrs	r3, r0, #4
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xd2>
 80002ea:	010b      	lsls	r3, r1, #4
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	08c3      	lsrs	r3, r0, #3
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xde>
 80002f6:	00cb      	lsls	r3, r1, #3
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0883      	lsrs	r3, r0, #2
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xea>
 8000302:	008b      	lsls	r3, r1, #2
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0843      	lsrs	r3, r0, #1
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xf6>
 800030e:	004b      	lsls	r3, r1, #1
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	1a41      	subs	r1, r0, r1
 8000316:	d200      	bcs.n	800031a <__divsi3+0xfe>
 8000318:	4601      	mov	r1, r0
 800031a:	4152      	adcs	r2, r2
 800031c:	4610      	mov	r0, r2
 800031e:	4770      	bx	lr
 8000320:	e05d      	b.n	80003de <__divsi3+0x1c2>
 8000322:	0fca      	lsrs	r2, r1, #31
 8000324:	d000      	beq.n	8000328 <__divsi3+0x10c>
 8000326:	4249      	negs	r1, r1
 8000328:	1003      	asrs	r3, r0, #32
 800032a:	d300      	bcc.n	800032e <__divsi3+0x112>
 800032c:	4240      	negs	r0, r0
 800032e:	4053      	eors	r3, r2
 8000330:	2200      	movs	r2, #0
 8000332:	469c      	mov	ip, r3
 8000334:	0903      	lsrs	r3, r0, #4
 8000336:	428b      	cmp	r3, r1
 8000338:	d32d      	bcc.n	8000396 <__divsi3+0x17a>
 800033a:	0a03      	lsrs	r3, r0, #8
 800033c:	428b      	cmp	r3, r1
 800033e:	d312      	bcc.n	8000366 <__divsi3+0x14a>
 8000340:	22fc      	movs	r2, #252	@ 0xfc
 8000342:	0189      	lsls	r1, r1, #6
 8000344:	ba12      	rev	r2, r2
 8000346:	0a03      	lsrs	r3, r0, #8
 8000348:	428b      	cmp	r3, r1
 800034a:	d30c      	bcc.n	8000366 <__divsi3+0x14a>
 800034c:	0189      	lsls	r1, r1, #6
 800034e:	1192      	asrs	r2, r2, #6
 8000350:	428b      	cmp	r3, r1
 8000352:	d308      	bcc.n	8000366 <__divsi3+0x14a>
 8000354:	0189      	lsls	r1, r1, #6
 8000356:	1192      	asrs	r2, r2, #6
 8000358:	428b      	cmp	r3, r1
 800035a:	d304      	bcc.n	8000366 <__divsi3+0x14a>
 800035c:	0189      	lsls	r1, r1, #6
 800035e:	d03a      	beq.n	80003d6 <__divsi3+0x1ba>
 8000360:	1192      	asrs	r2, r2, #6
 8000362:	e000      	b.n	8000366 <__divsi3+0x14a>
 8000364:	0989      	lsrs	r1, r1, #6
 8000366:	09c3      	lsrs	r3, r0, #7
 8000368:	428b      	cmp	r3, r1
 800036a:	d301      	bcc.n	8000370 <__divsi3+0x154>
 800036c:	01cb      	lsls	r3, r1, #7
 800036e:	1ac0      	subs	r0, r0, r3
 8000370:	4152      	adcs	r2, r2
 8000372:	0983      	lsrs	r3, r0, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d301      	bcc.n	800037c <__divsi3+0x160>
 8000378:	018b      	lsls	r3, r1, #6
 800037a:	1ac0      	subs	r0, r0, r3
 800037c:	4152      	adcs	r2, r2
 800037e:	0943      	lsrs	r3, r0, #5
 8000380:	428b      	cmp	r3, r1
 8000382:	d301      	bcc.n	8000388 <__divsi3+0x16c>
 8000384:	014b      	lsls	r3, r1, #5
 8000386:	1ac0      	subs	r0, r0, r3
 8000388:	4152      	adcs	r2, r2
 800038a:	0903      	lsrs	r3, r0, #4
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x178>
 8000390:	010b      	lsls	r3, r1, #4
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	08c3      	lsrs	r3, r0, #3
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x184>
 800039c:	00cb      	lsls	r3, r1, #3
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0883      	lsrs	r3, r0, #2
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x190>
 80003a8:	008b      	lsls	r3, r1, #2
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	d2d9      	bcs.n	8000364 <__divsi3+0x148>
 80003b0:	0843      	lsrs	r3, r0, #1
 80003b2:	428b      	cmp	r3, r1
 80003b4:	d301      	bcc.n	80003ba <__divsi3+0x19e>
 80003b6:	004b      	lsls	r3, r1, #1
 80003b8:	1ac0      	subs	r0, r0, r3
 80003ba:	4152      	adcs	r2, r2
 80003bc:	1a41      	subs	r1, r0, r1
 80003be:	d200      	bcs.n	80003c2 <__divsi3+0x1a6>
 80003c0:	4601      	mov	r1, r0
 80003c2:	4663      	mov	r3, ip
 80003c4:	4152      	adcs	r2, r2
 80003c6:	105b      	asrs	r3, r3, #1
 80003c8:	4610      	mov	r0, r2
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x1b4>
 80003cc:	4240      	negs	r0, r0
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d500      	bpl.n	80003d4 <__divsi3+0x1b8>
 80003d2:	4249      	negs	r1, r1
 80003d4:	4770      	bx	lr
 80003d6:	4663      	mov	r3, ip
 80003d8:	105b      	asrs	r3, r3, #1
 80003da:	d300      	bcc.n	80003de <__divsi3+0x1c2>
 80003dc:	4240      	negs	r0, r0
 80003de:	b501      	push	{r0, lr}
 80003e0:	2000      	movs	r0, #0
 80003e2:	f000 f805 	bl	80003f0 <__aeabi_idiv0>
 80003e6:	bd02      	pop	{r1, pc}

080003e8 <__aeabi_idivmod>:
 80003e8:	2900      	cmp	r1, #0
 80003ea:	d0f8      	beq.n	80003de <__divsi3+0x1c2>
 80003ec:	e716      	b.n	800021c <__divsi3>
 80003ee:	4770      	bx	lr

080003f0 <__aeabi_idiv0>:
 80003f0:	4770      	bx	lr
 80003f2:	46c0      	nop			@ (mov r8, r8)

080003f4 <__aeabi_cdrcmple>:
 80003f4:	4684      	mov	ip, r0
 80003f6:	0010      	movs	r0, r2
 80003f8:	4662      	mov	r2, ip
 80003fa:	468c      	mov	ip, r1
 80003fc:	0019      	movs	r1, r3
 80003fe:	4663      	mov	r3, ip
 8000400:	e000      	b.n	8000404 <__aeabi_cdcmpeq>
 8000402:	46c0      	nop			@ (mov r8, r8)

08000404 <__aeabi_cdcmpeq>:
 8000404:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000406:	f000 fd05 	bl	8000e14 <__ledf2>
 800040a:	2800      	cmp	r0, #0
 800040c:	d401      	bmi.n	8000412 <__aeabi_cdcmpeq+0xe>
 800040e:	2100      	movs	r1, #0
 8000410:	42c8      	cmn	r0, r1
 8000412:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000414 <__aeabi_dcmpeq>:
 8000414:	b510      	push	{r4, lr}
 8000416:	f000 fc45 	bl	8000ca4 <__eqdf2>
 800041a:	4240      	negs	r0, r0
 800041c:	3001      	adds	r0, #1
 800041e:	bd10      	pop	{r4, pc}

08000420 <__aeabi_dcmplt>:
 8000420:	b510      	push	{r4, lr}
 8000422:	f000 fcf7 	bl	8000e14 <__ledf2>
 8000426:	2800      	cmp	r0, #0
 8000428:	db01      	blt.n	800042e <__aeabi_dcmplt+0xe>
 800042a:	2000      	movs	r0, #0
 800042c:	bd10      	pop	{r4, pc}
 800042e:	2001      	movs	r0, #1
 8000430:	bd10      	pop	{r4, pc}
 8000432:	46c0      	nop			@ (mov r8, r8)

08000434 <__aeabi_dcmple>:
 8000434:	b510      	push	{r4, lr}
 8000436:	f000 fced 	bl	8000e14 <__ledf2>
 800043a:	2800      	cmp	r0, #0
 800043c:	dd01      	ble.n	8000442 <__aeabi_dcmple+0xe>
 800043e:	2000      	movs	r0, #0
 8000440:	bd10      	pop	{r4, pc}
 8000442:	2001      	movs	r0, #1
 8000444:	bd10      	pop	{r4, pc}
 8000446:	46c0      	nop			@ (mov r8, r8)

08000448 <__aeabi_dcmpgt>:
 8000448:	b510      	push	{r4, lr}
 800044a:	f000 fc6f 	bl	8000d2c <__gedf2>
 800044e:	2800      	cmp	r0, #0
 8000450:	dc01      	bgt.n	8000456 <__aeabi_dcmpgt+0xe>
 8000452:	2000      	movs	r0, #0
 8000454:	bd10      	pop	{r4, pc}
 8000456:	2001      	movs	r0, #1
 8000458:	bd10      	pop	{r4, pc}
 800045a:	46c0      	nop			@ (mov r8, r8)

0800045c <__aeabi_dcmpge>:
 800045c:	b510      	push	{r4, lr}
 800045e:	f000 fc65 	bl	8000d2c <__gedf2>
 8000462:	2800      	cmp	r0, #0
 8000464:	da01      	bge.n	800046a <__aeabi_dcmpge+0xe>
 8000466:	2000      	movs	r0, #0
 8000468:	bd10      	pop	{r4, pc}
 800046a:	2001      	movs	r0, #1
 800046c:	bd10      	pop	{r4, pc}
 800046e:	46c0      	nop			@ (mov r8, r8)

08000470 <__aeabi_cfrcmple>:
 8000470:	4684      	mov	ip, r0
 8000472:	0008      	movs	r0, r1
 8000474:	4661      	mov	r1, ip
 8000476:	e7ff      	b.n	8000478 <__aeabi_cfcmpeq>

08000478 <__aeabi_cfcmpeq>:
 8000478:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800047a:	f000 f8ab 	bl	80005d4 <__lesf2>
 800047e:	2800      	cmp	r0, #0
 8000480:	d401      	bmi.n	8000486 <__aeabi_cfcmpeq+0xe>
 8000482:	2100      	movs	r1, #0
 8000484:	42c8      	cmn	r0, r1
 8000486:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000488 <__aeabi_fcmpeq>:
 8000488:	b510      	push	{r4, lr}
 800048a:	f000 f82b 	bl	80004e4 <__eqsf2>
 800048e:	4240      	negs	r0, r0
 8000490:	3001      	adds	r0, #1
 8000492:	bd10      	pop	{r4, pc}

08000494 <__aeabi_fcmplt>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 f89d 	bl	80005d4 <__lesf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	db01      	blt.n	80004a2 <__aeabi_fcmplt+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			@ (mov r8, r8)

080004a8 <__aeabi_fcmple>:
 80004a8:	b510      	push	{r4, lr}
 80004aa:	f000 f893 	bl	80005d4 <__lesf2>
 80004ae:	2800      	cmp	r0, #0
 80004b0:	dd01      	ble.n	80004b6 <__aeabi_fcmple+0xe>
 80004b2:	2000      	movs	r0, #0
 80004b4:	bd10      	pop	{r4, pc}
 80004b6:	2001      	movs	r0, #1
 80004b8:	bd10      	pop	{r4, pc}
 80004ba:	46c0      	nop			@ (mov r8, r8)

080004bc <__aeabi_fcmpgt>:
 80004bc:	b510      	push	{r4, lr}
 80004be:	f000 f839 	bl	8000534 <__gesf2>
 80004c2:	2800      	cmp	r0, #0
 80004c4:	dc01      	bgt.n	80004ca <__aeabi_fcmpgt+0xe>
 80004c6:	2000      	movs	r0, #0
 80004c8:	bd10      	pop	{r4, pc}
 80004ca:	2001      	movs	r0, #1
 80004cc:	bd10      	pop	{r4, pc}
 80004ce:	46c0      	nop			@ (mov r8, r8)

080004d0 <__aeabi_fcmpge>:
 80004d0:	b510      	push	{r4, lr}
 80004d2:	f000 f82f 	bl	8000534 <__gesf2>
 80004d6:	2800      	cmp	r0, #0
 80004d8:	da01      	bge.n	80004de <__aeabi_fcmpge+0xe>
 80004da:	2000      	movs	r0, #0
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	2001      	movs	r0, #1
 80004e0:	bd10      	pop	{r4, pc}
 80004e2:	46c0      	nop			@ (mov r8, r8)

080004e4 <__eqsf2>:
 80004e4:	b570      	push	{r4, r5, r6, lr}
 80004e6:	0042      	lsls	r2, r0, #1
 80004e8:	024e      	lsls	r6, r1, #9
 80004ea:	004c      	lsls	r4, r1, #1
 80004ec:	0245      	lsls	r5, r0, #9
 80004ee:	0a6d      	lsrs	r5, r5, #9
 80004f0:	0e12      	lsrs	r2, r2, #24
 80004f2:	0fc3      	lsrs	r3, r0, #31
 80004f4:	0a76      	lsrs	r6, r6, #9
 80004f6:	0e24      	lsrs	r4, r4, #24
 80004f8:	0fc9      	lsrs	r1, r1, #31
 80004fa:	2aff      	cmp	r2, #255	@ 0xff
 80004fc:	d010      	beq.n	8000520 <__eqsf2+0x3c>
 80004fe:	2cff      	cmp	r4, #255	@ 0xff
 8000500:	d00c      	beq.n	800051c <__eqsf2+0x38>
 8000502:	2001      	movs	r0, #1
 8000504:	42a2      	cmp	r2, r4
 8000506:	d10a      	bne.n	800051e <__eqsf2+0x3a>
 8000508:	42b5      	cmp	r5, r6
 800050a:	d108      	bne.n	800051e <__eqsf2+0x3a>
 800050c:	428b      	cmp	r3, r1
 800050e:	d00f      	beq.n	8000530 <__eqsf2+0x4c>
 8000510:	2a00      	cmp	r2, #0
 8000512:	d104      	bne.n	800051e <__eqsf2+0x3a>
 8000514:	0028      	movs	r0, r5
 8000516:	1e43      	subs	r3, r0, #1
 8000518:	4198      	sbcs	r0, r3
 800051a:	e000      	b.n	800051e <__eqsf2+0x3a>
 800051c:	2001      	movs	r0, #1
 800051e:	bd70      	pop	{r4, r5, r6, pc}
 8000520:	2001      	movs	r0, #1
 8000522:	2cff      	cmp	r4, #255	@ 0xff
 8000524:	d1fb      	bne.n	800051e <__eqsf2+0x3a>
 8000526:	4335      	orrs	r5, r6
 8000528:	d1f9      	bne.n	800051e <__eqsf2+0x3a>
 800052a:	404b      	eors	r3, r1
 800052c:	0018      	movs	r0, r3
 800052e:	e7f6      	b.n	800051e <__eqsf2+0x3a>
 8000530:	2000      	movs	r0, #0
 8000532:	e7f4      	b.n	800051e <__eqsf2+0x3a>

08000534 <__gesf2>:
 8000534:	b530      	push	{r4, r5, lr}
 8000536:	0042      	lsls	r2, r0, #1
 8000538:	0244      	lsls	r4, r0, #9
 800053a:	024d      	lsls	r5, r1, #9
 800053c:	0fc3      	lsrs	r3, r0, #31
 800053e:	0048      	lsls	r0, r1, #1
 8000540:	0a64      	lsrs	r4, r4, #9
 8000542:	0e12      	lsrs	r2, r2, #24
 8000544:	0a6d      	lsrs	r5, r5, #9
 8000546:	0e00      	lsrs	r0, r0, #24
 8000548:	0fc9      	lsrs	r1, r1, #31
 800054a:	2aff      	cmp	r2, #255	@ 0xff
 800054c:	d019      	beq.n	8000582 <__gesf2+0x4e>
 800054e:	28ff      	cmp	r0, #255	@ 0xff
 8000550:	d00b      	beq.n	800056a <__gesf2+0x36>
 8000552:	2a00      	cmp	r2, #0
 8000554:	d11e      	bne.n	8000594 <__gesf2+0x60>
 8000556:	2800      	cmp	r0, #0
 8000558:	d10b      	bne.n	8000572 <__gesf2+0x3e>
 800055a:	2d00      	cmp	r5, #0
 800055c:	d027      	beq.n	80005ae <__gesf2+0x7a>
 800055e:	2c00      	cmp	r4, #0
 8000560:	d134      	bne.n	80005cc <__gesf2+0x98>
 8000562:	2900      	cmp	r1, #0
 8000564:	d02f      	beq.n	80005c6 <__gesf2+0x92>
 8000566:	0008      	movs	r0, r1
 8000568:	bd30      	pop	{r4, r5, pc}
 800056a:	2d00      	cmp	r5, #0
 800056c:	d128      	bne.n	80005c0 <__gesf2+0x8c>
 800056e:	2a00      	cmp	r2, #0
 8000570:	d101      	bne.n	8000576 <__gesf2+0x42>
 8000572:	2c00      	cmp	r4, #0
 8000574:	d0f5      	beq.n	8000562 <__gesf2+0x2e>
 8000576:	428b      	cmp	r3, r1
 8000578:	d107      	bne.n	800058a <__gesf2+0x56>
 800057a:	2b00      	cmp	r3, #0
 800057c:	d023      	beq.n	80005c6 <__gesf2+0x92>
 800057e:	0018      	movs	r0, r3
 8000580:	e7f2      	b.n	8000568 <__gesf2+0x34>
 8000582:	2c00      	cmp	r4, #0
 8000584:	d11c      	bne.n	80005c0 <__gesf2+0x8c>
 8000586:	28ff      	cmp	r0, #255	@ 0xff
 8000588:	d014      	beq.n	80005b4 <__gesf2+0x80>
 800058a:	1e58      	subs	r0, r3, #1
 800058c:	2302      	movs	r3, #2
 800058e:	4018      	ands	r0, r3
 8000590:	3801      	subs	r0, #1
 8000592:	e7e9      	b.n	8000568 <__gesf2+0x34>
 8000594:	2800      	cmp	r0, #0
 8000596:	d0f8      	beq.n	800058a <__gesf2+0x56>
 8000598:	428b      	cmp	r3, r1
 800059a:	d1f6      	bne.n	800058a <__gesf2+0x56>
 800059c:	4282      	cmp	r2, r0
 800059e:	dcf4      	bgt.n	800058a <__gesf2+0x56>
 80005a0:	dbeb      	blt.n	800057a <__gesf2+0x46>
 80005a2:	42ac      	cmp	r4, r5
 80005a4:	d8f1      	bhi.n	800058a <__gesf2+0x56>
 80005a6:	2000      	movs	r0, #0
 80005a8:	42ac      	cmp	r4, r5
 80005aa:	d2dd      	bcs.n	8000568 <__gesf2+0x34>
 80005ac:	e7e5      	b.n	800057a <__gesf2+0x46>
 80005ae:	2c00      	cmp	r4, #0
 80005b0:	d0da      	beq.n	8000568 <__gesf2+0x34>
 80005b2:	e7ea      	b.n	800058a <__gesf2+0x56>
 80005b4:	2d00      	cmp	r5, #0
 80005b6:	d103      	bne.n	80005c0 <__gesf2+0x8c>
 80005b8:	428b      	cmp	r3, r1
 80005ba:	d1e6      	bne.n	800058a <__gesf2+0x56>
 80005bc:	2000      	movs	r0, #0
 80005be:	e7d3      	b.n	8000568 <__gesf2+0x34>
 80005c0:	2002      	movs	r0, #2
 80005c2:	4240      	negs	r0, r0
 80005c4:	e7d0      	b.n	8000568 <__gesf2+0x34>
 80005c6:	2001      	movs	r0, #1
 80005c8:	4240      	negs	r0, r0
 80005ca:	e7cd      	b.n	8000568 <__gesf2+0x34>
 80005cc:	428b      	cmp	r3, r1
 80005ce:	d0e8      	beq.n	80005a2 <__gesf2+0x6e>
 80005d0:	e7db      	b.n	800058a <__gesf2+0x56>
 80005d2:	46c0      	nop			@ (mov r8, r8)

080005d4 <__lesf2>:
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	0042      	lsls	r2, r0, #1
 80005d8:	0244      	lsls	r4, r0, #9
 80005da:	024d      	lsls	r5, r1, #9
 80005dc:	0fc3      	lsrs	r3, r0, #31
 80005de:	0048      	lsls	r0, r1, #1
 80005e0:	0a64      	lsrs	r4, r4, #9
 80005e2:	0e12      	lsrs	r2, r2, #24
 80005e4:	0a6d      	lsrs	r5, r5, #9
 80005e6:	0e00      	lsrs	r0, r0, #24
 80005e8:	0fc9      	lsrs	r1, r1, #31
 80005ea:	2aff      	cmp	r2, #255	@ 0xff
 80005ec:	d01a      	beq.n	8000624 <__lesf2+0x50>
 80005ee:	28ff      	cmp	r0, #255	@ 0xff
 80005f0:	d00e      	beq.n	8000610 <__lesf2+0x3c>
 80005f2:	2a00      	cmp	r2, #0
 80005f4:	d11e      	bne.n	8000634 <__lesf2+0x60>
 80005f6:	2800      	cmp	r0, #0
 80005f8:	d10e      	bne.n	8000618 <__lesf2+0x44>
 80005fa:	2d00      	cmp	r5, #0
 80005fc:	d02a      	beq.n	8000654 <__lesf2+0x80>
 80005fe:	2c00      	cmp	r4, #0
 8000600:	d00c      	beq.n	800061c <__lesf2+0x48>
 8000602:	428b      	cmp	r3, r1
 8000604:	d01d      	beq.n	8000642 <__lesf2+0x6e>
 8000606:	1e58      	subs	r0, r3, #1
 8000608:	2302      	movs	r3, #2
 800060a:	4018      	ands	r0, r3
 800060c:	3801      	subs	r0, #1
 800060e:	e010      	b.n	8000632 <__lesf2+0x5e>
 8000610:	2d00      	cmp	r5, #0
 8000612:	d10d      	bne.n	8000630 <__lesf2+0x5c>
 8000614:	2a00      	cmp	r2, #0
 8000616:	d120      	bne.n	800065a <__lesf2+0x86>
 8000618:	2c00      	cmp	r4, #0
 800061a:	d11e      	bne.n	800065a <__lesf2+0x86>
 800061c:	2900      	cmp	r1, #0
 800061e:	d023      	beq.n	8000668 <__lesf2+0x94>
 8000620:	0008      	movs	r0, r1
 8000622:	e006      	b.n	8000632 <__lesf2+0x5e>
 8000624:	2c00      	cmp	r4, #0
 8000626:	d103      	bne.n	8000630 <__lesf2+0x5c>
 8000628:	28ff      	cmp	r0, #255	@ 0xff
 800062a:	d1ec      	bne.n	8000606 <__lesf2+0x32>
 800062c:	2d00      	cmp	r5, #0
 800062e:	d017      	beq.n	8000660 <__lesf2+0x8c>
 8000630:	2002      	movs	r0, #2
 8000632:	bd30      	pop	{r4, r5, pc}
 8000634:	2800      	cmp	r0, #0
 8000636:	d0e6      	beq.n	8000606 <__lesf2+0x32>
 8000638:	428b      	cmp	r3, r1
 800063a:	d1e4      	bne.n	8000606 <__lesf2+0x32>
 800063c:	4282      	cmp	r2, r0
 800063e:	dce2      	bgt.n	8000606 <__lesf2+0x32>
 8000640:	db04      	blt.n	800064c <__lesf2+0x78>
 8000642:	42ac      	cmp	r4, r5
 8000644:	d8df      	bhi.n	8000606 <__lesf2+0x32>
 8000646:	2000      	movs	r0, #0
 8000648:	42ac      	cmp	r4, r5
 800064a:	d2f2      	bcs.n	8000632 <__lesf2+0x5e>
 800064c:	2b00      	cmp	r3, #0
 800064e:	d00b      	beq.n	8000668 <__lesf2+0x94>
 8000650:	0018      	movs	r0, r3
 8000652:	e7ee      	b.n	8000632 <__lesf2+0x5e>
 8000654:	2c00      	cmp	r4, #0
 8000656:	d0ec      	beq.n	8000632 <__lesf2+0x5e>
 8000658:	e7d5      	b.n	8000606 <__lesf2+0x32>
 800065a:	428b      	cmp	r3, r1
 800065c:	d1d3      	bne.n	8000606 <__lesf2+0x32>
 800065e:	e7f5      	b.n	800064c <__lesf2+0x78>
 8000660:	2000      	movs	r0, #0
 8000662:	428b      	cmp	r3, r1
 8000664:	d0e5      	beq.n	8000632 <__lesf2+0x5e>
 8000666:	e7ce      	b.n	8000606 <__lesf2+0x32>
 8000668:	2001      	movs	r0, #1
 800066a:	4240      	negs	r0, r0
 800066c:	e7e1      	b.n	8000632 <__lesf2+0x5e>
 800066e:	46c0      	nop			@ (mov r8, r8)

08000670 <__aeabi_ddiv>:
 8000670:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000672:	46de      	mov	lr, fp
 8000674:	4645      	mov	r5, r8
 8000676:	4657      	mov	r7, sl
 8000678:	464e      	mov	r6, r9
 800067a:	b5e0      	push	{r5, r6, r7, lr}
 800067c:	b087      	sub	sp, #28
 800067e:	9200      	str	r2, [sp, #0]
 8000680:	9301      	str	r3, [sp, #4]
 8000682:	030b      	lsls	r3, r1, #12
 8000684:	0b1b      	lsrs	r3, r3, #12
 8000686:	469b      	mov	fp, r3
 8000688:	0fca      	lsrs	r2, r1, #31
 800068a:	004b      	lsls	r3, r1, #1
 800068c:	0004      	movs	r4, r0
 800068e:	4680      	mov	r8, r0
 8000690:	0d5b      	lsrs	r3, r3, #21
 8000692:	9202      	str	r2, [sp, #8]
 8000694:	d100      	bne.n	8000698 <__aeabi_ddiv+0x28>
 8000696:	e16a      	b.n	800096e <__aeabi_ddiv+0x2fe>
 8000698:	4ad4      	ldr	r2, [pc, #848]	@ (80009ec <__aeabi_ddiv+0x37c>)
 800069a:	4293      	cmp	r3, r2
 800069c:	d100      	bne.n	80006a0 <__aeabi_ddiv+0x30>
 800069e:	e18c      	b.n	80009ba <__aeabi_ddiv+0x34a>
 80006a0:	4659      	mov	r1, fp
 80006a2:	0f42      	lsrs	r2, r0, #29
 80006a4:	00c9      	lsls	r1, r1, #3
 80006a6:	430a      	orrs	r2, r1
 80006a8:	2180      	movs	r1, #128	@ 0x80
 80006aa:	0409      	lsls	r1, r1, #16
 80006ac:	4311      	orrs	r1, r2
 80006ae:	00c2      	lsls	r2, r0, #3
 80006b0:	4690      	mov	r8, r2
 80006b2:	4acf      	ldr	r2, [pc, #828]	@ (80009f0 <__aeabi_ddiv+0x380>)
 80006b4:	4689      	mov	r9, r1
 80006b6:	4692      	mov	sl, r2
 80006b8:	449a      	add	sl, r3
 80006ba:	2300      	movs	r3, #0
 80006bc:	2400      	movs	r4, #0
 80006be:	9303      	str	r3, [sp, #12]
 80006c0:	9e00      	ldr	r6, [sp, #0]
 80006c2:	9f01      	ldr	r7, [sp, #4]
 80006c4:	033b      	lsls	r3, r7, #12
 80006c6:	0b1b      	lsrs	r3, r3, #12
 80006c8:	469b      	mov	fp, r3
 80006ca:	007b      	lsls	r3, r7, #1
 80006cc:	0030      	movs	r0, r6
 80006ce:	0d5b      	lsrs	r3, r3, #21
 80006d0:	0ffd      	lsrs	r5, r7, #31
 80006d2:	2b00      	cmp	r3, #0
 80006d4:	d100      	bne.n	80006d8 <__aeabi_ddiv+0x68>
 80006d6:	e128      	b.n	800092a <__aeabi_ddiv+0x2ba>
 80006d8:	4ac4      	ldr	r2, [pc, #784]	@ (80009ec <__aeabi_ddiv+0x37c>)
 80006da:	4293      	cmp	r3, r2
 80006dc:	d100      	bne.n	80006e0 <__aeabi_ddiv+0x70>
 80006de:	e177      	b.n	80009d0 <__aeabi_ddiv+0x360>
 80006e0:	4659      	mov	r1, fp
 80006e2:	0f72      	lsrs	r2, r6, #29
 80006e4:	00c9      	lsls	r1, r1, #3
 80006e6:	430a      	orrs	r2, r1
 80006e8:	2180      	movs	r1, #128	@ 0x80
 80006ea:	0409      	lsls	r1, r1, #16
 80006ec:	4311      	orrs	r1, r2
 80006ee:	468b      	mov	fp, r1
 80006f0:	49bf      	ldr	r1, [pc, #764]	@ (80009f0 <__aeabi_ddiv+0x380>)
 80006f2:	00f2      	lsls	r2, r6, #3
 80006f4:	468c      	mov	ip, r1
 80006f6:	4651      	mov	r1, sl
 80006f8:	4463      	add	r3, ip
 80006fa:	1acb      	subs	r3, r1, r3
 80006fc:	469a      	mov	sl, r3
 80006fe:	2300      	movs	r3, #0
 8000700:	9e02      	ldr	r6, [sp, #8]
 8000702:	406e      	eors	r6, r5
 8000704:	2c0f      	cmp	r4, #15
 8000706:	d827      	bhi.n	8000758 <__aeabi_ddiv+0xe8>
 8000708:	49ba      	ldr	r1, [pc, #744]	@ (80009f4 <__aeabi_ddiv+0x384>)
 800070a:	00a4      	lsls	r4, r4, #2
 800070c:	5909      	ldr	r1, [r1, r4]
 800070e:	468f      	mov	pc, r1
 8000710:	46cb      	mov	fp, r9
 8000712:	4642      	mov	r2, r8
 8000714:	9e02      	ldr	r6, [sp, #8]
 8000716:	9b03      	ldr	r3, [sp, #12]
 8000718:	2b02      	cmp	r3, #2
 800071a:	d016      	beq.n	800074a <__aeabi_ddiv+0xda>
 800071c:	2b03      	cmp	r3, #3
 800071e:	d100      	bne.n	8000722 <__aeabi_ddiv+0xb2>
 8000720:	e2a6      	b.n	8000c70 <__aeabi_ddiv+0x600>
 8000722:	2b01      	cmp	r3, #1
 8000724:	d000      	beq.n	8000728 <__aeabi_ddiv+0xb8>
 8000726:	e0df      	b.n	80008e8 <__aeabi_ddiv+0x278>
 8000728:	2200      	movs	r2, #0
 800072a:	2300      	movs	r3, #0
 800072c:	2400      	movs	r4, #0
 800072e:	4690      	mov	r8, r2
 8000730:	051b      	lsls	r3, r3, #20
 8000732:	4323      	orrs	r3, r4
 8000734:	07f6      	lsls	r6, r6, #31
 8000736:	4333      	orrs	r3, r6
 8000738:	4640      	mov	r0, r8
 800073a:	0019      	movs	r1, r3
 800073c:	b007      	add	sp, #28
 800073e:	bcf0      	pop	{r4, r5, r6, r7}
 8000740:	46bb      	mov	fp, r7
 8000742:	46b2      	mov	sl, r6
 8000744:	46a9      	mov	r9, r5
 8000746:	46a0      	mov	r8, r4
 8000748:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800074a:	2200      	movs	r2, #0
 800074c:	2400      	movs	r4, #0
 800074e:	4690      	mov	r8, r2
 8000750:	4ba6      	ldr	r3, [pc, #664]	@ (80009ec <__aeabi_ddiv+0x37c>)
 8000752:	e7ed      	b.n	8000730 <__aeabi_ddiv+0xc0>
 8000754:	002e      	movs	r6, r5
 8000756:	e7df      	b.n	8000718 <__aeabi_ddiv+0xa8>
 8000758:	45cb      	cmp	fp, r9
 800075a:	d200      	bcs.n	800075e <__aeabi_ddiv+0xee>
 800075c:	e1d4      	b.n	8000b08 <__aeabi_ddiv+0x498>
 800075e:	d100      	bne.n	8000762 <__aeabi_ddiv+0xf2>
 8000760:	e1cf      	b.n	8000b02 <__aeabi_ddiv+0x492>
 8000762:	2301      	movs	r3, #1
 8000764:	425b      	negs	r3, r3
 8000766:	469c      	mov	ip, r3
 8000768:	4644      	mov	r4, r8
 800076a:	4648      	mov	r0, r9
 800076c:	2700      	movs	r7, #0
 800076e:	44e2      	add	sl, ip
 8000770:	465b      	mov	r3, fp
 8000772:	0e15      	lsrs	r5, r2, #24
 8000774:	021b      	lsls	r3, r3, #8
 8000776:	431d      	orrs	r5, r3
 8000778:	0c19      	lsrs	r1, r3, #16
 800077a:	042b      	lsls	r3, r5, #16
 800077c:	0212      	lsls	r2, r2, #8
 800077e:	9500      	str	r5, [sp, #0]
 8000780:	0c1d      	lsrs	r5, r3, #16
 8000782:	4691      	mov	r9, r2
 8000784:	9102      	str	r1, [sp, #8]
 8000786:	9503      	str	r5, [sp, #12]
 8000788:	f7ff fd44 	bl	8000214 <__aeabi_uidivmod>
 800078c:	0002      	movs	r2, r0
 800078e:	436a      	muls	r2, r5
 8000790:	040b      	lsls	r3, r1, #16
 8000792:	0c21      	lsrs	r1, r4, #16
 8000794:	4680      	mov	r8, r0
 8000796:	4319      	orrs	r1, r3
 8000798:	428a      	cmp	r2, r1
 800079a:	d909      	bls.n	80007b0 <__aeabi_ddiv+0x140>
 800079c:	9d00      	ldr	r5, [sp, #0]
 800079e:	2301      	movs	r3, #1
 80007a0:	46ac      	mov	ip, r5
 80007a2:	425b      	negs	r3, r3
 80007a4:	4461      	add	r1, ip
 80007a6:	469c      	mov	ip, r3
 80007a8:	44e0      	add	r8, ip
 80007aa:	428d      	cmp	r5, r1
 80007ac:	d800      	bhi.n	80007b0 <__aeabi_ddiv+0x140>
 80007ae:	e1fb      	b.n	8000ba8 <__aeabi_ddiv+0x538>
 80007b0:	1a88      	subs	r0, r1, r2
 80007b2:	9902      	ldr	r1, [sp, #8]
 80007b4:	f7ff fd2e 	bl	8000214 <__aeabi_uidivmod>
 80007b8:	9a03      	ldr	r2, [sp, #12]
 80007ba:	0424      	lsls	r4, r4, #16
 80007bc:	4342      	muls	r2, r0
 80007be:	0409      	lsls	r1, r1, #16
 80007c0:	0c24      	lsrs	r4, r4, #16
 80007c2:	0003      	movs	r3, r0
 80007c4:	430c      	orrs	r4, r1
 80007c6:	42a2      	cmp	r2, r4
 80007c8:	d906      	bls.n	80007d8 <__aeabi_ddiv+0x168>
 80007ca:	9900      	ldr	r1, [sp, #0]
 80007cc:	3b01      	subs	r3, #1
 80007ce:	468c      	mov	ip, r1
 80007d0:	4464      	add	r4, ip
 80007d2:	42a1      	cmp	r1, r4
 80007d4:	d800      	bhi.n	80007d8 <__aeabi_ddiv+0x168>
 80007d6:	e1e1      	b.n	8000b9c <__aeabi_ddiv+0x52c>
 80007d8:	1aa0      	subs	r0, r4, r2
 80007da:	4642      	mov	r2, r8
 80007dc:	0412      	lsls	r2, r2, #16
 80007de:	431a      	orrs	r2, r3
 80007e0:	4693      	mov	fp, r2
 80007e2:	464b      	mov	r3, r9
 80007e4:	4659      	mov	r1, fp
 80007e6:	0c1b      	lsrs	r3, r3, #16
 80007e8:	001d      	movs	r5, r3
 80007ea:	9304      	str	r3, [sp, #16]
 80007ec:	040b      	lsls	r3, r1, #16
 80007ee:	4649      	mov	r1, r9
 80007f0:	0409      	lsls	r1, r1, #16
 80007f2:	0c09      	lsrs	r1, r1, #16
 80007f4:	000c      	movs	r4, r1
 80007f6:	0c1b      	lsrs	r3, r3, #16
 80007f8:	435c      	muls	r4, r3
 80007fa:	0c12      	lsrs	r2, r2, #16
 80007fc:	436b      	muls	r3, r5
 80007fe:	4688      	mov	r8, r1
 8000800:	4351      	muls	r1, r2
 8000802:	436a      	muls	r2, r5
 8000804:	0c25      	lsrs	r5, r4, #16
 8000806:	46ac      	mov	ip, r5
 8000808:	185b      	adds	r3, r3, r1
 800080a:	4463      	add	r3, ip
 800080c:	4299      	cmp	r1, r3
 800080e:	d903      	bls.n	8000818 <__aeabi_ddiv+0x1a8>
 8000810:	2180      	movs	r1, #128	@ 0x80
 8000812:	0249      	lsls	r1, r1, #9
 8000814:	468c      	mov	ip, r1
 8000816:	4462      	add	r2, ip
 8000818:	0c19      	lsrs	r1, r3, #16
 800081a:	0424      	lsls	r4, r4, #16
 800081c:	041b      	lsls	r3, r3, #16
 800081e:	0c24      	lsrs	r4, r4, #16
 8000820:	188a      	adds	r2, r1, r2
 8000822:	191c      	adds	r4, r3, r4
 8000824:	4290      	cmp	r0, r2
 8000826:	d302      	bcc.n	800082e <__aeabi_ddiv+0x1be>
 8000828:	d116      	bne.n	8000858 <__aeabi_ddiv+0x1e8>
 800082a:	42a7      	cmp	r7, r4
 800082c:	d214      	bcs.n	8000858 <__aeabi_ddiv+0x1e8>
 800082e:	465b      	mov	r3, fp
 8000830:	9d00      	ldr	r5, [sp, #0]
 8000832:	3b01      	subs	r3, #1
 8000834:	444f      	add	r7, r9
 8000836:	9305      	str	r3, [sp, #20]
 8000838:	454f      	cmp	r7, r9
 800083a:	419b      	sbcs	r3, r3
 800083c:	46ac      	mov	ip, r5
 800083e:	425b      	negs	r3, r3
 8000840:	4463      	add	r3, ip
 8000842:	18c0      	adds	r0, r0, r3
 8000844:	4285      	cmp	r5, r0
 8000846:	d300      	bcc.n	800084a <__aeabi_ddiv+0x1da>
 8000848:	e1a1      	b.n	8000b8e <__aeabi_ddiv+0x51e>
 800084a:	4282      	cmp	r2, r0
 800084c:	d900      	bls.n	8000850 <__aeabi_ddiv+0x1e0>
 800084e:	e1f6      	b.n	8000c3e <__aeabi_ddiv+0x5ce>
 8000850:	d100      	bne.n	8000854 <__aeabi_ddiv+0x1e4>
 8000852:	e1f1      	b.n	8000c38 <__aeabi_ddiv+0x5c8>
 8000854:	9b05      	ldr	r3, [sp, #20]
 8000856:	469b      	mov	fp, r3
 8000858:	1b3c      	subs	r4, r7, r4
 800085a:	42a7      	cmp	r7, r4
 800085c:	41bf      	sbcs	r7, r7
 800085e:	9d00      	ldr	r5, [sp, #0]
 8000860:	1a80      	subs	r0, r0, r2
 8000862:	427f      	negs	r7, r7
 8000864:	1bc0      	subs	r0, r0, r7
 8000866:	4285      	cmp	r5, r0
 8000868:	d100      	bne.n	800086c <__aeabi_ddiv+0x1fc>
 800086a:	e1d0      	b.n	8000c0e <__aeabi_ddiv+0x59e>
 800086c:	9902      	ldr	r1, [sp, #8]
 800086e:	f7ff fcd1 	bl	8000214 <__aeabi_uidivmod>
 8000872:	9a03      	ldr	r2, [sp, #12]
 8000874:	040b      	lsls	r3, r1, #16
 8000876:	4342      	muls	r2, r0
 8000878:	0c21      	lsrs	r1, r4, #16
 800087a:	0007      	movs	r7, r0
 800087c:	4319      	orrs	r1, r3
 800087e:	428a      	cmp	r2, r1
 8000880:	d900      	bls.n	8000884 <__aeabi_ddiv+0x214>
 8000882:	e178      	b.n	8000b76 <__aeabi_ddiv+0x506>
 8000884:	1a88      	subs	r0, r1, r2
 8000886:	9902      	ldr	r1, [sp, #8]
 8000888:	f7ff fcc4 	bl	8000214 <__aeabi_uidivmod>
 800088c:	9a03      	ldr	r2, [sp, #12]
 800088e:	0424      	lsls	r4, r4, #16
 8000890:	4342      	muls	r2, r0
 8000892:	0409      	lsls	r1, r1, #16
 8000894:	0c24      	lsrs	r4, r4, #16
 8000896:	0003      	movs	r3, r0
 8000898:	430c      	orrs	r4, r1
 800089a:	42a2      	cmp	r2, r4
 800089c:	d900      	bls.n	80008a0 <__aeabi_ddiv+0x230>
 800089e:	e15d      	b.n	8000b5c <__aeabi_ddiv+0x4ec>
 80008a0:	4641      	mov	r1, r8
 80008a2:	1aa4      	subs	r4, r4, r2
 80008a4:	043a      	lsls	r2, r7, #16
 80008a6:	431a      	orrs	r2, r3
 80008a8:	9d04      	ldr	r5, [sp, #16]
 80008aa:	0413      	lsls	r3, r2, #16
 80008ac:	0c1b      	lsrs	r3, r3, #16
 80008ae:	4359      	muls	r1, r3
 80008b0:	4647      	mov	r7, r8
 80008b2:	436b      	muls	r3, r5
 80008b4:	469c      	mov	ip, r3
 80008b6:	0c10      	lsrs	r0, r2, #16
 80008b8:	4347      	muls	r7, r0
 80008ba:	0c0b      	lsrs	r3, r1, #16
 80008bc:	44bc      	add	ip, r7
 80008be:	4463      	add	r3, ip
 80008c0:	4368      	muls	r0, r5
 80008c2:	429f      	cmp	r7, r3
 80008c4:	d903      	bls.n	80008ce <__aeabi_ddiv+0x25e>
 80008c6:	2580      	movs	r5, #128	@ 0x80
 80008c8:	026d      	lsls	r5, r5, #9
 80008ca:	46ac      	mov	ip, r5
 80008cc:	4460      	add	r0, ip
 80008ce:	0c1f      	lsrs	r7, r3, #16
 80008d0:	0409      	lsls	r1, r1, #16
 80008d2:	041b      	lsls	r3, r3, #16
 80008d4:	0c09      	lsrs	r1, r1, #16
 80008d6:	183f      	adds	r7, r7, r0
 80008d8:	185b      	adds	r3, r3, r1
 80008da:	42bc      	cmp	r4, r7
 80008dc:	d200      	bcs.n	80008e0 <__aeabi_ddiv+0x270>
 80008de:	e102      	b.n	8000ae6 <__aeabi_ddiv+0x476>
 80008e0:	d100      	bne.n	80008e4 <__aeabi_ddiv+0x274>
 80008e2:	e0fd      	b.n	8000ae0 <__aeabi_ddiv+0x470>
 80008e4:	2301      	movs	r3, #1
 80008e6:	431a      	orrs	r2, r3
 80008e8:	4b43      	ldr	r3, [pc, #268]	@ (80009f8 <__aeabi_ddiv+0x388>)
 80008ea:	4453      	add	r3, sl
 80008ec:	2b00      	cmp	r3, #0
 80008ee:	dc00      	bgt.n	80008f2 <__aeabi_ddiv+0x282>
 80008f0:	e0ae      	b.n	8000a50 <__aeabi_ddiv+0x3e0>
 80008f2:	0751      	lsls	r1, r2, #29
 80008f4:	d000      	beq.n	80008f8 <__aeabi_ddiv+0x288>
 80008f6:	e198      	b.n	8000c2a <__aeabi_ddiv+0x5ba>
 80008f8:	4659      	mov	r1, fp
 80008fa:	01c9      	lsls	r1, r1, #7
 80008fc:	d506      	bpl.n	800090c <__aeabi_ddiv+0x29c>
 80008fe:	4659      	mov	r1, fp
 8000900:	4b3e      	ldr	r3, [pc, #248]	@ (80009fc <__aeabi_ddiv+0x38c>)
 8000902:	4019      	ands	r1, r3
 8000904:	2380      	movs	r3, #128	@ 0x80
 8000906:	468b      	mov	fp, r1
 8000908:	00db      	lsls	r3, r3, #3
 800090a:	4453      	add	r3, sl
 800090c:	493c      	ldr	r1, [pc, #240]	@ (8000a00 <__aeabi_ddiv+0x390>)
 800090e:	428b      	cmp	r3, r1
 8000910:	dd00      	ble.n	8000914 <__aeabi_ddiv+0x2a4>
 8000912:	e71a      	b.n	800074a <__aeabi_ddiv+0xda>
 8000914:	4659      	mov	r1, fp
 8000916:	08d2      	lsrs	r2, r2, #3
 8000918:	0749      	lsls	r1, r1, #29
 800091a:	4311      	orrs	r1, r2
 800091c:	465a      	mov	r2, fp
 800091e:	055b      	lsls	r3, r3, #21
 8000920:	0254      	lsls	r4, r2, #9
 8000922:	4688      	mov	r8, r1
 8000924:	0b24      	lsrs	r4, r4, #12
 8000926:	0d5b      	lsrs	r3, r3, #21
 8000928:	e702      	b.n	8000730 <__aeabi_ddiv+0xc0>
 800092a:	465a      	mov	r2, fp
 800092c:	9b00      	ldr	r3, [sp, #0]
 800092e:	431a      	orrs	r2, r3
 8000930:	d100      	bne.n	8000934 <__aeabi_ddiv+0x2c4>
 8000932:	e07e      	b.n	8000a32 <__aeabi_ddiv+0x3c2>
 8000934:	465b      	mov	r3, fp
 8000936:	2b00      	cmp	r3, #0
 8000938:	d100      	bne.n	800093c <__aeabi_ddiv+0x2cc>
 800093a:	e100      	b.n	8000b3e <__aeabi_ddiv+0x4ce>
 800093c:	4658      	mov	r0, fp
 800093e:	f001 fa39 	bl	8001db4 <__clzsi2>
 8000942:	0002      	movs	r2, r0
 8000944:	0003      	movs	r3, r0
 8000946:	3a0b      	subs	r2, #11
 8000948:	271d      	movs	r7, #29
 800094a:	9e00      	ldr	r6, [sp, #0]
 800094c:	1aba      	subs	r2, r7, r2
 800094e:	0019      	movs	r1, r3
 8000950:	4658      	mov	r0, fp
 8000952:	40d6      	lsrs	r6, r2
 8000954:	3908      	subs	r1, #8
 8000956:	4088      	lsls	r0, r1
 8000958:	0032      	movs	r2, r6
 800095a:	4302      	orrs	r2, r0
 800095c:	4693      	mov	fp, r2
 800095e:	9a00      	ldr	r2, [sp, #0]
 8000960:	408a      	lsls	r2, r1
 8000962:	4928      	ldr	r1, [pc, #160]	@ (8000a04 <__aeabi_ddiv+0x394>)
 8000964:	4453      	add	r3, sl
 8000966:	468a      	mov	sl, r1
 8000968:	449a      	add	sl, r3
 800096a:	2300      	movs	r3, #0
 800096c:	e6c8      	b.n	8000700 <__aeabi_ddiv+0x90>
 800096e:	465b      	mov	r3, fp
 8000970:	4303      	orrs	r3, r0
 8000972:	4699      	mov	r9, r3
 8000974:	d056      	beq.n	8000a24 <__aeabi_ddiv+0x3b4>
 8000976:	465b      	mov	r3, fp
 8000978:	2b00      	cmp	r3, #0
 800097a:	d100      	bne.n	800097e <__aeabi_ddiv+0x30e>
 800097c:	e0cd      	b.n	8000b1a <__aeabi_ddiv+0x4aa>
 800097e:	4658      	mov	r0, fp
 8000980:	f001 fa18 	bl	8001db4 <__clzsi2>
 8000984:	230b      	movs	r3, #11
 8000986:	425b      	negs	r3, r3
 8000988:	469c      	mov	ip, r3
 800098a:	0002      	movs	r2, r0
 800098c:	4484      	add	ip, r0
 800098e:	4666      	mov	r6, ip
 8000990:	231d      	movs	r3, #29
 8000992:	1b9b      	subs	r3, r3, r6
 8000994:	0026      	movs	r6, r4
 8000996:	0011      	movs	r1, r2
 8000998:	4658      	mov	r0, fp
 800099a:	40de      	lsrs	r6, r3
 800099c:	3908      	subs	r1, #8
 800099e:	4088      	lsls	r0, r1
 80009a0:	0033      	movs	r3, r6
 80009a2:	4303      	orrs	r3, r0
 80009a4:	4699      	mov	r9, r3
 80009a6:	0023      	movs	r3, r4
 80009a8:	408b      	lsls	r3, r1
 80009aa:	4698      	mov	r8, r3
 80009ac:	4b16      	ldr	r3, [pc, #88]	@ (8000a08 <__aeabi_ddiv+0x398>)
 80009ae:	2400      	movs	r4, #0
 80009b0:	1a9b      	subs	r3, r3, r2
 80009b2:	469a      	mov	sl, r3
 80009b4:	2300      	movs	r3, #0
 80009b6:	9303      	str	r3, [sp, #12]
 80009b8:	e682      	b.n	80006c0 <__aeabi_ddiv+0x50>
 80009ba:	465a      	mov	r2, fp
 80009bc:	4302      	orrs	r2, r0
 80009be:	4691      	mov	r9, r2
 80009c0:	d12a      	bne.n	8000a18 <__aeabi_ddiv+0x3a8>
 80009c2:	2200      	movs	r2, #0
 80009c4:	469a      	mov	sl, r3
 80009c6:	2302      	movs	r3, #2
 80009c8:	4690      	mov	r8, r2
 80009ca:	2408      	movs	r4, #8
 80009cc:	9303      	str	r3, [sp, #12]
 80009ce:	e677      	b.n	80006c0 <__aeabi_ddiv+0x50>
 80009d0:	465a      	mov	r2, fp
 80009d2:	9b00      	ldr	r3, [sp, #0]
 80009d4:	431a      	orrs	r2, r3
 80009d6:	4b0d      	ldr	r3, [pc, #52]	@ (8000a0c <__aeabi_ddiv+0x39c>)
 80009d8:	469c      	mov	ip, r3
 80009da:	44e2      	add	sl, ip
 80009dc:	2a00      	cmp	r2, #0
 80009de:	d117      	bne.n	8000a10 <__aeabi_ddiv+0x3a0>
 80009e0:	2302      	movs	r3, #2
 80009e2:	431c      	orrs	r4, r3
 80009e4:	2300      	movs	r3, #0
 80009e6:	469b      	mov	fp, r3
 80009e8:	3302      	adds	r3, #2
 80009ea:	e689      	b.n	8000700 <__aeabi_ddiv+0x90>
 80009ec:	000007ff 	.word	0x000007ff
 80009f0:	fffffc01 	.word	0xfffffc01
 80009f4:	08002f50 	.word	0x08002f50
 80009f8:	000003ff 	.word	0x000003ff
 80009fc:	feffffff 	.word	0xfeffffff
 8000a00:	000007fe 	.word	0x000007fe
 8000a04:	000003f3 	.word	0x000003f3
 8000a08:	fffffc0d 	.word	0xfffffc0d
 8000a0c:	fffff801 	.word	0xfffff801
 8000a10:	2303      	movs	r3, #3
 8000a12:	0032      	movs	r2, r6
 8000a14:	431c      	orrs	r4, r3
 8000a16:	e673      	b.n	8000700 <__aeabi_ddiv+0x90>
 8000a18:	469a      	mov	sl, r3
 8000a1a:	2303      	movs	r3, #3
 8000a1c:	46d9      	mov	r9, fp
 8000a1e:	240c      	movs	r4, #12
 8000a20:	9303      	str	r3, [sp, #12]
 8000a22:	e64d      	b.n	80006c0 <__aeabi_ddiv+0x50>
 8000a24:	2300      	movs	r3, #0
 8000a26:	4698      	mov	r8, r3
 8000a28:	469a      	mov	sl, r3
 8000a2a:	3301      	adds	r3, #1
 8000a2c:	2404      	movs	r4, #4
 8000a2e:	9303      	str	r3, [sp, #12]
 8000a30:	e646      	b.n	80006c0 <__aeabi_ddiv+0x50>
 8000a32:	2301      	movs	r3, #1
 8000a34:	431c      	orrs	r4, r3
 8000a36:	2300      	movs	r3, #0
 8000a38:	469b      	mov	fp, r3
 8000a3a:	3301      	adds	r3, #1
 8000a3c:	e660      	b.n	8000700 <__aeabi_ddiv+0x90>
 8000a3e:	2300      	movs	r3, #0
 8000a40:	2480      	movs	r4, #128	@ 0x80
 8000a42:	4698      	mov	r8, r3
 8000a44:	2600      	movs	r6, #0
 8000a46:	4b92      	ldr	r3, [pc, #584]	@ (8000c90 <__aeabi_ddiv+0x620>)
 8000a48:	0324      	lsls	r4, r4, #12
 8000a4a:	e671      	b.n	8000730 <__aeabi_ddiv+0xc0>
 8000a4c:	2201      	movs	r2, #1
 8000a4e:	4252      	negs	r2, r2
 8000a50:	2101      	movs	r1, #1
 8000a52:	1ac9      	subs	r1, r1, r3
 8000a54:	2938      	cmp	r1, #56	@ 0x38
 8000a56:	dd00      	ble.n	8000a5a <__aeabi_ddiv+0x3ea>
 8000a58:	e666      	b.n	8000728 <__aeabi_ddiv+0xb8>
 8000a5a:	291f      	cmp	r1, #31
 8000a5c:	dc00      	bgt.n	8000a60 <__aeabi_ddiv+0x3f0>
 8000a5e:	e0ab      	b.n	8000bb8 <__aeabi_ddiv+0x548>
 8000a60:	201f      	movs	r0, #31
 8000a62:	4240      	negs	r0, r0
 8000a64:	1ac3      	subs	r3, r0, r3
 8000a66:	4658      	mov	r0, fp
 8000a68:	40d8      	lsrs	r0, r3
 8000a6a:	0003      	movs	r3, r0
 8000a6c:	2920      	cmp	r1, #32
 8000a6e:	d004      	beq.n	8000a7a <__aeabi_ddiv+0x40a>
 8000a70:	4658      	mov	r0, fp
 8000a72:	4988      	ldr	r1, [pc, #544]	@ (8000c94 <__aeabi_ddiv+0x624>)
 8000a74:	4451      	add	r1, sl
 8000a76:	4088      	lsls	r0, r1
 8000a78:	4302      	orrs	r2, r0
 8000a7a:	1e51      	subs	r1, r2, #1
 8000a7c:	418a      	sbcs	r2, r1
 8000a7e:	431a      	orrs	r2, r3
 8000a80:	2307      	movs	r3, #7
 8000a82:	0019      	movs	r1, r3
 8000a84:	2400      	movs	r4, #0
 8000a86:	4011      	ands	r1, r2
 8000a88:	4213      	tst	r3, r2
 8000a8a:	d00c      	beq.n	8000aa6 <__aeabi_ddiv+0x436>
 8000a8c:	230f      	movs	r3, #15
 8000a8e:	4013      	ands	r3, r2
 8000a90:	2b04      	cmp	r3, #4
 8000a92:	d100      	bne.n	8000a96 <__aeabi_ddiv+0x426>
 8000a94:	e0f9      	b.n	8000c8a <__aeabi_ddiv+0x61a>
 8000a96:	1d11      	adds	r1, r2, #4
 8000a98:	4291      	cmp	r1, r2
 8000a9a:	419b      	sbcs	r3, r3
 8000a9c:	000a      	movs	r2, r1
 8000a9e:	425b      	negs	r3, r3
 8000aa0:	0759      	lsls	r1, r3, #29
 8000aa2:	025b      	lsls	r3, r3, #9
 8000aa4:	0b1c      	lsrs	r4, r3, #12
 8000aa6:	08d2      	lsrs	r2, r2, #3
 8000aa8:	430a      	orrs	r2, r1
 8000aaa:	4690      	mov	r8, r2
 8000aac:	2300      	movs	r3, #0
 8000aae:	e63f      	b.n	8000730 <__aeabi_ddiv+0xc0>
 8000ab0:	2480      	movs	r4, #128	@ 0x80
 8000ab2:	464b      	mov	r3, r9
 8000ab4:	0324      	lsls	r4, r4, #12
 8000ab6:	4223      	tst	r3, r4
 8000ab8:	d009      	beq.n	8000ace <__aeabi_ddiv+0x45e>
 8000aba:	465b      	mov	r3, fp
 8000abc:	4223      	tst	r3, r4
 8000abe:	d106      	bne.n	8000ace <__aeabi_ddiv+0x45e>
 8000ac0:	431c      	orrs	r4, r3
 8000ac2:	0324      	lsls	r4, r4, #12
 8000ac4:	002e      	movs	r6, r5
 8000ac6:	4690      	mov	r8, r2
 8000ac8:	4b71      	ldr	r3, [pc, #452]	@ (8000c90 <__aeabi_ddiv+0x620>)
 8000aca:	0b24      	lsrs	r4, r4, #12
 8000acc:	e630      	b.n	8000730 <__aeabi_ddiv+0xc0>
 8000ace:	2480      	movs	r4, #128	@ 0x80
 8000ad0:	464b      	mov	r3, r9
 8000ad2:	0324      	lsls	r4, r4, #12
 8000ad4:	431c      	orrs	r4, r3
 8000ad6:	0324      	lsls	r4, r4, #12
 8000ad8:	9e02      	ldr	r6, [sp, #8]
 8000ada:	4b6d      	ldr	r3, [pc, #436]	@ (8000c90 <__aeabi_ddiv+0x620>)
 8000adc:	0b24      	lsrs	r4, r4, #12
 8000ade:	e627      	b.n	8000730 <__aeabi_ddiv+0xc0>
 8000ae0:	2b00      	cmp	r3, #0
 8000ae2:	d100      	bne.n	8000ae6 <__aeabi_ddiv+0x476>
 8000ae4:	e700      	b.n	80008e8 <__aeabi_ddiv+0x278>
 8000ae6:	9800      	ldr	r0, [sp, #0]
 8000ae8:	1e51      	subs	r1, r2, #1
 8000aea:	4684      	mov	ip, r0
 8000aec:	4464      	add	r4, ip
 8000aee:	4284      	cmp	r4, r0
 8000af0:	d200      	bcs.n	8000af4 <__aeabi_ddiv+0x484>
 8000af2:	e084      	b.n	8000bfe <__aeabi_ddiv+0x58e>
 8000af4:	42bc      	cmp	r4, r7
 8000af6:	d200      	bcs.n	8000afa <__aeabi_ddiv+0x48a>
 8000af8:	e0ae      	b.n	8000c58 <__aeabi_ddiv+0x5e8>
 8000afa:	d100      	bne.n	8000afe <__aeabi_ddiv+0x48e>
 8000afc:	e0c1      	b.n	8000c82 <__aeabi_ddiv+0x612>
 8000afe:	000a      	movs	r2, r1
 8000b00:	e6f0      	b.n	80008e4 <__aeabi_ddiv+0x274>
 8000b02:	4542      	cmp	r2, r8
 8000b04:	d900      	bls.n	8000b08 <__aeabi_ddiv+0x498>
 8000b06:	e62c      	b.n	8000762 <__aeabi_ddiv+0xf2>
 8000b08:	464b      	mov	r3, r9
 8000b0a:	07dc      	lsls	r4, r3, #31
 8000b0c:	0858      	lsrs	r0, r3, #1
 8000b0e:	4643      	mov	r3, r8
 8000b10:	085b      	lsrs	r3, r3, #1
 8000b12:	431c      	orrs	r4, r3
 8000b14:	4643      	mov	r3, r8
 8000b16:	07df      	lsls	r7, r3, #31
 8000b18:	e62a      	b.n	8000770 <__aeabi_ddiv+0x100>
 8000b1a:	f001 f94b 	bl	8001db4 <__clzsi2>
 8000b1e:	2315      	movs	r3, #21
 8000b20:	469c      	mov	ip, r3
 8000b22:	4484      	add	ip, r0
 8000b24:	0002      	movs	r2, r0
 8000b26:	4663      	mov	r3, ip
 8000b28:	3220      	adds	r2, #32
 8000b2a:	2b1c      	cmp	r3, #28
 8000b2c:	dc00      	bgt.n	8000b30 <__aeabi_ddiv+0x4c0>
 8000b2e:	e72e      	b.n	800098e <__aeabi_ddiv+0x31e>
 8000b30:	0023      	movs	r3, r4
 8000b32:	3808      	subs	r0, #8
 8000b34:	4083      	lsls	r3, r0
 8000b36:	4699      	mov	r9, r3
 8000b38:	2300      	movs	r3, #0
 8000b3a:	4698      	mov	r8, r3
 8000b3c:	e736      	b.n	80009ac <__aeabi_ddiv+0x33c>
 8000b3e:	f001 f939 	bl	8001db4 <__clzsi2>
 8000b42:	0002      	movs	r2, r0
 8000b44:	0003      	movs	r3, r0
 8000b46:	3215      	adds	r2, #21
 8000b48:	3320      	adds	r3, #32
 8000b4a:	2a1c      	cmp	r2, #28
 8000b4c:	dc00      	bgt.n	8000b50 <__aeabi_ddiv+0x4e0>
 8000b4e:	e6fb      	b.n	8000948 <__aeabi_ddiv+0x2d8>
 8000b50:	9900      	ldr	r1, [sp, #0]
 8000b52:	3808      	subs	r0, #8
 8000b54:	4081      	lsls	r1, r0
 8000b56:	2200      	movs	r2, #0
 8000b58:	468b      	mov	fp, r1
 8000b5a:	e702      	b.n	8000962 <__aeabi_ddiv+0x2f2>
 8000b5c:	9900      	ldr	r1, [sp, #0]
 8000b5e:	3b01      	subs	r3, #1
 8000b60:	468c      	mov	ip, r1
 8000b62:	4464      	add	r4, ip
 8000b64:	42a1      	cmp	r1, r4
 8000b66:	d900      	bls.n	8000b6a <__aeabi_ddiv+0x4fa>
 8000b68:	e69a      	b.n	80008a0 <__aeabi_ddiv+0x230>
 8000b6a:	42a2      	cmp	r2, r4
 8000b6c:	d800      	bhi.n	8000b70 <__aeabi_ddiv+0x500>
 8000b6e:	e697      	b.n	80008a0 <__aeabi_ddiv+0x230>
 8000b70:	1e83      	subs	r3, r0, #2
 8000b72:	4464      	add	r4, ip
 8000b74:	e694      	b.n	80008a0 <__aeabi_ddiv+0x230>
 8000b76:	46ac      	mov	ip, r5
 8000b78:	4461      	add	r1, ip
 8000b7a:	3f01      	subs	r7, #1
 8000b7c:	428d      	cmp	r5, r1
 8000b7e:	d900      	bls.n	8000b82 <__aeabi_ddiv+0x512>
 8000b80:	e680      	b.n	8000884 <__aeabi_ddiv+0x214>
 8000b82:	428a      	cmp	r2, r1
 8000b84:	d800      	bhi.n	8000b88 <__aeabi_ddiv+0x518>
 8000b86:	e67d      	b.n	8000884 <__aeabi_ddiv+0x214>
 8000b88:	1e87      	subs	r7, r0, #2
 8000b8a:	4461      	add	r1, ip
 8000b8c:	e67a      	b.n	8000884 <__aeabi_ddiv+0x214>
 8000b8e:	4285      	cmp	r5, r0
 8000b90:	d000      	beq.n	8000b94 <__aeabi_ddiv+0x524>
 8000b92:	e65f      	b.n	8000854 <__aeabi_ddiv+0x1e4>
 8000b94:	45b9      	cmp	r9, r7
 8000b96:	d900      	bls.n	8000b9a <__aeabi_ddiv+0x52a>
 8000b98:	e65c      	b.n	8000854 <__aeabi_ddiv+0x1e4>
 8000b9a:	e656      	b.n	800084a <__aeabi_ddiv+0x1da>
 8000b9c:	42a2      	cmp	r2, r4
 8000b9e:	d800      	bhi.n	8000ba2 <__aeabi_ddiv+0x532>
 8000ba0:	e61a      	b.n	80007d8 <__aeabi_ddiv+0x168>
 8000ba2:	1e83      	subs	r3, r0, #2
 8000ba4:	4464      	add	r4, ip
 8000ba6:	e617      	b.n	80007d8 <__aeabi_ddiv+0x168>
 8000ba8:	428a      	cmp	r2, r1
 8000baa:	d800      	bhi.n	8000bae <__aeabi_ddiv+0x53e>
 8000bac:	e600      	b.n	80007b0 <__aeabi_ddiv+0x140>
 8000bae:	46ac      	mov	ip, r5
 8000bb0:	1e83      	subs	r3, r0, #2
 8000bb2:	4698      	mov	r8, r3
 8000bb4:	4461      	add	r1, ip
 8000bb6:	e5fb      	b.n	80007b0 <__aeabi_ddiv+0x140>
 8000bb8:	4837      	ldr	r0, [pc, #220]	@ (8000c98 <__aeabi_ddiv+0x628>)
 8000bba:	0014      	movs	r4, r2
 8000bbc:	4450      	add	r0, sl
 8000bbe:	4082      	lsls	r2, r0
 8000bc0:	465b      	mov	r3, fp
 8000bc2:	0017      	movs	r7, r2
 8000bc4:	4083      	lsls	r3, r0
 8000bc6:	40cc      	lsrs	r4, r1
 8000bc8:	1e7a      	subs	r2, r7, #1
 8000bca:	4197      	sbcs	r7, r2
 8000bcc:	4323      	orrs	r3, r4
 8000bce:	433b      	orrs	r3, r7
 8000bd0:	001a      	movs	r2, r3
 8000bd2:	465b      	mov	r3, fp
 8000bd4:	40cb      	lsrs	r3, r1
 8000bd6:	0751      	lsls	r1, r2, #29
 8000bd8:	d009      	beq.n	8000bee <__aeabi_ddiv+0x57e>
 8000bda:	210f      	movs	r1, #15
 8000bdc:	4011      	ands	r1, r2
 8000bde:	2904      	cmp	r1, #4
 8000be0:	d005      	beq.n	8000bee <__aeabi_ddiv+0x57e>
 8000be2:	1d11      	adds	r1, r2, #4
 8000be4:	4291      	cmp	r1, r2
 8000be6:	4192      	sbcs	r2, r2
 8000be8:	4252      	negs	r2, r2
 8000bea:	189b      	adds	r3, r3, r2
 8000bec:	000a      	movs	r2, r1
 8000bee:	0219      	lsls	r1, r3, #8
 8000bf0:	d400      	bmi.n	8000bf4 <__aeabi_ddiv+0x584>
 8000bf2:	e755      	b.n	8000aa0 <__aeabi_ddiv+0x430>
 8000bf4:	2200      	movs	r2, #0
 8000bf6:	2301      	movs	r3, #1
 8000bf8:	2400      	movs	r4, #0
 8000bfa:	4690      	mov	r8, r2
 8000bfc:	e598      	b.n	8000730 <__aeabi_ddiv+0xc0>
 8000bfe:	000a      	movs	r2, r1
 8000c00:	42bc      	cmp	r4, r7
 8000c02:	d000      	beq.n	8000c06 <__aeabi_ddiv+0x596>
 8000c04:	e66e      	b.n	80008e4 <__aeabi_ddiv+0x274>
 8000c06:	454b      	cmp	r3, r9
 8000c08:	d000      	beq.n	8000c0c <__aeabi_ddiv+0x59c>
 8000c0a:	e66b      	b.n	80008e4 <__aeabi_ddiv+0x274>
 8000c0c:	e66c      	b.n	80008e8 <__aeabi_ddiv+0x278>
 8000c0e:	4b23      	ldr	r3, [pc, #140]	@ (8000c9c <__aeabi_ddiv+0x62c>)
 8000c10:	4a23      	ldr	r2, [pc, #140]	@ (8000ca0 <__aeabi_ddiv+0x630>)
 8000c12:	4453      	add	r3, sl
 8000c14:	4592      	cmp	sl, r2
 8000c16:	da00      	bge.n	8000c1a <__aeabi_ddiv+0x5aa>
 8000c18:	e718      	b.n	8000a4c <__aeabi_ddiv+0x3dc>
 8000c1a:	2101      	movs	r1, #1
 8000c1c:	4249      	negs	r1, r1
 8000c1e:	1d0a      	adds	r2, r1, #4
 8000c20:	428a      	cmp	r2, r1
 8000c22:	4189      	sbcs	r1, r1
 8000c24:	4249      	negs	r1, r1
 8000c26:	448b      	add	fp, r1
 8000c28:	e666      	b.n	80008f8 <__aeabi_ddiv+0x288>
 8000c2a:	210f      	movs	r1, #15
 8000c2c:	4011      	ands	r1, r2
 8000c2e:	2904      	cmp	r1, #4
 8000c30:	d100      	bne.n	8000c34 <__aeabi_ddiv+0x5c4>
 8000c32:	e661      	b.n	80008f8 <__aeabi_ddiv+0x288>
 8000c34:	0011      	movs	r1, r2
 8000c36:	e7f2      	b.n	8000c1e <__aeabi_ddiv+0x5ae>
 8000c38:	42bc      	cmp	r4, r7
 8000c3a:	d800      	bhi.n	8000c3e <__aeabi_ddiv+0x5ce>
 8000c3c:	e60a      	b.n	8000854 <__aeabi_ddiv+0x1e4>
 8000c3e:	2302      	movs	r3, #2
 8000c40:	425b      	negs	r3, r3
 8000c42:	469c      	mov	ip, r3
 8000c44:	9900      	ldr	r1, [sp, #0]
 8000c46:	444f      	add	r7, r9
 8000c48:	454f      	cmp	r7, r9
 8000c4a:	419b      	sbcs	r3, r3
 8000c4c:	44e3      	add	fp, ip
 8000c4e:	468c      	mov	ip, r1
 8000c50:	425b      	negs	r3, r3
 8000c52:	4463      	add	r3, ip
 8000c54:	18c0      	adds	r0, r0, r3
 8000c56:	e5ff      	b.n	8000858 <__aeabi_ddiv+0x1e8>
 8000c58:	4649      	mov	r1, r9
 8000c5a:	9d00      	ldr	r5, [sp, #0]
 8000c5c:	0048      	lsls	r0, r1, #1
 8000c5e:	4548      	cmp	r0, r9
 8000c60:	4189      	sbcs	r1, r1
 8000c62:	46ac      	mov	ip, r5
 8000c64:	4249      	negs	r1, r1
 8000c66:	4461      	add	r1, ip
 8000c68:	4681      	mov	r9, r0
 8000c6a:	3a02      	subs	r2, #2
 8000c6c:	1864      	adds	r4, r4, r1
 8000c6e:	e7c7      	b.n	8000c00 <__aeabi_ddiv+0x590>
 8000c70:	2480      	movs	r4, #128	@ 0x80
 8000c72:	465b      	mov	r3, fp
 8000c74:	0324      	lsls	r4, r4, #12
 8000c76:	431c      	orrs	r4, r3
 8000c78:	0324      	lsls	r4, r4, #12
 8000c7a:	4690      	mov	r8, r2
 8000c7c:	4b04      	ldr	r3, [pc, #16]	@ (8000c90 <__aeabi_ddiv+0x620>)
 8000c7e:	0b24      	lsrs	r4, r4, #12
 8000c80:	e556      	b.n	8000730 <__aeabi_ddiv+0xc0>
 8000c82:	4599      	cmp	r9, r3
 8000c84:	d3e8      	bcc.n	8000c58 <__aeabi_ddiv+0x5e8>
 8000c86:	000a      	movs	r2, r1
 8000c88:	e7bd      	b.n	8000c06 <__aeabi_ddiv+0x596>
 8000c8a:	2300      	movs	r3, #0
 8000c8c:	e708      	b.n	8000aa0 <__aeabi_ddiv+0x430>
 8000c8e:	46c0      	nop			@ (mov r8, r8)
 8000c90:	000007ff 	.word	0x000007ff
 8000c94:	0000043e 	.word	0x0000043e
 8000c98:	0000041e 	.word	0x0000041e
 8000c9c:	000003ff 	.word	0x000003ff
 8000ca0:	fffffc02 	.word	0xfffffc02

08000ca4 <__eqdf2>:
 8000ca4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ca6:	4657      	mov	r7, sl
 8000ca8:	46de      	mov	lr, fp
 8000caa:	464e      	mov	r6, r9
 8000cac:	4645      	mov	r5, r8
 8000cae:	b5e0      	push	{r5, r6, r7, lr}
 8000cb0:	000d      	movs	r5, r1
 8000cb2:	0004      	movs	r4, r0
 8000cb4:	0fe8      	lsrs	r0, r5, #31
 8000cb6:	4683      	mov	fp, r0
 8000cb8:	0309      	lsls	r1, r1, #12
 8000cba:	0fd8      	lsrs	r0, r3, #31
 8000cbc:	0b09      	lsrs	r1, r1, #12
 8000cbe:	4682      	mov	sl, r0
 8000cc0:	4819      	ldr	r0, [pc, #100]	@ (8000d28 <__eqdf2+0x84>)
 8000cc2:	468c      	mov	ip, r1
 8000cc4:	031f      	lsls	r7, r3, #12
 8000cc6:	0069      	lsls	r1, r5, #1
 8000cc8:	005e      	lsls	r6, r3, #1
 8000cca:	0d49      	lsrs	r1, r1, #21
 8000ccc:	0b3f      	lsrs	r7, r7, #12
 8000cce:	0d76      	lsrs	r6, r6, #21
 8000cd0:	4281      	cmp	r1, r0
 8000cd2:	d018      	beq.n	8000d06 <__eqdf2+0x62>
 8000cd4:	4286      	cmp	r6, r0
 8000cd6:	d00f      	beq.n	8000cf8 <__eqdf2+0x54>
 8000cd8:	2001      	movs	r0, #1
 8000cda:	42b1      	cmp	r1, r6
 8000cdc:	d10d      	bne.n	8000cfa <__eqdf2+0x56>
 8000cde:	45bc      	cmp	ip, r7
 8000ce0:	d10b      	bne.n	8000cfa <__eqdf2+0x56>
 8000ce2:	4294      	cmp	r4, r2
 8000ce4:	d109      	bne.n	8000cfa <__eqdf2+0x56>
 8000ce6:	45d3      	cmp	fp, sl
 8000ce8:	d01c      	beq.n	8000d24 <__eqdf2+0x80>
 8000cea:	2900      	cmp	r1, #0
 8000cec:	d105      	bne.n	8000cfa <__eqdf2+0x56>
 8000cee:	4660      	mov	r0, ip
 8000cf0:	4320      	orrs	r0, r4
 8000cf2:	1e43      	subs	r3, r0, #1
 8000cf4:	4198      	sbcs	r0, r3
 8000cf6:	e000      	b.n	8000cfa <__eqdf2+0x56>
 8000cf8:	2001      	movs	r0, #1
 8000cfa:	bcf0      	pop	{r4, r5, r6, r7}
 8000cfc:	46bb      	mov	fp, r7
 8000cfe:	46b2      	mov	sl, r6
 8000d00:	46a9      	mov	r9, r5
 8000d02:	46a0      	mov	r8, r4
 8000d04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d06:	2001      	movs	r0, #1
 8000d08:	428e      	cmp	r6, r1
 8000d0a:	d1f6      	bne.n	8000cfa <__eqdf2+0x56>
 8000d0c:	4661      	mov	r1, ip
 8000d0e:	4339      	orrs	r1, r7
 8000d10:	000f      	movs	r7, r1
 8000d12:	4317      	orrs	r7, r2
 8000d14:	4327      	orrs	r7, r4
 8000d16:	d1f0      	bne.n	8000cfa <__eqdf2+0x56>
 8000d18:	465b      	mov	r3, fp
 8000d1a:	4652      	mov	r2, sl
 8000d1c:	1a98      	subs	r0, r3, r2
 8000d1e:	1e43      	subs	r3, r0, #1
 8000d20:	4198      	sbcs	r0, r3
 8000d22:	e7ea      	b.n	8000cfa <__eqdf2+0x56>
 8000d24:	2000      	movs	r0, #0
 8000d26:	e7e8      	b.n	8000cfa <__eqdf2+0x56>
 8000d28:	000007ff 	.word	0x000007ff

08000d2c <__gedf2>:
 8000d2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d2e:	4657      	mov	r7, sl
 8000d30:	464e      	mov	r6, r9
 8000d32:	4645      	mov	r5, r8
 8000d34:	46de      	mov	lr, fp
 8000d36:	b5e0      	push	{r5, r6, r7, lr}
 8000d38:	000d      	movs	r5, r1
 8000d3a:	030f      	lsls	r7, r1, #12
 8000d3c:	0b39      	lsrs	r1, r7, #12
 8000d3e:	b083      	sub	sp, #12
 8000d40:	0004      	movs	r4, r0
 8000d42:	4680      	mov	r8, r0
 8000d44:	9101      	str	r1, [sp, #4]
 8000d46:	0058      	lsls	r0, r3, #1
 8000d48:	0fe9      	lsrs	r1, r5, #31
 8000d4a:	4f31      	ldr	r7, [pc, #196]	@ (8000e10 <__gedf2+0xe4>)
 8000d4c:	0d40      	lsrs	r0, r0, #21
 8000d4e:	468c      	mov	ip, r1
 8000d50:	006e      	lsls	r6, r5, #1
 8000d52:	0319      	lsls	r1, r3, #12
 8000d54:	4682      	mov	sl, r0
 8000d56:	4691      	mov	r9, r2
 8000d58:	0d76      	lsrs	r6, r6, #21
 8000d5a:	0b09      	lsrs	r1, r1, #12
 8000d5c:	0fd8      	lsrs	r0, r3, #31
 8000d5e:	42be      	cmp	r6, r7
 8000d60:	d01f      	beq.n	8000da2 <__gedf2+0x76>
 8000d62:	45ba      	cmp	sl, r7
 8000d64:	d00f      	beq.n	8000d86 <__gedf2+0x5a>
 8000d66:	2e00      	cmp	r6, #0
 8000d68:	d12f      	bne.n	8000dca <__gedf2+0x9e>
 8000d6a:	4655      	mov	r5, sl
 8000d6c:	9e01      	ldr	r6, [sp, #4]
 8000d6e:	4334      	orrs	r4, r6
 8000d70:	2d00      	cmp	r5, #0
 8000d72:	d127      	bne.n	8000dc4 <__gedf2+0x98>
 8000d74:	430a      	orrs	r2, r1
 8000d76:	d03a      	beq.n	8000dee <__gedf2+0xc2>
 8000d78:	2c00      	cmp	r4, #0
 8000d7a:	d145      	bne.n	8000e08 <__gedf2+0xdc>
 8000d7c:	2800      	cmp	r0, #0
 8000d7e:	d11a      	bne.n	8000db6 <__gedf2+0x8a>
 8000d80:	2001      	movs	r0, #1
 8000d82:	4240      	negs	r0, r0
 8000d84:	e017      	b.n	8000db6 <__gedf2+0x8a>
 8000d86:	4311      	orrs	r1, r2
 8000d88:	d13b      	bne.n	8000e02 <__gedf2+0xd6>
 8000d8a:	2e00      	cmp	r6, #0
 8000d8c:	d102      	bne.n	8000d94 <__gedf2+0x68>
 8000d8e:	9f01      	ldr	r7, [sp, #4]
 8000d90:	4327      	orrs	r7, r4
 8000d92:	d0f3      	beq.n	8000d7c <__gedf2+0x50>
 8000d94:	4584      	cmp	ip, r0
 8000d96:	d109      	bne.n	8000dac <__gedf2+0x80>
 8000d98:	4663      	mov	r3, ip
 8000d9a:	2b00      	cmp	r3, #0
 8000d9c:	d0f0      	beq.n	8000d80 <__gedf2+0x54>
 8000d9e:	4660      	mov	r0, ip
 8000da0:	e009      	b.n	8000db6 <__gedf2+0x8a>
 8000da2:	9f01      	ldr	r7, [sp, #4]
 8000da4:	4327      	orrs	r7, r4
 8000da6:	d12c      	bne.n	8000e02 <__gedf2+0xd6>
 8000da8:	45b2      	cmp	sl, r6
 8000daa:	d024      	beq.n	8000df6 <__gedf2+0xca>
 8000dac:	4663      	mov	r3, ip
 8000dae:	2002      	movs	r0, #2
 8000db0:	3b01      	subs	r3, #1
 8000db2:	4018      	ands	r0, r3
 8000db4:	3801      	subs	r0, #1
 8000db6:	b003      	add	sp, #12
 8000db8:	bcf0      	pop	{r4, r5, r6, r7}
 8000dba:	46bb      	mov	fp, r7
 8000dbc:	46b2      	mov	sl, r6
 8000dbe:	46a9      	mov	r9, r5
 8000dc0:	46a0      	mov	r8, r4
 8000dc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000dc4:	2c00      	cmp	r4, #0
 8000dc6:	d0d9      	beq.n	8000d7c <__gedf2+0x50>
 8000dc8:	e7e4      	b.n	8000d94 <__gedf2+0x68>
 8000dca:	4654      	mov	r4, sl
 8000dcc:	2c00      	cmp	r4, #0
 8000dce:	d0ed      	beq.n	8000dac <__gedf2+0x80>
 8000dd0:	4584      	cmp	ip, r0
 8000dd2:	d1eb      	bne.n	8000dac <__gedf2+0x80>
 8000dd4:	4556      	cmp	r6, sl
 8000dd6:	dce9      	bgt.n	8000dac <__gedf2+0x80>
 8000dd8:	dbde      	blt.n	8000d98 <__gedf2+0x6c>
 8000dda:	9b01      	ldr	r3, [sp, #4]
 8000ddc:	428b      	cmp	r3, r1
 8000dde:	d8e5      	bhi.n	8000dac <__gedf2+0x80>
 8000de0:	d1da      	bne.n	8000d98 <__gedf2+0x6c>
 8000de2:	45c8      	cmp	r8, r9
 8000de4:	d8e2      	bhi.n	8000dac <__gedf2+0x80>
 8000de6:	2000      	movs	r0, #0
 8000de8:	45c8      	cmp	r8, r9
 8000dea:	d2e4      	bcs.n	8000db6 <__gedf2+0x8a>
 8000dec:	e7d4      	b.n	8000d98 <__gedf2+0x6c>
 8000dee:	2000      	movs	r0, #0
 8000df0:	2c00      	cmp	r4, #0
 8000df2:	d0e0      	beq.n	8000db6 <__gedf2+0x8a>
 8000df4:	e7da      	b.n	8000dac <__gedf2+0x80>
 8000df6:	4311      	orrs	r1, r2
 8000df8:	d103      	bne.n	8000e02 <__gedf2+0xd6>
 8000dfa:	4584      	cmp	ip, r0
 8000dfc:	d1d6      	bne.n	8000dac <__gedf2+0x80>
 8000dfe:	2000      	movs	r0, #0
 8000e00:	e7d9      	b.n	8000db6 <__gedf2+0x8a>
 8000e02:	2002      	movs	r0, #2
 8000e04:	4240      	negs	r0, r0
 8000e06:	e7d6      	b.n	8000db6 <__gedf2+0x8a>
 8000e08:	4584      	cmp	ip, r0
 8000e0a:	d0e6      	beq.n	8000dda <__gedf2+0xae>
 8000e0c:	e7ce      	b.n	8000dac <__gedf2+0x80>
 8000e0e:	46c0      	nop			@ (mov r8, r8)
 8000e10:	000007ff 	.word	0x000007ff

08000e14 <__ledf2>:
 8000e14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e16:	4657      	mov	r7, sl
 8000e18:	464e      	mov	r6, r9
 8000e1a:	4645      	mov	r5, r8
 8000e1c:	46de      	mov	lr, fp
 8000e1e:	b5e0      	push	{r5, r6, r7, lr}
 8000e20:	000d      	movs	r5, r1
 8000e22:	030f      	lsls	r7, r1, #12
 8000e24:	0004      	movs	r4, r0
 8000e26:	4680      	mov	r8, r0
 8000e28:	0fe8      	lsrs	r0, r5, #31
 8000e2a:	0b39      	lsrs	r1, r7, #12
 8000e2c:	4684      	mov	ip, r0
 8000e2e:	b083      	sub	sp, #12
 8000e30:	0058      	lsls	r0, r3, #1
 8000e32:	4f30      	ldr	r7, [pc, #192]	@ (8000ef4 <__ledf2+0xe0>)
 8000e34:	0d40      	lsrs	r0, r0, #21
 8000e36:	9101      	str	r1, [sp, #4]
 8000e38:	031e      	lsls	r6, r3, #12
 8000e3a:	0069      	lsls	r1, r5, #1
 8000e3c:	4682      	mov	sl, r0
 8000e3e:	4691      	mov	r9, r2
 8000e40:	0d49      	lsrs	r1, r1, #21
 8000e42:	0b36      	lsrs	r6, r6, #12
 8000e44:	0fd8      	lsrs	r0, r3, #31
 8000e46:	42b9      	cmp	r1, r7
 8000e48:	d020      	beq.n	8000e8c <__ledf2+0x78>
 8000e4a:	45ba      	cmp	sl, r7
 8000e4c:	d00f      	beq.n	8000e6e <__ledf2+0x5a>
 8000e4e:	2900      	cmp	r1, #0
 8000e50:	d12b      	bne.n	8000eaa <__ledf2+0x96>
 8000e52:	9901      	ldr	r1, [sp, #4]
 8000e54:	430c      	orrs	r4, r1
 8000e56:	4651      	mov	r1, sl
 8000e58:	2900      	cmp	r1, #0
 8000e5a:	d137      	bne.n	8000ecc <__ledf2+0xb8>
 8000e5c:	4332      	orrs	r2, r6
 8000e5e:	d038      	beq.n	8000ed2 <__ledf2+0xbe>
 8000e60:	2c00      	cmp	r4, #0
 8000e62:	d144      	bne.n	8000eee <__ledf2+0xda>
 8000e64:	2800      	cmp	r0, #0
 8000e66:	d119      	bne.n	8000e9c <__ledf2+0x88>
 8000e68:	2001      	movs	r0, #1
 8000e6a:	4240      	negs	r0, r0
 8000e6c:	e016      	b.n	8000e9c <__ledf2+0x88>
 8000e6e:	4316      	orrs	r6, r2
 8000e70:	d113      	bne.n	8000e9a <__ledf2+0x86>
 8000e72:	2900      	cmp	r1, #0
 8000e74:	d102      	bne.n	8000e7c <__ledf2+0x68>
 8000e76:	9f01      	ldr	r7, [sp, #4]
 8000e78:	4327      	orrs	r7, r4
 8000e7a:	d0f3      	beq.n	8000e64 <__ledf2+0x50>
 8000e7c:	4584      	cmp	ip, r0
 8000e7e:	d020      	beq.n	8000ec2 <__ledf2+0xae>
 8000e80:	4663      	mov	r3, ip
 8000e82:	2002      	movs	r0, #2
 8000e84:	3b01      	subs	r3, #1
 8000e86:	4018      	ands	r0, r3
 8000e88:	3801      	subs	r0, #1
 8000e8a:	e007      	b.n	8000e9c <__ledf2+0x88>
 8000e8c:	9f01      	ldr	r7, [sp, #4]
 8000e8e:	4327      	orrs	r7, r4
 8000e90:	d103      	bne.n	8000e9a <__ledf2+0x86>
 8000e92:	458a      	cmp	sl, r1
 8000e94:	d1f4      	bne.n	8000e80 <__ledf2+0x6c>
 8000e96:	4316      	orrs	r6, r2
 8000e98:	d01f      	beq.n	8000eda <__ledf2+0xc6>
 8000e9a:	2002      	movs	r0, #2
 8000e9c:	b003      	add	sp, #12
 8000e9e:	bcf0      	pop	{r4, r5, r6, r7}
 8000ea0:	46bb      	mov	fp, r7
 8000ea2:	46b2      	mov	sl, r6
 8000ea4:	46a9      	mov	r9, r5
 8000ea6:	46a0      	mov	r8, r4
 8000ea8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eaa:	4654      	mov	r4, sl
 8000eac:	2c00      	cmp	r4, #0
 8000eae:	d0e7      	beq.n	8000e80 <__ledf2+0x6c>
 8000eb0:	4584      	cmp	ip, r0
 8000eb2:	d1e5      	bne.n	8000e80 <__ledf2+0x6c>
 8000eb4:	4551      	cmp	r1, sl
 8000eb6:	dce3      	bgt.n	8000e80 <__ledf2+0x6c>
 8000eb8:	db03      	blt.n	8000ec2 <__ledf2+0xae>
 8000eba:	9b01      	ldr	r3, [sp, #4]
 8000ebc:	42b3      	cmp	r3, r6
 8000ebe:	d8df      	bhi.n	8000e80 <__ledf2+0x6c>
 8000ec0:	d00f      	beq.n	8000ee2 <__ledf2+0xce>
 8000ec2:	4663      	mov	r3, ip
 8000ec4:	2b00      	cmp	r3, #0
 8000ec6:	d0cf      	beq.n	8000e68 <__ledf2+0x54>
 8000ec8:	4660      	mov	r0, ip
 8000eca:	e7e7      	b.n	8000e9c <__ledf2+0x88>
 8000ecc:	2c00      	cmp	r4, #0
 8000ece:	d0c9      	beq.n	8000e64 <__ledf2+0x50>
 8000ed0:	e7d4      	b.n	8000e7c <__ledf2+0x68>
 8000ed2:	2000      	movs	r0, #0
 8000ed4:	2c00      	cmp	r4, #0
 8000ed6:	d0e1      	beq.n	8000e9c <__ledf2+0x88>
 8000ed8:	e7d2      	b.n	8000e80 <__ledf2+0x6c>
 8000eda:	4584      	cmp	ip, r0
 8000edc:	d1d0      	bne.n	8000e80 <__ledf2+0x6c>
 8000ede:	2000      	movs	r0, #0
 8000ee0:	e7dc      	b.n	8000e9c <__ledf2+0x88>
 8000ee2:	45c8      	cmp	r8, r9
 8000ee4:	d8cc      	bhi.n	8000e80 <__ledf2+0x6c>
 8000ee6:	2000      	movs	r0, #0
 8000ee8:	45c8      	cmp	r8, r9
 8000eea:	d2d7      	bcs.n	8000e9c <__ledf2+0x88>
 8000eec:	e7e9      	b.n	8000ec2 <__ledf2+0xae>
 8000eee:	4584      	cmp	ip, r0
 8000ef0:	d0e3      	beq.n	8000eba <__ledf2+0xa6>
 8000ef2:	e7c5      	b.n	8000e80 <__ledf2+0x6c>
 8000ef4:	000007ff 	.word	0x000007ff

08000ef8 <__aeabi_dmul>:
 8000ef8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000efa:	4657      	mov	r7, sl
 8000efc:	46de      	mov	lr, fp
 8000efe:	464e      	mov	r6, r9
 8000f00:	4645      	mov	r5, r8
 8000f02:	b5e0      	push	{r5, r6, r7, lr}
 8000f04:	001f      	movs	r7, r3
 8000f06:	030b      	lsls	r3, r1, #12
 8000f08:	0b1b      	lsrs	r3, r3, #12
 8000f0a:	0016      	movs	r6, r2
 8000f0c:	469a      	mov	sl, r3
 8000f0e:	0fca      	lsrs	r2, r1, #31
 8000f10:	004b      	lsls	r3, r1, #1
 8000f12:	0004      	movs	r4, r0
 8000f14:	4693      	mov	fp, r2
 8000f16:	b087      	sub	sp, #28
 8000f18:	0d5b      	lsrs	r3, r3, #21
 8000f1a:	d100      	bne.n	8000f1e <__aeabi_dmul+0x26>
 8000f1c:	e0d5      	b.n	80010ca <__aeabi_dmul+0x1d2>
 8000f1e:	4abb      	ldr	r2, [pc, #748]	@ (800120c <__aeabi_dmul+0x314>)
 8000f20:	4293      	cmp	r3, r2
 8000f22:	d100      	bne.n	8000f26 <__aeabi_dmul+0x2e>
 8000f24:	e0f8      	b.n	8001118 <__aeabi_dmul+0x220>
 8000f26:	4651      	mov	r1, sl
 8000f28:	0f42      	lsrs	r2, r0, #29
 8000f2a:	00c9      	lsls	r1, r1, #3
 8000f2c:	430a      	orrs	r2, r1
 8000f2e:	2180      	movs	r1, #128	@ 0x80
 8000f30:	0409      	lsls	r1, r1, #16
 8000f32:	4311      	orrs	r1, r2
 8000f34:	00c2      	lsls	r2, r0, #3
 8000f36:	4691      	mov	r9, r2
 8000f38:	4ab5      	ldr	r2, [pc, #724]	@ (8001210 <__aeabi_dmul+0x318>)
 8000f3a:	468a      	mov	sl, r1
 8000f3c:	189d      	adds	r5, r3, r2
 8000f3e:	2300      	movs	r3, #0
 8000f40:	4698      	mov	r8, r3
 8000f42:	9302      	str	r3, [sp, #8]
 8000f44:	033c      	lsls	r4, r7, #12
 8000f46:	007b      	lsls	r3, r7, #1
 8000f48:	0ffa      	lsrs	r2, r7, #31
 8000f4a:	0030      	movs	r0, r6
 8000f4c:	0b24      	lsrs	r4, r4, #12
 8000f4e:	0d5b      	lsrs	r3, r3, #21
 8000f50:	9200      	str	r2, [sp, #0]
 8000f52:	d100      	bne.n	8000f56 <__aeabi_dmul+0x5e>
 8000f54:	e096      	b.n	8001084 <__aeabi_dmul+0x18c>
 8000f56:	4aad      	ldr	r2, [pc, #692]	@ (800120c <__aeabi_dmul+0x314>)
 8000f58:	4293      	cmp	r3, r2
 8000f5a:	d031      	beq.n	8000fc0 <__aeabi_dmul+0xc8>
 8000f5c:	0f72      	lsrs	r2, r6, #29
 8000f5e:	00e4      	lsls	r4, r4, #3
 8000f60:	4322      	orrs	r2, r4
 8000f62:	2480      	movs	r4, #128	@ 0x80
 8000f64:	0424      	lsls	r4, r4, #16
 8000f66:	4314      	orrs	r4, r2
 8000f68:	4aa9      	ldr	r2, [pc, #676]	@ (8001210 <__aeabi_dmul+0x318>)
 8000f6a:	00f0      	lsls	r0, r6, #3
 8000f6c:	4694      	mov	ip, r2
 8000f6e:	4463      	add	r3, ip
 8000f70:	195b      	adds	r3, r3, r5
 8000f72:	1c5a      	adds	r2, r3, #1
 8000f74:	9201      	str	r2, [sp, #4]
 8000f76:	4642      	mov	r2, r8
 8000f78:	2600      	movs	r6, #0
 8000f7a:	2a0a      	cmp	r2, #10
 8000f7c:	dc42      	bgt.n	8001004 <__aeabi_dmul+0x10c>
 8000f7e:	465a      	mov	r2, fp
 8000f80:	9900      	ldr	r1, [sp, #0]
 8000f82:	404a      	eors	r2, r1
 8000f84:	4693      	mov	fp, r2
 8000f86:	4642      	mov	r2, r8
 8000f88:	2a02      	cmp	r2, #2
 8000f8a:	dc32      	bgt.n	8000ff2 <__aeabi_dmul+0xfa>
 8000f8c:	3a01      	subs	r2, #1
 8000f8e:	2a01      	cmp	r2, #1
 8000f90:	d900      	bls.n	8000f94 <__aeabi_dmul+0x9c>
 8000f92:	e149      	b.n	8001228 <__aeabi_dmul+0x330>
 8000f94:	2e02      	cmp	r6, #2
 8000f96:	d100      	bne.n	8000f9a <__aeabi_dmul+0xa2>
 8000f98:	e0ca      	b.n	8001130 <__aeabi_dmul+0x238>
 8000f9a:	2e01      	cmp	r6, #1
 8000f9c:	d13d      	bne.n	800101a <__aeabi_dmul+0x122>
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	2400      	movs	r4, #0
 8000fa2:	2200      	movs	r2, #0
 8000fa4:	0010      	movs	r0, r2
 8000fa6:	465a      	mov	r2, fp
 8000fa8:	051b      	lsls	r3, r3, #20
 8000faa:	4323      	orrs	r3, r4
 8000fac:	07d2      	lsls	r2, r2, #31
 8000fae:	4313      	orrs	r3, r2
 8000fb0:	0019      	movs	r1, r3
 8000fb2:	b007      	add	sp, #28
 8000fb4:	bcf0      	pop	{r4, r5, r6, r7}
 8000fb6:	46bb      	mov	fp, r7
 8000fb8:	46b2      	mov	sl, r6
 8000fba:	46a9      	mov	r9, r5
 8000fbc:	46a0      	mov	r8, r4
 8000fbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000fc0:	4b92      	ldr	r3, [pc, #584]	@ (800120c <__aeabi_dmul+0x314>)
 8000fc2:	4326      	orrs	r6, r4
 8000fc4:	18eb      	adds	r3, r5, r3
 8000fc6:	2e00      	cmp	r6, #0
 8000fc8:	d100      	bne.n	8000fcc <__aeabi_dmul+0xd4>
 8000fca:	e0bb      	b.n	8001144 <__aeabi_dmul+0x24c>
 8000fcc:	2203      	movs	r2, #3
 8000fce:	4641      	mov	r1, r8
 8000fd0:	4311      	orrs	r1, r2
 8000fd2:	465a      	mov	r2, fp
 8000fd4:	4688      	mov	r8, r1
 8000fd6:	9900      	ldr	r1, [sp, #0]
 8000fd8:	404a      	eors	r2, r1
 8000fda:	2180      	movs	r1, #128	@ 0x80
 8000fdc:	0109      	lsls	r1, r1, #4
 8000fde:	468c      	mov	ip, r1
 8000fe0:	0029      	movs	r1, r5
 8000fe2:	4461      	add	r1, ip
 8000fe4:	9101      	str	r1, [sp, #4]
 8000fe6:	4641      	mov	r1, r8
 8000fe8:	290a      	cmp	r1, #10
 8000fea:	dd00      	ble.n	8000fee <__aeabi_dmul+0xf6>
 8000fec:	e233      	b.n	8001456 <__aeabi_dmul+0x55e>
 8000fee:	4693      	mov	fp, r2
 8000ff0:	2603      	movs	r6, #3
 8000ff2:	4642      	mov	r2, r8
 8000ff4:	2701      	movs	r7, #1
 8000ff6:	4097      	lsls	r7, r2
 8000ff8:	21a6      	movs	r1, #166	@ 0xa6
 8000ffa:	003a      	movs	r2, r7
 8000ffc:	00c9      	lsls	r1, r1, #3
 8000ffe:	400a      	ands	r2, r1
 8001000:	420f      	tst	r7, r1
 8001002:	d031      	beq.n	8001068 <__aeabi_dmul+0x170>
 8001004:	9e02      	ldr	r6, [sp, #8]
 8001006:	2e02      	cmp	r6, #2
 8001008:	d100      	bne.n	800100c <__aeabi_dmul+0x114>
 800100a:	e235      	b.n	8001478 <__aeabi_dmul+0x580>
 800100c:	2e03      	cmp	r6, #3
 800100e:	d100      	bne.n	8001012 <__aeabi_dmul+0x11a>
 8001010:	e1d2      	b.n	80013b8 <__aeabi_dmul+0x4c0>
 8001012:	4654      	mov	r4, sl
 8001014:	4648      	mov	r0, r9
 8001016:	2e01      	cmp	r6, #1
 8001018:	d0c1      	beq.n	8000f9e <__aeabi_dmul+0xa6>
 800101a:	9a01      	ldr	r2, [sp, #4]
 800101c:	4b7d      	ldr	r3, [pc, #500]	@ (8001214 <__aeabi_dmul+0x31c>)
 800101e:	4694      	mov	ip, r2
 8001020:	4463      	add	r3, ip
 8001022:	2b00      	cmp	r3, #0
 8001024:	dc00      	bgt.n	8001028 <__aeabi_dmul+0x130>
 8001026:	e0c0      	b.n	80011aa <__aeabi_dmul+0x2b2>
 8001028:	0742      	lsls	r2, r0, #29
 800102a:	d009      	beq.n	8001040 <__aeabi_dmul+0x148>
 800102c:	220f      	movs	r2, #15
 800102e:	4002      	ands	r2, r0
 8001030:	2a04      	cmp	r2, #4
 8001032:	d005      	beq.n	8001040 <__aeabi_dmul+0x148>
 8001034:	1d02      	adds	r2, r0, #4
 8001036:	4282      	cmp	r2, r0
 8001038:	4180      	sbcs	r0, r0
 800103a:	4240      	negs	r0, r0
 800103c:	1824      	adds	r4, r4, r0
 800103e:	0010      	movs	r0, r2
 8001040:	01e2      	lsls	r2, r4, #7
 8001042:	d506      	bpl.n	8001052 <__aeabi_dmul+0x15a>
 8001044:	4b74      	ldr	r3, [pc, #464]	@ (8001218 <__aeabi_dmul+0x320>)
 8001046:	9a01      	ldr	r2, [sp, #4]
 8001048:	401c      	ands	r4, r3
 800104a:	2380      	movs	r3, #128	@ 0x80
 800104c:	4694      	mov	ip, r2
 800104e:	00db      	lsls	r3, r3, #3
 8001050:	4463      	add	r3, ip
 8001052:	4a72      	ldr	r2, [pc, #456]	@ (800121c <__aeabi_dmul+0x324>)
 8001054:	4293      	cmp	r3, r2
 8001056:	dc6b      	bgt.n	8001130 <__aeabi_dmul+0x238>
 8001058:	0762      	lsls	r2, r4, #29
 800105a:	08c0      	lsrs	r0, r0, #3
 800105c:	0264      	lsls	r4, r4, #9
 800105e:	055b      	lsls	r3, r3, #21
 8001060:	4302      	orrs	r2, r0
 8001062:	0b24      	lsrs	r4, r4, #12
 8001064:	0d5b      	lsrs	r3, r3, #21
 8001066:	e79d      	b.n	8000fa4 <__aeabi_dmul+0xac>
 8001068:	2190      	movs	r1, #144	@ 0x90
 800106a:	0089      	lsls	r1, r1, #2
 800106c:	420f      	tst	r7, r1
 800106e:	d163      	bne.n	8001138 <__aeabi_dmul+0x240>
 8001070:	2288      	movs	r2, #136	@ 0x88
 8001072:	423a      	tst	r2, r7
 8001074:	d100      	bne.n	8001078 <__aeabi_dmul+0x180>
 8001076:	e0d7      	b.n	8001228 <__aeabi_dmul+0x330>
 8001078:	9b00      	ldr	r3, [sp, #0]
 800107a:	46a2      	mov	sl, r4
 800107c:	469b      	mov	fp, r3
 800107e:	4681      	mov	r9, r0
 8001080:	9602      	str	r6, [sp, #8]
 8001082:	e7bf      	b.n	8001004 <__aeabi_dmul+0x10c>
 8001084:	0023      	movs	r3, r4
 8001086:	4333      	orrs	r3, r6
 8001088:	d100      	bne.n	800108c <__aeabi_dmul+0x194>
 800108a:	e07f      	b.n	800118c <__aeabi_dmul+0x294>
 800108c:	2c00      	cmp	r4, #0
 800108e:	d100      	bne.n	8001092 <__aeabi_dmul+0x19a>
 8001090:	e1ad      	b.n	80013ee <__aeabi_dmul+0x4f6>
 8001092:	0020      	movs	r0, r4
 8001094:	f000 fe8e 	bl	8001db4 <__clzsi2>
 8001098:	0002      	movs	r2, r0
 800109a:	0003      	movs	r3, r0
 800109c:	3a0b      	subs	r2, #11
 800109e:	201d      	movs	r0, #29
 80010a0:	0019      	movs	r1, r3
 80010a2:	1a82      	subs	r2, r0, r2
 80010a4:	0030      	movs	r0, r6
 80010a6:	3908      	subs	r1, #8
 80010a8:	40d0      	lsrs	r0, r2
 80010aa:	408c      	lsls	r4, r1
 80010ac:	4304      	orrs	r4, r0
 80010ae:	0030      	movs	r0, r6
 80010b0:	4088      	lsls	r0, r1
 80010b2:	4a5b      	ldr	r2, [pc, #364]	@ (8001220 <__aeabi_dmul+0x328>)
 80010b4:	1aeb      	subs	r3, r5, r3
 80010b6:	4694      	mov	ip, r2
 80010b8:	4463      	add	r3, ip
 80010ba:	1c5a      	adds	r2, r3, #1
 80010bc:	9201      	str	r2, [sp, #4]
 80010be:	4642      	mov	r2, r8
 80010c0:	2600      	movs	r6, #0
 80010c2:	2a0a      	cmp	r2, #10
 80010c4:	dc00      	bgt.n	80010c8 <__aeabi_dmul+0x1d0>
 80010c6:	e75a      	b.n	8000f7e <__aeabi_dmul+0x86>
 80010c8:	e79c      	b.n	8001004 <__aeabi_dmul+0x10c>
 80010ca:	4653      	mov	r3, sl
 80010cc:	4303      	orrs	r3, r0
 80010ce:	4699      	mov	r9, r3
 80010d0:	d054      	beq.n	800117c <__aeabi_dmul+0x284>
 80010d2:	4653      	mov	r3, sl
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	d100      	bne.n	80010da <__aeabi_dmul+0x1e2>
 80010d8:	e177      	b.n	80013ca <__aeabi_dmul+0x4d2>
 80010da:	4650      	mov	r0, sl
 80010dc:	f000 fe6a 	bl	8001db4 <__clzsi2>
 80010e0:	230b      	movs	r3, #11
 80010e2:	425b      	negs	r3, r3
 80010e4:	469c      	mov	ip, r3
 80010e6:	0002      	movs	r2, r0
 80010e8:	4484      	add	ip, r0
 80010ea:	0011      	movs	r1, r2
 80010ec:	4650      	mov	r0, sl
 80010ee:	3908      	subs	r1, #8
 80010f0:	4088      	lsls	r0, r1
 80010f2:	231d      	movs	r3, #29
 80010f4:	4680      	mov	r8, r0
 80010f6:	4660      	mov	r0, ip
 80010f8:	1a1b      	subs	r3, r3, r0
 80010fa:	0020      	movs	r0, r4
 80010fc:	40d8      	lsrs	r0, r3
 80010fe:	0003      	movs	r3, r0
 8001100:	4640      	mov	r0, r8
 8001102:	4303      	orrs	r3, r0
 8001104:	469a      	mov	sl, r3
 8001106:	0023      	movs	r3, r4
 8001108:	408b      	lsls	r3, r1
 800110a:	4699      	mov	r9, r3
 800110c:	2300      	movs	r3, #0
 800110e:	4d44      	ldr	r5, [pc, #272]	@ (8001220 <__aeabi_dmul+0x328>)
 8001110:	4698      	mov	r8, r3
 8001112:	1aad      	subs	r5, r5, r2
 8001114:	9302      	str	r3, [sp, #8]
 8001116:	e715      	b.n	8000f44 <__aeabi_dmul+0x4c>
 8001118:	4652      	mov	r2, sl
 800111a:	4302      	orrs	r2, r0
 800111c:	4691      	mov	r9, r2
 800111e:	d126      	bne.n	800116e <__aeabi_dmul+0x276>
 8001120:	2200      	movs	r2, #0
 8001122:	001d      	movs	r5, r3
 8001124:	2302      	movs	r3, #2
 8001126:	4692      	mov	sl, r2
 8001128:	3208      	adds	r2, #8
 800112a:	4690      	mov	r8, r2
 800112c:	9302      	str	r3, [sp, #8]
 800112e:	e709      	b.n	8000f44 <__aeabi_dmul+0x4c>
 8001130:	2400      	movs	r4, #0
 8001132:	2200      	movs	r2, #0
 8001134:	4b35      	ldr	r3, [pc, #212]	@ (800120c <__aeabi_dmul+0x314>)
 8001136:	e735      	b.n	8000fa4 <__aeabi_dmul+0xac>
 8001138:	2300      	movs	r3, #0
 800113a:	2480      	movs	r4, #128	@ 0x80
 800113c:	469b      	mov	fp, r3
 800113e:	0324      	lsls	r4, r4, #12
 8001140:	4b32      	ldr	r3, [pc, #200]	@ (800120c <__aeabi_dmul+0x314>)
 8001142:	e72f      	b.n	8000fa4 <__aeabi_dmul+0xac>
 8001144:	2202      	movs	r2, #2
 8001146:	4641      	mov	r1, r8
 8001148:	4311      	orrs	r1, r2
 800114a:	2280      	movs	r2, #128	@ 0x80
 800114c:	0112      	lsls	r2, r2, #4
 800114e:	4694      	mov	ip, r2
 8001150:	002a      	movs	r2, r5
 8001152:	4462      	add	r2, ip
 8001154:	4688      	mov	r8, r1
 8001156:	9201      	str	r2, [sp, #4]
 8001158:	290a      	cmp	r1, #10
 800115a:	dd00      	ble.n	800115e <__aeabi_dmul+0x266>
 800115c:	e752      	b.n	8001004 <__aeabi_dmul+0x10c>
 800115e:	465a      	mov	r2, fp
 8001160:	2000      	movs	r0, #0
 8001162:	9900      	ldr	r1, [sp, #0]
 8001164:	0004      	movs	r4, r0
 8001166:	404a      	eors	r2, r1
 8001168:	4693      	mov	fp, r2
 800116a:	2602      	movs	r6, #2
 800116c:	e70b      	b.n	8000f86 <__aeabi_dmul+0x8e>
 800116e:	220c      	movs	r2, #12
 8001170:	001d      	movs	r5, r3
 8001172:	2303      	movs	r3, #3
 8001174:	4681      	mov	r9, r0
 8001176:	4690      	mov	r8, r2
 8001178:	9302      	str	r3, [sp, #8]
 800117a:	e6e3      	b.n	8000f44 <__aeabi_dmul+0x4c>
 800117c:	2300      	movs	r3, #0
 800117e:	469a      	mov	sl, r3
 8001180:	3304      	adds	r3, #4
 8001182:	4698      	mov	r8, r3
 8001184:	3b03      	subs	r3, #3
 8001186:	2500      	movs	r5, #0
 8001188:	9302      	str	r3, [sp, #8]
 800118a:	e6db      	b.n	8000f44 <__aeabi_dmul+0x4c>
 800118c:	4642      	mov	r2, r8
 800118e:	3301      	adds	r3, #1
 8001190:	431a      	orrs	r2, r3
 8001192:	002b      	movs	r3, r5
 8001194:	4690      	mov	r8, r2
 8001196:	1c5a      	adds	r2, r3, #1
 8001198:	9201      	str	r2, [sp, #4]
 800119a:	4642      	mov	r2, r8
 800119c:	2400      	movs	r4, #0
 800119e:	2000      	movs	r0, #0
 80011a0:	2601      	movs	r6, #1
 80011a2:	2a0a      	cmp	r2, #10
 80011a4:	dc00      	bgt.n	80011a8 <__aeabi_dmul+0x2b0>
 80011a6:	e6ea      	b.n	8000f7e <__aeabi_dmul+0x86>
 80011a8:	e72c      	b.n	8001004 <__aeabi_dmul+0x10c>
 80011aa:	2201      	movs	r2, #1
 80011ac:	1ad2      	subs	r2, r2, r3
 80011ae:	2a38      	cmp	r2, #56	@ 0x38
 80011b0:	dd00      	ble.n	80011b4 <__aeabi_dmul+0x2bc>
 80011b2:	e6f4      	b.n	8000f9e <__aeabi_dmul+0xa6>
 80011b4:	2a1f      	cmp	r2, #31
 80011b6:	dc00      	bgt.n	80011ba <__aeabi_dmul+0x2c2>
 80011b8:	e12a      	b.n	8001410 <__aeabi_dmul+0x518>
 80011ba:	211f      	movs	r1, #31
 80011bc:	4249      	negs	r1, r1
 80011be:	1acb      	subs	r3, r1, r3
 80011c0:	0021      	movs	r1, r4
 80011c2:	40d9      	lsrs	r1, r3
 80011c4:	000b      	movs	r3, r1
 80011c6:	2a20      	cmp	r2, #32
 80011c8:	d005      	beq.n	80011d6 <__aeabi_dmul+0x2de>
 80011ca:	4a16      	ldr	r2, [pc, #88]	@ (8001224 <__aeabi_dmul+0x32c>)
 80011cc:	9d01      	ldr	r5, [sp, #4]
 80011ce:	4694      	mov	ip, r2
 80011d0:	4465      	add	r5, ip
 80011d2:	40ac      	lsls	r4, r5
 80011d4:	4320      	orrs	r0, r4
 80011d6:	1e42      	subs	r2, r0, #1
 80011d8:	4190      	sbcs	r0, r2
 80011da:	4318      	orrs	r0, r3
 80011dc:	2307      	movs	r3, #7
 80011de:	0019      	movs	r1, r3
 80011e0:	2400      	movs	r4, #0
 80011e2:	4001      	ands	r1, r0
 80011e4:	4203      	tst	r3, r0
 80011e6:	d00c      	beq.n	8001202 <__aeabi_dmul+0x30a>
 80011e8:	230f      	movs	r3, #15
 80011ea:	4003      	ands	r3, r0
 80011ec:	2b04      	cmp	r3, #4
 80011ee:	d100      	bne.n	80011f2 <__aeabi_dmul+0x2fa>
 80011f0:	e140      	b.n	8001474 <__aeabi_dmul+0x57c>
 80011f2:	1d03      	adds	r3, r0, #4
 80011f4:	4283      	cmp	r3, r0
 80011f6:	41a4      	sbcs	r4, r4
 80011f8:	0018      	movs	r0, r3
 80011fa:	4264      	negs	r4, r4
 80011fc:	0761      	lsls	r1, r4, #29
 80011fe:	0264      	lsls	r4, r4, #9
 8001200:	0b24      	lsrs	r4, r4, #12
 8001202:	08c2      	lsrs	r2, r0, #3
 8001204:	2300      	movs	r3, #0
 8001206:	430a      	orrs	r2, r1
 8001208:	e6cc      	b.n	8000fa4 <__aeabi_dmul+0xac>
 800120a:	46c0      	nop			@ (mov r8, r8)
 800120c:	000007ff 	.word	0x000007ff
 8001210:	fffffc01 	.word	0xfffffc01
 8001214:	000003ff 	.word	0x000003ff
 8001218:	feffffff 	.word	0xfeffffff
 800121c:	000007fe 	.word	0x000007fe
 8001220:	fffffc0d 	.word	0xfffffc0d
 8001224:	0000043e 	.word	0x0000043e
 8001228:	4649      	mov	r1, r9
 800122a:	464a      	mov	r2, r9
 800122c:	0409      	lsls	r1, r1, #16
 800122e:	0c09      	lsrs	r1, r1, #16
 8001230:	000d      	movs	r5, r1
 8001232:	0c16      	lsrs	r6, r2, #16
 8001234:	0c02      	lsrs	r2, r0, #16
 8001236:	0400      	lsls	r0, r0, #16
 8001238:	0c00      	lsrs	r0, r0, #16
 800123a:	4345      	muls	r5, r0
 800123c:	46ac      	mov	ip, r5
 800123e:	0005      	movs	r5, r0
 8001240:	4375      	muls	r5, r6
 8001242:	46a8      	mov	r8, r5
 8001244:	0015      	movs	r5, r2
 8001246:	000f      	movs	r7, r1
 8001248:	4375      	muls	r5, r6
 800124a:	9200      	str	r2, [sp, #0]
 800124c:	9502      	str	r5, [sp, #8]
 800124e:	002a      	movs	r2, r5
 8001250:	9d00      	ldr	r5, [sp, #0]
 8001252:	436f      	muls	r7, r5
 8001254:	4665      	mov	r5, ip
 8001256:	0c2d      	lsrs	r5, r5, #16
 8001258:	46a9      	mov	r9, r5
 800125a:	4447      	add	r7, r8
 800125c:	444f      	add	r7, r9
 800125e:	45b8      	cmp	r8, r7
 8001260:	d905      	bls.n	800126e <__aeabi_dmul+0x376>
 8001262:	0015      	movs	r5, r2
 8001264:	2280      	movs	r2, #128	@ 0x80
 8001266:	0252      	lsls	r2, r2, #9
 8001268:	4690      	mov	r8, r2
 800126a:	4445      	add	r5, r8
 800126c:	9502      	str	r5, [sp, #8]
 800126e:	0c3d      	lsrs	r5, r7, #16
 8001270:	9503      	str	r5, [sp, #12]
 8001272:	4665      	mov	r5, ip
 8001274:	042d      	lsls	r5, r5, #16
 8001276:	043f      	lsls	r7, r7, #16
 8001278:	0c2d      	lsrs	r5, r5, #16
 800127a:	46ac      	mov	ip, r5
 800127c:	003d      	movs	r5, r7
 800127e:	4465      	add	r5, ip
 8001280:	9504      	str	r5, [sp, #16]
 8001282:	0c25      	lsrs	r5, r4, #16
 8001284:	0424      	lsls	r4, r4, #16
 8001286:	0c24      	lsrs	r4, r4, #16
 8001288:	46ac      	mov	ip, r5
 800128a:	0025      	movs	r5, r4
 800128c:	4375      	muls	r5, r6
 800128e:	46a8      	mov	r8, r5
 8001290:	4665      	mov	r5, ip
 8001292:	000f      	movs	r7, r1
 8001294:	4369      	muls	r1, r5
 8001296:	4441      	add	r1, r8
 8001298:	4689      	mov	r9, r1
 800129a:	4367      	muls	r7, r4
 800129c:	0c39      	lsrs	r1, r7, #16
 800129e:	4449      	add	r1, r9
 80012a0:	436e      	muls	r6, r5
 80012a2:	4588      	cmp	r8, r1
 80012a4:	d903      	bls.n	80012ae <__aeabi_dmul+0x3b6>
 80012a6:	2280      	movs	r2, #128	@ 0x80
 80012a8:	0252      	lsls	r2, r2, #9
 80012aa:	4690      	mov	r8, r2
 80012ac:	4446      	add	r6, r8
 80012ae:	0c0d      	lsrs	r5, r1, #16
 80012b0:	46a8      	mov	r8, r5
 80012b2:	0035      	movs	r5, r6
 80012b4:	4445      	add	r5, r8
 80012b6:	9505      	str	r5, [sp, #20]
 80012b8:	9d03      	ldr	r5, [sp, #12]
 80012ba:	043f      	lsls	r7, r7, #16
 80012bc:	46a8      	mov	r8, r5
 80012be:	0c3f      	lsrs	r7, r7, #16
 80012c0:	0409      	lsls	r1, r1, #16
 80012c2:	19c9      	adds	r1, r1, r7
 80012c4:	4488      	add	r8, r1
 80012c6:	4645      	mov	r5, r8
 80012c8:	9503      	str	r5, [sp, #12]
 80012ca:	4655      	mov	r5, sl
 80012cc:	042e      	lsls	r6, r5, #16
 80012ce:	0c36      	lsrs	r6, r6, #16
 80012d0:	0c2f      	lsrs	r7, r5, #16
 80012d2:	0035      	movs	r5, r6
 80012d4:	4345      	muls	r5, r0
 80012d6:	4378      	muls	r0, r7
 80012d8:	4681      	mov	r9, r0
 80012da:	0038      	movs	r0, r7
 80012dc:	46a8      	mov	r8, r5
 80012de:	0c2d      	lsrs	r5, r5, #16
 80012e0:	46aa      	mov	sl, r5
 80012e2:	9a00      	ldr	r2, [sp, #0]
 80012e4:	4350      	muls	r0, r2
 80012e6:	4372      	muls	r2, r6
 80012e8:	444a      	add	r2, r9
 80012ea:	4452      	add	r2, sl
 80012ec:	4591      	cmp	r9, r2
 80012ee:	d903      	bls.n	80012f8 <__aeabi_dmul+0x400>
 80012f0:	2580      	movs	r5, #128	@ 0x80
 80012f2:	026d      	lsls	r5, r5, #9
 80012f4:	46a9      	mov	r9, r5
 80012f6:	4448      	add	r0, r9
 80012f8:	0c15      	lsrs	r5, r2, #16
 80012fa:	46a9      	mov	r9, r5
 80012fc:	4645      	mov	r5, r8
 80012fe:	042d      	lsls	r5, r5, #16
 8001300:	0c2d      	lsrs	r5, r5, #16
 8001302:	46a8      	mov	r8, r5
 8001304:	4665      	mov	r5, ip
 8001306:	437d      	muls	r5, r7
 8001308:	0412      	lsls	r2, r2, #16
 800130a:	4448      	add	r0, r9
 800130c:	4490      	add	r8, r2
 800130e:	46a9      	mov	r9, r5
 8001310:	0032      	movs	r2, r6
 8001312:	4665      	mov	r5, ip
 8001314:	4362      	muls	r2, r4
 8001316:	436e      	muls	r6, r5
 8001318:	437c      	muls	r4, r7
 800131a:	0c17      	lsrs	r7, r2, #16
 800131c:	1936      	adds	r6, r6, r4
 800131e:	19bf      	adds	r7, r7, r6
 8001320:	42bc      	cmp	r4, r7
 8001322:	d903      	bls.n	800132c <__aeabi_dmul+0x434>
 8001324:	2480      	movs	r4, #128	@ 0x80
 8001326:	0264      	lsls	r4, r4, #9
 8001328:	46a4      	mov	ip, r4
 800132a:	44e1      	add	r9, ip
 800132c:	9c02      	ldr	r4, [sp, #8]
 800132e:	9e03      	ldr	r6, [sp, #12]
 8001330:	46a4      	mov	ip, r4
 8001332:	9d05      	ldr	r5, [sp, #20]
 8001334:	4466      	add	r6, ip
 8001336:	428e      	cmp	r6, r1
 8001338:	4189      	sbcs	r1, r1
 800133a:	46ac      	mov	ip, r5
 800133c:	0412      	lsls	r2, r2, #16
 800133e:	043c      	lsls	r4, r7, #16
 8001340:	0c12      	lsrs	r2, r2, #16
 8001342:	18a2      	adds	r2, r4, r2
 8001344:	4462      	add	r2, ip
 8001346:	4249      	negs	r1, r1
 8001348:	1854      	adds	r4, r2, r1
 800134a:	4446      	add	r6, r8
 800134c:	46a4      	mov	ip, r4
 800134e:	4546      	cmp	r6, r8
 8001350:	41a4      	sbcs	r4, r4
 8001352:	4682      	mov	sl, r0
 8001354:	4264      	negs	r4, r4
 8001356:	46a0      	mov	r8, r4
 8001358:	42aa      	cmp	r2, r5
 800135a:	4192      	sbcs	r2, r2
 800135c:	458c      	cmp	ip, r1
 800135e:	4189      	sbcs	r1, r1
 8001360:	44e2      	add	sl, ip
 8001362:	44d0      	add	r8, sl
 8001364:	4249      	negs	r1, r1
 8001366:	4252      	negs	r2, r2
 8001368:	430a      	orrs	r2, r1
 800136a:	45a0      	cmp	r8, r4
 800136c:	41a4      	sbcs	r4, r4
 800136e:	4582      	cmp	sl, r0
 8001370:	4189      	sbcs	r1, r1
 8001372:	4264      	negs	r4, r4
 8001374:	4249      	negs	r1, r1
 8001376:	430c      	orrs	r4, r1
 8001378:	4641      	mov	r1, r8
 800137a:	0c3f      	lsrs	r7, r7, #16
 800137c:	19d2      	adds	r2, r2, r7
 800137e:	1912      	adds	r2, r2, r4
 8001380:	0dcc      	lsrs	r4, r1, #23
 8001382:	9904      	ldr	r1, [sp, #16]
 8001384:	0270      	lsls	r0, r6, #9
 8001386:	4308      	orrs	r0, r1
 8001388:	1e41      	subs	r1, r0, #1
 800138a:	4188      	sbcs	r0, r1
 800138c:	4641      	mov	r1, r8
 800138e:	444a      	add	r2, r9
 8001390:	0df6      	lsrs	r6, r6, #23
 8001392:	0252      	lsls	r2, r2, #9
 8001394:	4330      	orrs	r0, r6
 8001396:	0249      	lsls	r1, r1, #9
 8001398:	4314      	orrs	r4, r2
 800139a:	4308      	orrs	r0, r1
 800139c:	01d2      	lsls	r2, r2, #7
 800139e:	d535      	bpl.n	800140c <__aeabi_dmul+0x514>
 80013a0:	2201      	movs	r2, #1
 80013a2:	0843      	lsrs	r3, r0, #1
 80013a4:	4002      	ands	r2, r0
 80013a6:	4313      	orrs	r3, r2
 80013a8:	07e0      	lsls	r0, r4, #31
 80013aa:	4318      	orrs	r0, r3
 80013ac:	0864      	lsrs	r4, r4, #1
 80013ae:	e634      	b.n	800101a <__aeabi_dmul+0x122>
 80013b0:	9b00      	ldr	r3, [sp, #0]
 80013b2:	46a2      	mov	sl, r4
 80013b4:	469b      	mov	fp, r3
 80013b6:	4681      	mov	r9, r0
 80013b8:	2480      	movs	r4, #128	@ 0x80
 80013ba:	4653      	mov	r3, sl
 80013bc:	0324      	lsls	r4, r4, #12
 80013be:	431c      	orrs	r4, r3
 80013c0:	0324      	lsls	r4, r4, #12
 80013c2:	464a      	mov	r2, r9
 80013c4:	4b2e      	ldr	r3, [pc, #184]	@ (8001480 <__aeabi_dmul+0x588>)
 80013c6:	0b24      	lsrs	r4, r4, #12
 80013c8:	e5ec      	b.n	8000fa4 <__aeabi_dmul+0xac>
 80013ca:	f000 fcf3 	bl	8001db4 <__clzsi2>
 80013ce:	2315      	movs	r3, #21
 80013d0:	469c      	mov	ip, r3
 80013d2:	4484      	add	ip, r0
 80013d4:	0002      	movs	r2, r0
 80013d6:	4663      	mov	r3, ip
 80013d8:	3220      	adds	r2, #32
 80013da:	2b1c      	cmp	r3, #28
 80013dc:	dc00      	bgt.n	80013e0 <__aeabi_dmul+0x4e8>
 80013de:	e684      	b.n	80010ea <__aeabi_dmul+0x1f2>
 80013e0:	2300      	movs	r3, #0
 80013e2:	4699      	mov	r9, r3
 80013e4:	0023      	movs	r3, r4
 80013e6:	3808      	subs	r0, #8
 80013e8:	4083      	lsls	r3, r0
 80013ea:	469a      	mov	sl, r3
 80013ec:	e68e      	b.n	800110c <__aeabi_dmul+0x214>
 80013ee:	f000 fce1 	bl	8001db4 <__clzsi2>
 80013f2:	0002      	movs	r2, r0
 80013f4:	0003      	movs	r3, r0
 80013f6:	3215      	adds	r2, #21
 80013f8:	3320      	adds	r3, #32
 80013fa:	2a1c      	cmp	r2, #28
 80013fc:	dc00      	bgt.n	8001400 <__aeabi_dmul+0x508>
 80013fe:	e64e      	b.n	800109e <__aeabi_dmul+0x1a6>
 8001400:	0002      	movs	r2, r0
 8001402:	0034      	movs	r4, r6
 8001404:	3a08      	subs	r2, #8
 8001406:	2000      	movs	r0, #0
 8001408:	4094      	lsls	r4, r2
 800140a:	e652      	b.n	80010b2 <__aeabi_dmul+0x1ba>
 800140c:	9301      	str	r3, [sp, #4]
 800140e:	e604      	b.n	800101a <__aeabi_dmul+0x122>
 8001410:	4b1c      	ldr	r3, [pc, #112]	@ (8001484 <__aeabi_dmul+0x58c>)
 8001412:	0021      	movs	r1, r4
 8001414:	469c      	mov	ip, r3
 8001416:	0003      	movs	r3, r0
 8001418:	9d01      	ldr	r5, [sp, #4]
 800141a:	40d3      	lsrs	r3, r2
 800141c:	4465      	add	r5, ip
 800141e:	40a9      	lsls	r1, r5
 8001420:	4319      	orrs	r1, r3
 8001422:	0003      	movs	r3, r0
 8001424:	40ab      	lsls	r3, r5
 8001426:	1e58      	subs	r0, r3, #1
 8001428:	4183      	sbcs	r3, r0
 800142a:	4319      	orrs	r1, r3
 800142c:	0008      	movs	r0, r1
 800142e:	40d4      	lsrs	r4, r2
 8001430:	074b      	lsls	r3, r1, #29
 8001432:	d009      	beq.n	8001448 <__aeabi_dmul+0x550>
 8001434:	230f      	movs	r3, #15
 8001436:	400b      	ands	r3, r1
 8001438:	2b04      	cmp	r3, #4
 800143a:	d005      	beq.n	8001448 <__aeabi_dmul+0x550>
 800143c:	1d0b      	adds	r3, r1, #4
 800143e:	428b      	cmp	r3, r1
 8001440:	4180      	sbcs	r0, r0
 8001442:	4240      	negs	r0, r0
 8001444:	1824      	adds	r4, r4, r0
 8001446:	0018      	movs	r0, r3
 8001448:	0223      	lsls	r3, r4, #8
 800144a:	d400      	bmi.n	800144e <__aeabi_dmul+0x556>
 800144c:	e6d6      	b.n	80011fc <__aeabi_dmul+0x304>
 800144e:	2301      	movs	r3, #1
 8001450:	2400      	movs	r4, #0
 8001452:	2200      	movs	r2, #0
 8001454:	e5a6      	b.n	8000fa4 <__aeabi_dmul+0xac>
 8001456:	290f      	cmp	r1, #15
 8001458:	d1aa      	bne.n	80013b0 <__aeabi_dmul+0x4b8>
 800145a:	2380      	movs	r3, #128	@ 0x80
 800145c:	4652      	mov	r2, sl
 800145e:	031b      	lsls	r3, r3, #12
 8001460:	421a      	tst	r2, r3
 8001462:	d0a9      	beq.n	80013b8 <__aeabi_dmul+0x4c0>
 8001464:	421c      	tst	r4, r3
 8001466:	d1a7      	bne.n	80013b8 <__aeabi_dmul+0x4c0>
 8001468:	431c      	orrs	r4, r3
 800146a:	9b00      	ldr	r3, [sp, #0]
 800146c:	0002      	movs	r2, r0
 800146e:	469b      	mov	fp, r3
 8001470:	4b03      	ldr	r3, [pc, #12]	@ (8001480 <__aeabi_dmul+0x588>)
 8001472:	e597      	b.n	8000fa4 <__aeabi_dmul+0xac>
 8001474:	2400      	movs	r4, #0
 8001476:	e6c1      	b.n	80011fc <__aeabi_dmul+0x304>
 8001478:	2400      	movs	r4, #0
 800147a:	4b01      	ldr	r3, [pc, #4]	@ (8001480 <__aeabi_dmul+0x588>)
 800147c:	0022      	movs	r2, r4
 800147e:	e591      	b.n	8000fa4 <__aeabi_dmul+0xac>
 8001480:	000007ff 	.word	0x000007ff
 8001484:	0000041e 	.word	0x0000041e

08001488 <__aeabi_dsub>:
 8001488:	b5f0      	push	{r4, r5, r6, r7, lr}
 800148a:	464e      	mov	r6, r9
 800148c:	4645      	mov	r5, r8
 800148e:	46de      	mov	lr, fp
 8001490:	4657      	mov	r7, sl
 8001492:	b5e0      	push	{r5, r6, r7, lr}
 8001494:	b085      	sub	sp, #20
 8001496:	9000      	str	r0, [sp, #0]
 8001498:	9101      	str	r1, [sp, #4]
 800149a:	030c      	lsls	r4, r1, #12
 800149c:	004f      	lsls	r7, r1, #1
 800149e:	0fce      	lsrs	r6, r1, #31
 80014a0:	0a61      	lsrs	r1, r4, #9
 80014a2:	9c00      	ldr	r4, [sp, #0]
 80014a4:	46b0      	mov	r8, r6
 80014a6:	0f64      	lsrs	r4, r4, #29
 80014a8:	430c      	orrs	r4, r1
 80014aa:	9900      	ldr	r1, [sp, #0]
 80014ac:	0d7f      	lsrs	r7, r7, #21
 80014ae:	00c8      	lsls	r0, r1, #3
 80014b0:	0011      	movs	r1, r2
 80014b2:	001a      	movs	r2, r3
 80014b4:	031b      	lsls	r3, r3, #12
 80014b6:	469c      	mov	ip, r3
 80014b8:	9100      	str	r1, [sp, #0]
 80014ba:	9201      	str	r2, [sp, #4]
 80014bc:	0051      	lsls	r1, r2, #1
 80014be:	0d4b      	lsrs	r3, r1, #21
 80014c0:	4699      	mov	r9, r3
 80014c2:	9b01      	ldr	r3, [sp, #4]
 80014c4:	9d00      	ldr	r5, [sp, #0]
 80014c6:	0fd9      	lsrs	r1, r3, #31
 80014c8:	4663      	mov	r3, ip
 80014ca:	0f6a      	lsrs	r2, r5, #29
 80014cc:	0a5b      	lsrs	r3, r3, #9
 80014ce:	4313      	orrs	r3, r2
 80014d0:	00ea      	lsls	r2, r5, #3
 80014d2:	4694      	mov	ip, r2
 80014d4:	4693      	mov	fp, r2
 80014d6:	4ac1      	ldr	r2, [pc, #772]	@ (80017dc <__aeabi_dsub+0x354>)
 80014d8:	9003      	str	r0, [sp, #12]
 80014da:	9302      	str	r3, [sp, #8]
 80014dc:	4591      	cmp	r9, r2
 80014de:	d100      	bne.n	80014e2 <__aeabi_dsub+0x5a>
 80014e0:	e0cd      	b.n	800167e <__aeabi_dsub+0x1f6>
 80014e2:	2501      	movs	r5, #1
 80014e4:	4069      	eors	r1, r5
 80014e6:	464d      	mov	r5, r9
 80014e8:	1b7d      	subs	r5, r7, r5
 80014ea:	46aa      	mov	sl, r5
 80014ec:	428e      	cmp	r6, r1
 80014ee:	d100      	bne.n	80014f2 <__aeabi_dsub+0x6a>
 80014f0:	e080      	b.n	80015f4 <__aeabi_dsub+0x16c>
 80014f2:	2d00      	cmp	r5, #0
 80014f4:	dc00      	bgt.n	80014f8 <__aeabi_dsub+0x70>
 80014f6:	e335      	b.n	8001b64 <__aeabi_dsub+0x6dc>
 80014f8:	4649      	mov	r1, r9
 80014fa:	2900      	cmp	r1, #0
 80014fc:	d100      	bne.n	8001500 <__aeabi_dsub+0x78>
 80014fe:	e0df      	b.n	80016c0 <__aeabi_dsub+0x238>
 8001500:	4297      	cmp	r7, r2
 8001502:	d100      	bne.n	8001506 <__aeabi_dsub+0x7e>
 8001504:	e194      	b.n	8001830 <__aeabi_dsub+0x3a8>
 8001506:	4652      	mov	r2, sl
 8001508:	2501      	movs	r5, #1
 800150a:	2a38      	cmp	r2, #56	@ 0x38
 800150c:	dc19      	bgt.n	8001542 <__aeabi_dsub+0xba>
 800150e:	2280      	movs	r2, #128	@ 0x80
 8001510:	9b02      	ldr	r3, [sp, #8]
 8001512:	0412      	lsls	r2, r2, #16
 8001514:	4313      	orrs	r3, r2
 8001516:	9302      	str	r3, [sp, #8]
 8001518:	4652      	mov	r2, sl
 800151a:	2a1f      	cmp	r2, #31
 800151c:	dd00      	ble.n	8001520 <__aeabi_dsub+0x98>
 800151e:	e1e3      	b.n	80018e8 <__aeabi_dsub+0x460>
 8001520:	4653      	mov	r3, sl
 8001522:	2220      	movs	r2, #32
 8001524:	4661      	mov	r1, ip
 8001526:	9d02      	ldr	r5, [sp, #8]
 8001528:	1ad2      	subs	r2, r2, r3
 800152a:	4095      	lsls	r5, r2
 800152c:	40d9      	lsrs	r1, r3
 800152e:	430d      	orrs	r5, r1
 8001530:	4661      	mov	r1, ip
 8001532:	4091      	lsls	r1, r2
 8001534:	000a      	movs	r2, r1
 8001536:	1e51      	subs	r1, r2, #1
 8001538:	418a      	sbcs	r2, r1
 800153a:	4315      	orrs	r5, r2
 800153c:	9a02      	ldr	r2, [sp, #8]
 800153e:	40da      	lsrs	r2, r3
 8001540:	1aa4      	subs	r4, r4, r2
 8001542:	1b45      	subs	r5, r0, r5
 8001544:	42a8      	cmp	r0, r5
 8001546:	4180      	sbcs	r0, r0
 8001548:	4240      	negs	r0, r0
 800154a:	1a24      	subs	r4, r4, r0
 800154c:	0223      	lsls	r3, r4, #8
 800154e:	d400      	bmi.n	8001552 <__aeabi_dsub+0xca>
 8001550:	e13d      	b.n	80017ce <__aeabi_dsub+0x346>
 8001552:	0264      	lsls	r4, r4, #9
 8001554:	0a64      	lsrs	r4, r4, #9
 8001556:	2c00      	cmp	r4, #0
 8001558:	d100      	bne.n	800155c <__aeabi_dsub+0xd4>
 800155a:	e147      	b.n	80017ec <__aeabi_dsub+0x364>
 800155c:	0020      	movs	r0, r4
 800155e:	f000 fc29 	bl	8001db4 <__clzsi2>
 8001562:	0003      	movs	r3, r0
 8001564:	3b08      	subs	r3, #8
 8001566:	2120      	movs	r1, #32
 8001568:	0028      	movs	r0, r5
 800156a:	1aca      	subs	r2, r1, r3
 800156c:	40d0      	lsrs	r0, r2
 800156e:	409c      	lsls	r4, r3
 8001570:	0002      	movs	r2, r0
 8001572:	409d      	lsls	r5, r3
 8001574:	4322      	orrs	r2, r4
 8001576:	429f      	cmp	r7, r3
 8001578:	dd00      	ble.n	800157c <__aeabi_dsub+0xf4>
 800157a:	e177      	b.n	800186c <__aeabi_dsub+0x3e4>
 800157c:	1bd8      	subs	r0, r3, r7
 800157e:	3001      	adds	r0, #1
 8001580:	1a09      	subs	r1, r1, r0
 8001582:	002c      	movs	r4, r5
 8001584:	408d      	lsls	r5, r1
 8001586:	40c4      	lsrs	r4, r0
 8001588:	1e6b      	subs	r3, r5, #1
 800158a:	419d      	sbcs	r5, r3
 800158c:	0013      	movs	r3, r2
 800158e:	40c2      	lsrs	r2, r0
 8001590:	408b      	lsls	r3, r1
 8001592:	4325      	orrs	r5, r4
 8001594:	2700      	movs	r7, #0
 8001596:	0014      	movs	r4, r2
 8001598:	431d      	orrs	r5, r3
 800159a:	076b      	lsls	r3, r5, #29
 800159c:	d009      	beq.n	80015b2 <__aeabi_dsub+0x12a>
 800159e:	230f      	movs	r3, #15
 80015a0:	402b      	ands	r3, r5
 80015a2:	2b04      	cmp	r3, #4
 80015a4:	d005      	beq.n	80015b2 <__aeabi_dsub+0x12a>
 80015a6:	1d2b      	adds	r3, r5, #4
 80015a8:	42ab      	cmp	r3, r5
 80015aa:	41ad      	sbcs	r5, r5
 80015ac:	426d      	negs	r5, r5
 80015ae:	1964      	adds	r4, r4, r5
 80015b0:	001d      	movs	r5, r3
 80015b2:	0223      	lsls	r3, r4, #8
 80015b4:	d400      	bmi.n	80015b8 <__aeabi_dsub+0x130>
 80015b6:	e140      	b.n	800183a <__aeabi_dsub+0x3b2>
 80015b8:	4a88      	ldr	r2, [pc, #544]	@ (80017dc <__aeabi_dsub+0x354>)
 80015ba:	3701      	adds	r7, #1
 80015bc:	4297      	cmp	r7, r2
 80015be:	d100      	bne.n	80015c2 <__aeabi_dsub+0x13a>
 80015c0:	e101      	b.n	80017c6 <__aeabi_dsub+0x33e>
 80015c2:	2601      	movs	r6, #1
 80015c4:	4643      	mov	r3, r8
 80015c6:	4986      	ldr	r1, [pc, #536]	@ (80017e0 <__aeabi_dsub+0x358>)
 80015c8:	08ed      	lsrs	r5, r5, #3
 80015ca:	4021      	ands	r1, r4
 80015cc:	074a      	lsls	r2, r1, #29
 80015ce:	432a      	orrs	r2, r5
 80015d0:	057c      	lsls	r4, r7, #21
 80015d2:	024d      	lsls	r5, r1, #9
 80015d4:	0b2d      	lsrs	r5, r5, #12
 80015d6:	0d64      	lsrs	r4, r4, #21
 80015d8:	401e      	ands	r6, r3
 80015da:	0524      	lsls	r4, r4, #20
 80015dc:	432c      	orrs	r4, r5
 80015de:	07f6      	lsls	r6, r6, #31
 80015e0:	4334      	orrs	r4, r6
 80015e2:	0010      	movs	r0, r2
 80015e4:	0021      	movs	r1, r4
 80015e6:	b005      	add	sp, #20
 80015e8:	bcf0      	pop	{r4, r5, r6, r7}
 80015ea:	46bb      	mov	fp, r7
 80015ec:	46b2      	mov	sl, r6
 80015ee:	46a9      	mov	r9, r5
 80015f0:	46a0      	mov	r8, r4
 80015f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015f4:	2d00      	cmp	r5, #0
 80015f6:	dc00      	bgt.n	80015fa <__aeabi_dsub+0x172>
 80015f8:	e2d0      	b.n	8001b9c <__aeabi_dsub+0x714>
 80015fa:	4649      	mov	r1, r9
 80015fc:	2900      	cmp	r1, #0
 80015fe:	d000      	beq.n	8001602 <__aeabi_dsub+0x17a>
 8001600:	e0d4      	b.n	80017ac <__aeabi_dsub+0x324>
 8001602:	4661      	mov	r1, ip
 8001604:	9b02      	ldr	r3, [sp, #8]
 8001606:	4319      	orrs	r1, r3
 8001608:	d100      	bne.n	800160c <__aeabi_dsub+0x184>
 800160a:	e12b      	b.n	8001864 <__aeabi_dsub+0x3dc>
 800160c:	1e69      	subs	r1, r5, #1
 800160e:	2d01      	cmp	r5, #1
 8001610:	d100      	bne.n	8001614 <__aeabi_dsub+0x18c>
 8001612:	e1d9      	b.n	80019c8 <__aeabi_dsub+0x540>
 8001614:	4295      	cmp	r5, r2
 8001616:	d100      	bne.n	800161a <__aeabi_dsub+0x192>
 8001618:	e10a      	b.n	8001830 <__aeabi_dsub+0x3a8>
 800161a:	2501      	movs	r5, #1
 800161c:	2938      	cmp	r1, #56	@ 0x38
 800161e:	dc17      	bgt.n	8001650 <__aeabi_dsub+0x1c8>
 8001620:	468a      	mov	sl, r1
 8001622:	4653      	mov	r3, sl
 8001624:	2b1f      	cmp	r3, #31
 8001626:	dd00      	ble.n	800162a <__aeabi_dsub+0x1a2>
 8001628:	e1e7      	b.n	80019fa <__aeabi_dsub+0x572>
 800162a:	2220      	movs	r2, #32
 800162c:	1ad2      	subs	r2, r2, r3
 800162e:	9b02      	ldr	r3, [sp, #8]
 8001630:	4661      	mov	r1, ip
 8001632:	4093      	lsls	r3, r2
 8001634:	001d      	movs	r5, r3
 8001636:	4653      	mov	r3, sl
 8001638:	40d9      	lsrs	r1, r3
 800163a:	4663      	mov	r3, ip
 800163c:	4093      	lsls	r3, r2
 800163e:	001a      	movs	r2, r3
 8001640:	430d      	orrs	r5, r1
 8001642:	1e51      	subs	r1, r2, #1
 8001644:	418a      	sbcs	r2, r1
 8001646:	4653      	mov	r3, sl
 8001648:	4315      	orrs	r5, r2
 800164a:	9a02      	ldr	r2, [sp, #8]
 800164c:	40da      	lsrs	r2, r3
 800164e:	18a4      	adds	r4, r4, r2
 8001650:	182d      	adds	r5, r5, r0
 8001652:	4285      	cmp	r5, r0
 8001654:	4180      	sbcs	r0, r0
 8001656:	4240      	negs	r0, r0
 8001658:	1824      	adds	r4, r4, r0
 800165a:	0223      	lsls	r3, r4, #8
 800165c:	d400      	bmi.n	8001660 <__aeabi_dsub+0x1d8>
 800165e:	e0b6      	b.n	80017ce <__aeabi_dsub+0x346>
 8001660:	4b5e      	ldr	r3, [pc, #376]	@ (80017dc <__aeabi_dsub+0x354>)
 8001662:	3701      	adds	r7, #1
 8001664:	429f      	cmp	r7, r3
 8001666:	d100      	bne.n	800166a <__aeabi_dsub+0x1e2>
 8001668:	e0ad      	b.n	80017c6 <__aeabi_dsub+0x33e>
 800166a:	2101      	movs	r1, #1
 800166c:	4b5c      	ldr	r3, [pc, #368]	@ (80017e0 <__aeabi_dsub+0x358>)
 800166e:	086a      	lsrs	r2, r5, #1
 8001670:	401c      	ands	r4, r3
 8001672:	4029      	ands	r1, r5
 8001674:	430a      	orrs	r2, r1
 8001676:	07e5      	lsls	r5, r4, #31
 8001678:	4315      	orrs	r5, r2
 800167a:	0864      	lsrs	r4, r4, #1
 800167c:	e78d      	b.n	800159a <__aeabi_dsub+0x112>
 800167e:	4a59      	ldr	r2, [pc, #356]	@ (80017e4 <__aeabi_dsub+0x35c>)
 8001680:	9b02      	ldr	r3, [sp, #8]
 8001682:	4692      	mov	sl, r2
 8001684:	4662      	mov	r2, ip
 8001686:	44ba      	add	sl, r7
 8001688:	431a      	orrs	r2, r3
 800168a:	d02c      	beq.n	80016e6 <__aeabi_dsub+0x25e>
 800168c:	428e      	cmp	r6, r1
 800168e:	d02e      	beq.n	80016ee <__aeabi_dsub+0x266>
 8001690:	4652      	mov	r2, sl
 8001692:	2a00      	cmp	r2, #0
 8001694:	d060      	beq.n	8001758 <__aeabi_dsub+0x2d0>
 8001696:	2f00      	cmp	r7, #0
 8001698:	d100      	bne.n	800169c <__aeabi_dsub+0x214>
 800169a:	e0db      	b.n	8001854 <__aeabi_dsub+0x3cc>
 800169c:	4663      	mov	r3, ip
 800169e:	000e      	movs	r6, r1
 80016a0:	9c02      	ldr	r4, [sp, #8]
 80016a2:	08d8      	lsrs	r0, r3, #3
 80016a4:	0762      	lsls	r2, r4, #29
 80016a6:	4302      	orrs	r2, r0
 80016a8:	08e4      	lsrs	r4, r4, #3
 80016aa:	0013      	movs	r3, r2
 80016ac:	4323      	orrs	r3, r4
 80016ae:	d100      	bne.n	80016b2 <__aeabi_dsub+0x22a>
 80016b0:	e254      	b.n	8001b5c <__aeabi_dsub+0x6d4>
 80016b2:	2580      	movs	r5, #128	@ 0x80
 80016b4:	032d      	lsls	r5, r5, #12
 80016b6:	4325      	orrs	r5, r4
 80016b8:	032d      	lsls	r5, r5, #12
 80016ba:	4c48      	ldr	r4, [pc, #288]	@ (80017dc <__aeabi_dsub+0x354>)
 80016bc:	0b2d      	lsrs	r5, r5, #12
 80016be:	e78c      	b.n	80015da <__aeabi_dsub+0x152>
 80016c0:	4661      	mov	r1, ip
 80016c2:	9b02      	ldr	r3, [sp, #8]
 80016c4:	4319      	orrs	r1, r3
 80016c6:	d100      	bne.n	80016ca <__aeabi_dsub+0x242>
 80016c8:	e0cc      	b.n	8001864 <__aeabi_dsub+0x3dc>
 80016ca:	0029      	movs	r1, r5
 80016cc:	3901      	subs	r1, #1
 80016ce:	2d01      	cmp	r5, #1
 80016d0:	d100      	bne.n	80016d4 <__aeabi_dsub+0x24c>
 80016d2:	e188      	b.n	80019e6 <__aeabi_dsub+0x55e>
 80016d4:	4295      	cmp	r5, r2
 80016d6:	d100      	bne.n	80016da <__aeabi_dsub+0x252>
 80016d8:	e0aa      	b.n	8001830 <__aeabi_dsub+0x3a8>
 80016da:	2501      	movs	r5, #1
 80016dc:	2938      	cmp	r1, #56	@ 0x38
 80016de:	dd00      	ble.n	80016e2 <__aeabi_dsub+0x25a>
 80016e0:	e72f      	b.n	8001542 <__aeabi_dsub+0xba>
 80016e2:	468a      	mov	sl, r1
 80016e4:	e718      	b.n	8001518 <__aeabi_dsub+0x90>
 80016e6:	2201      	movs	r2, #1
 80016e8:	4051      	eors	r1, r2
 80016ea:	428e      	cmp	r6, r1
 80016ec:	d1d0      	bne.n	8001690 <__aeabi_dsub+0x208>
 80016ee:	4653      	mov	r3, sl
 80016f0:	2b00      	cmp	r3, #0
 80016f2:	d100      	bne.n	80016f6 <__aeabi_dsub+0x26e>
 80016f4:	e0be      	b.n	8001874 <__aeabi_dsub+0x3ec>
 80016f6:	2f00      	cmp	r7, #0
 80016f8:	d000      	beq.n	80016fc <__aeabi_dsub+0x274>
 80016fa:	e138      	b.n	800196e <__aeabi_dsub+0x4e6>
 80016fc:	46ca      	mov	sl, r9
 80016fe:	0022      	movs	r2, r4
 8001700:	4302      	orrs	r2, r0
 8001702:	d100      	bne.n	8001706 <__aeabi_dsub+0x27e>
 8001704:	e1e2      	b.n	8001acc <__aeabi_dsub+0x644>
 8001706:	4653      	mov	r3, sl
 8001708:	1e59      	subs	r1, r3, #1
 800170a:	2b01      	cmp	r3, #1
 800170c:	d100      	bne.n	8001710 <__aeabi_dsub+0x288>
 800170e:	e20d      	b.n	8001b2c <__aeabi_dsub+0x6a4>
 8001710:	4a32      	ldr	r2, [pc, #200]	@ (80017dc <__aeabi_dsub+0x354>)
 8001712:	4592      	cmp	sl, r2
 8001714:	d100      	bne.n	8001718 <__aeabi_dsub+0x290>
 8001716:	e1d2      	b.n	8001abe <__aeabi_dsub+0x636>
 8001718:	2701      	movs	r7, #1
 800171a:	2938      	cmp	r1, #56	@ 0x38
 800171c:	dc13      	bgt.n	8001746 <__aeabi_dsub+0x2be>
 800171e:	291f      	cmp	r1, #31
 8001720:	dd00      	ble.n	8001724 <__aeabi_dsub+0x29c>
 8001722:	e1ee      	b.n	8001b02 <__aeabi_dsub+0x67a>
 8001724:	2220      	movs	r2, #32
 8001726:	9b02      	ldr	r3, [sp, #8]
 8001728:	1a52      	subs	r2, r2, r1
 800172a:	0025      	movs	r5, r4
 800172c:	0007      	movs	r7, r0
 800172e:	469a      	mov	sl, r3
 8001730:	40cc      	lsrs	r4, r1
 8001732:	4090      	lsls	r0, r2
 8001734:	4095      	lsls	r5, r2
 8001736:	40cf      	lsrs	r7, r1
 8001738:	44a2      	add	sl, r4
 800173a:	1e42      	subs	r2, r0, #1
 800173c:	4190      	sbcs	r0, r2
 800173e:	4653      	mov	r3, sl
 8001740:	432f      	orrs	r7, r5
 8001742:	4307      	orrs	r7, r0
 8001744:	9302      	str	r3, [sp, #8]
 8001746:	003d      	movs	r5, r7
 8001748:	4465      	add	r5, ip
 800174a:	4565      	cmp	r5, ip
 800174c:	4192      	sbcs	r2, r2
 800174e:	9b02      	ldr	r3, [sp, #8]
 8001750:	4252      	negs	r2, r2
 8001752:	464f      	mov	r7, r9
 8001754:	18d4      	adds	r4, r2, r3
 8001756:	e780      	b.n	800165a <__aeabi_dsub+0x1d2>
 8001758:	4a23      	ldr	r2, [pc, #140]	@ (80017e8 <__aeabi_dsub+0x360>)
 800175a:	1c7d      	adds	r5, r7, #1
 800175c:	4215      	tst	r5, r2
 800175e:	d000      	beq.n	8001762 <__aeabi_dsub+0x2da>
 8001760:	e0aa      	b.n	80018b8 <__aeabi_dsub+0x430>
 8001762:	4662      	mov	r2, ip
 8001764:	0025      	movs	r5, r4
 8001766:	9b02      	ldr	r3, [sp, #8]
 8001768:	4305      	orrs	r5, r0
 800176a:	431a      	orrs	r2, r3
 800176c:	2f00      	cmp	r7, #0
 800176e:	d000      	beq.n	8001772 <__aeabi_dsub+0x2ea>
 8001770:	e0f5      	b.n	800195e <__aeabi_dsub+0x4d6>
 8001772:	2d00      	cmp	r5, #0
 8001774:	d100      	bne.n	8001778 <__aeabi_dsub+0x2f0>
 8001776:	e16b      	b.n	8001a50 <__aeabi_dsub+0x5c8>
 8001778:	2a00      	cmp	r2, #0
 800177a:	d100      	bne.n	800177e <__aeabi_dsub+0x2f6>
 800177c:	e152      	b.n	8001a24 <__aeabi_dsub+0x59c>
 800177e:	4663      	mov	r3, ip
 8001780:	1ac5      	subs	r5, r0, r3
 8001782:	9b02      	ldr	r3, [sp, #8]
 8001784:	1ae2      	subs	r2, r4, r3
 8001786:	42a8      	cmp	r0, r5
 8001788:	419b      	sbcs	r3, r3
 800178a:	425b      	negs	r3, r3
 800178c:	1ad3      	subs	r3, r2, r3
 800178e:	021a      	lsls	r2, r3, #8
 8001790:	d400      	bmi.n	8001794 <__aeabi_dsub+0x30c>
 8001792:	e1d5      	b.n	8001b40 <__aeabi_dsub+0x6b8>
 8001794:	4663      	mov	r3, ip
 8001796:	1a1d      	subs	r5, r3, r0
 8001798:	45ac      	cmp	ip, r5
 800179a:	4192      	sbcs	r2, r2
 800179c:	2601      	movs	r6, #1
 800179e:	9b02      	ldr	r3, [sp, #8]
 80017a0:	4252      	negs	r2, r2
 80017a2:	1b1c      	subs	r4, r3, r4
 80017a4:	4688      	mov	r8, r1
 80017a6:	1aa4      	subs	r4, r4, r2
 80017a8:	400e      	ands	r6, r1
 80017aa:	e6f6      	b.n	800159a <__aeabi_dsub+0x112>
 80017ac:	4297      	cmp	r7, r2
 80017ae:	d03f      	beq.n	8001830 <__aeabi_dsub+0x3a8>
 80017b0:	4652      	mov	r2, sl
 80017b2:	2501      	movs	r5, #1
 80017b4:	2a38      	cmp	r2, #56	@ 0x38
 80017b6:	dd00      	ble.n	80017ba <__aeabi_dsub+0x332>
 80017b8:	e74a      	b.n	8001650 <__aeabi_dsub+0x1c8>
 80017ba:	2280      	movs	r2, #128	@ 0x80
 80017bc:	9b02      	ldr	r3, [sp, #8]
 80017be:	0412      	lsls	r2, r2, #16
 80017c0:	4313      	orrs	r3, r2
 80017c2:	9302      	str	r3, [sp, #8]
 80017c4:	e72d      	b.n	8001622 <__aeabi_dsub+0x19a>
 80017c6:	003c      	movs	r4, r7
 80017c8:	2500      	movs	r5, #0
 80017ca:	2200      	movs	r2, #0
 80017cc:	e705      	b.n	80015da <__aeabi_dsub+0x152>
 80017ce:	2307      	movs	r3, #7
 80017d0:	402b      	ands	r3, r5
 80017d2:	2b00      	cmp	r3, #0
 80017d4:	d000      	beq.n	80017d8 <__aeabi_dsub+0x350>
 80017d6:	e6e2      	b.n	800159e <__aeabi_dsub+0x116>
 80017d8:	e06b      	b.n	80018b2 <__aeabi_dsub+0x42a>
 80017da:	46c0      	nop			@ (mov r8, r8)
 80017dc:	000007ff 	.word	0x000007ff
 80017e0:	ff7fffff 	.word	0xff7fffff
 80017e4:	fffff801 	.word	0xfffff801
 80017e8:	000007fe 	.word	0x000007fe
 80017ec:	0028      	movs	r0, r5
 80017ee:	f000 fae1 	bl	8001db4 <__clzsi2>
 80017f2:	0003      	movs	r3, r0
 80017f4:	3318      	adds	r3, #24
 80017f6:	2b1f      	cmp	r3, #31
 80017f8:	dc00      	bgt.n	80017fc <__aeabi_dsub+0x374>
 80017fa:	e6b4      	b.n	8001566 <__aeabi_dsub+0xde>
 80017fc:	002a      	movs	r2, r5
 80017fe:	3808      	subs	r0, #8
 8001800:	4082      	lsls	r2, r0
 8001802:	429f      	cmp	r7, r3
 8001804:	dd00      	ble.n	8001808 <__aeabi_dsub+0x380>
 8001806:	e0b9      	b.n	800197c <__aeabi_dsub+0x4f4>
 8001808:	1bdb      	subs	r3, r3, r7
 800180a:	1c58      	adds	r0, r3, #1
 800180c:	281f      	cmp	r0, #31
 800180e:	dc00      	bgt.n	8001812 <__aeabi_dsub+0x38a>
 8001810:	e1a0      	b.n	8001b54 <__aeabi_dsub+0x6cc>
 8001812:	0015      	movs	r5, r2
 8001814:	3b1f      	subs	r3, #31
 8001816:	40dd      	lsrs	r5, r3
 8001818:	2820      	cmp	r0, #32
 800181a:	d005      	beq.n	8001828 <__aeabi_dsub+0x3a0>
 800181c:	2340      	movs	r3, #64	@ 0x40
 800181e:	1a1b      	subs	r3, r3, r0
 8001820:	409a      	lsls	r2, r3
 8001822:	1e53      	subs	r3, r2, #1
 8001824:	419a      	sbcs	r2, r3
 8001826:	4315      	orrs	r5, r2
 8001828:	2307      	movs	r3, #7
 800182a:	2700      	movs	r7, #0
 800182c:	402b      	ands	r3, r5
 800182e:	e7d0      	b.n	80017d2 <__aeabi_dsub+0x34a>
 8001830:	08c0      	lsrs	r0, r0, #3
 8001832:	0762      	lsls	r2, r4, #29
 8001834:	4302      	orrs	r2, r0
 8001836:	08e4      	lsrs	r4, r4, #3
 8001838:	e737      	b.n	80016aa <__aeabi_dsub+0x222>
 800183a:	08ea      	lsrs	r2, r5, #3
 800183c:	0763      	lsls	r3, r4, #29
 800183e:	431a      	orrs	r2, r3
 8001840:	4bd3      	ldr	r3, [pc, #844]	@ (8001b90 <__aeabi_dsub+0x708>)
 8001842:	08e4      	lsrs	r4, r4, #3
 8001844:	429f      	cmp	r7, r3
 8001846:	d100      	bne.n	800184a <__aeabi_dsub+0x3c2>
 8001848:	e72f      	b.n	80016aa <__aeabi_dsub+0x222>
 800184a:	0324      	lsls	r4, r4, #12
 800184c:	0b25      	lsrs	r5, r4, #12
 800184e:	057c      	lsls	r4, r7, #21
 8001850:	0d64      	lsrs	r4, r4, #21
 8001852:	e6c2      	b.n	80015da <__aeabi_dsub+0x152>
 8001854:	46ca      	mov	sl, r9
 8001856:	0022      	movs	r2, r4
 8001858:	4302      	orrs	r2, r0
 800185a:	d158      	bne.n	800190e <__aeabi_dsub+0x486>
 800185c:	4663      	mov	r3, ip
 800185e:	000e      	movs	r6, r1
 8001860:	9c02      	ldr	r4, [sp, #8]
 8001862:	9303      	str	r3, [sp, #12]
 8001864:	9b03      	ldr	r3, [sp, #12]
 8001866:	4657      	mov	r7, sl
 8001868:	08da      	lsrs	r2, r3, #3
 800186a:	e7e7      	b.n	800183c <__aeabi_dsub+0x3b4>
 800186c:	4cc9      	ldr	r4, [pc, #804]	@ (8001b94 <__aeabi_dsub+0x70c>)
 800186e:	1aff      	subs	r7, r7, r3
 8001870:	4014      	ands	r4, r2
 8001872:	e692      	b.n	800159a <__aeabi_dsub+0x112>
 8001874:	4dc8      	ldr	r5, [pc, #800]	@ (8001b98 <__aeabi_dsub+0x710>)
 8001876:	1c7a      	adds	r2, r7, #1
 8001878:	422a      	tst	r2, r5
 800187a:	d000      	beq.n	800187e <__aeabi_dsub+0x3f6>
 800187c:	e084      	b.n	8001988 <__aeabi_dsub+0x500>
 800187e:	0022      	movs	r2, r4
 8001880:	4302      	orrs	r2, r0
 8001882:	2f00      	cmp	r7, #0
 8001884:	d000      	beq.n	8001888 <__aeabi_dsub+0x400>
 8001886:	e0ef      	b.n	8001a68 <__aeabi_dsub+0x5e0>
 8001888:	2a00      	cmp	r2, #0
 800188a:	d100      	bne.n	800188e <__aeabi_dsub+0x406>
 800188c:	e0e5      	b.n	8001a5a <__aeabi_dsub+0x5d2>
 800188e:	4662      	mov	r2, ip
 8001890:	9902      	ldr	r1, [sp, #8]
 8001892:	430a      	orrs	r2, r1
 8001894:	d100      	bne.n	8001898 <__aeabi_dsub+0x410>
 8001896:	e0c5      	b.n	8001a24 <__aeabi_dsub+0x59c>
 8001898:	4663      	mov	r3, ip
 800189a:	18c5      	adds	r5, r0, r3
 800189c:	468c      	mov	ip, r1
 800189e:	4285      	cmp	r5, r0
 80018a0:	4180      	sbcs	r0, r0
 80018a2:	4464      	add	r4, ip
 80018a4:	4240      	negs	r0, r0
 80018a6:	1824      	adds	r4, r4, r0
 80018a8:	0223      	lsls	r3, r4, #8
 80018aa:	d502      	bpl.n	80018b2 <__aeabi_dsub+0x42a>
 80018ac:	4bb9      	ldr	r3, [pc, #740]	@ (8001b94 <__aeabi_dsub+0x70c>)
 80018ae:	3701      	adds	r7, #1
 80018b0:	401c      	ands	r4, r3
 80018b2:	46ba      	mov	sl, r7
 80018b4:	9503      	str	r5, [sp, #12]
 80018b6:	e7d5      	b.n	8001864 <__aeabi_dsub+0x3dc>
 80018b8:	4662      	mov	r2, ip
 80018ba:	1a85      	subs	r5, r0, r2
 80018bc:	42a8      	cmp	r0, r5
 80018be:	4192      	sbcs	r2, r2
 80018c0:	4252      	negs	r2, r2
 80018c2:	4691      	mov	r9, r2
 80018c4:	9b02      	ldr	r3, [sp, #8]
 80018c6:	1ae3      	subs	r3, r4, r3
 80018c8:	001a      	movs	r2, r3
 80018ca:	464b      	mov	r3, r9
 80018cc:	1ad2      	subs	r2, r2, r3
 80018ce:	0013      	movs	r3, r2
 80018d0:	4691      	mov	r9, r2
 80018d2:	021a      	lsls	r2, r3, #8
 80018d4:	d46c      	bmi.n	80019b0 <__aeabi_dsub+0x528>
 80018d6:	464a      	mov	r2, r9
 80018d8:	464c      	mov	r4, r9
 80018da:	432a      	orrs	r2, r5
 80018dc:	d000      	beq.n	80018e0 <__aeabi_dsub+0x458>
 80018de:	e63a      	b.n	8001556 <__aeabi_dsub+0xce>
 80018e0:	2600      	movs	r6, #0
 80018e2:	2400      	movs	r4, #0
 80018e4:	2500      	movs	r5, #0
 80018e6:	e678      	b.n	80015da <__aeabi_dsub+0x152>
 80018e8:	9902      	ldr	r1, [sp, #8]
 80018ea:	4653      	mov	r3, sl
 80018ec:	000d      	movs	r5, r1
 80018ee:	3a20      	subs	r2, #32
 80018f0:	40d5      	lsrs	r5, r2
 80018f2:	2b20      	cmp	r3, #32
 80018f4:	d006      	beq.n	8001904 <__aeabi_dsub+0x47c>
 80018f6:	2240      	movs	r2, #64	@ 0x40
 80018f8:	1ad2      	subs	r2, r2, r3
 80018fa:	000b      	movs	r3, r1
 80018fc:	4093      	lsls	r3, r2
 80018fe:	4662      	mov	r2, ip
 8001900:	431a      	orrs	r2, r3
 8001902:	4693      	mov	fp, r2
 8001904:	465b      	mov	r3, fp
 8001906:	1e5a      	subs	r2, r3, #1
 8001908:	4193      	sbcs	r3, r2
 800190a:	431d      	orrs	r5, r3
 800190c:	e619      	b.n	8001542 <__aeabi_dsub+0xba>
 800190e:	4653      	mov	r3, sl
 8001910:	1e5a      	subs	r2, r3, #1
 8001912:	2b01      	cmp	r3, #1
 8001914:	d100      	bne.n	8001918 <__aeabi_dsub+0x490>
 8001916:	e0c6      	b.n	8001aa6 <__aeabi_dsub+0x61e>
 8001918:	4e9d      	ldr	r6, [pc, #628]	@ (8001b90 <__aeabi_dsub+0x708>)
 800191a:	45b2      	cmp	sl, r6
 800191c:	d100      	bne.n	8001920 <__aeabi_dsub+0x498>
 800191e:	e6bd      	b.n	800169c <__aeabi_dsub+0x214>
 8001920:	4688      	mov	r8, r1
 8001922:	000e      	movs	r6, r1
 8001924:	2501      	movs	r5, #1
 8001926:	2a38      	cmp	r2, #56	@ 0x38
 8001928:	dc10      	bgt.n	800194c <__aeabi_dsub+0x4c4>
 800192a:	2a1f      	cmp	r2, #31
 800192c:	dc7f      	bgt.n	8001a2e <__aeabi_dsub+0x5a6>
 800192e:	2120      	movs	r1, #32
 8001930:	0025      	movs	r5, r4
 8001932:	1a89      	subs	r1, r1, r2
 8001934:	0007      	movs	r7, r0
 8001936:	4088      	lsls	r0, r1
 8001938:	408d      	lsls	r5, r1
 800193a:	40d7      	lsrs	r7, r2
 800193c:	40d4      	lsrs	r4, r2
 800193e:	1e41      	subs	r1, r0, #1
 8001940:	4188      	sbcs	r0, r1
 8001942:	9b02      	ldr	r3, [sp, #8]
 8001944:	433d      	orrs	r5, r7
 8001946:	1b1b      	subs	r3, r3, r4
 8001948:	4305      	orrs	r5, r0
 800194a:	9302      	str	r3, [sp, #8]
 800194c:	4662      	mov	r2, ip
 800194e:	1b55      	subs	r5, r2, r5
 8001950:	45ac      	cmp	ip, r5
 8001952:	4192      	sbcs	r2, r2
 8001954:	9b02      	ldr	r3, [sp, #8]
 8001956:	4252      	negs	r2, r2
 8001958:	464f      	mov	r7, r9
 800195a:	1a9c      	subs	r4, r3, r2
 800195c:	e5f6      	b.n	800154c <__aeabi_dsub+0xc4>
 800195e:	2d00      	cmp	r5, #0
 8001960:	d000      	beq.n	8001964 <__aeabi_dsub+0x4dc>
 8001962:	e0b7      	b.n	8001ad4 <__aeabi_dsub+0x64c>
 8001964:	2a00      	cmp	r2, #0
 8001966:	d100      	bne.n	800196a <__aeabi_dsub+0x4e2>
 8001968:	e0f0      	b.n	8001b4c <__aeabi_dsub+0x6c4>
 800196a:	2601      	movs	r6, #1
 800196c:	400e      	ands	r6, r1
 800196e:	4663      	mov	r3, ip
 8001970:	9802      	ldr	r0, [sp, #8]
 8001972:	08d9      	lsrs	r1, r3, #3
 8001974:	0742      	lsls	r2, r0, #29
 8001976:	430a      	orrs	r2, r1
 8001978:	08c4      	lsrs	r4, r0, #3
 800197a:	e696      	b.n	80016aa <__aeabi_dsub+0x222>
 800197c:	4c85      	ldr	r4, [pc, #532]	@ (8001b94 <__aeabi_dsub+0x70c>)
 800197e:	1aff      	subs	r7, r7, r3
 8001980:	4014      	ands	r4, r2
 8001982:	0762      	lsls	r2, r4, #29
 8001984:	08e4      	lsrs	r4, r4, #3
 8001986:	e760      	b.n	800184a <__aeabi_dsub+0x3c2>
 8001988:	4981      	ldr	r1, [pc, #516]	@ (8001b90 <__aeabi_dsub+0x708>)
 800198a:	428a      	cmp	r2, r1
 800198c:	d100      	bne.n	8001990 <__aeabi_dsub+0x508>
 800198e:	e0c9      	b.n	8001b24 <__aeabi_dsub+0x69c>
 8001990:	4663      	mov	r3, ip
 8001992:	18c1      	adds	r1, r0, r3
 8001994:	4281      	cmp	r1, r0
 8001996:	4180      	sbcs	r0, r0
 8001998:	9b02      	ldr	r3, [sp, #8]
 800199a:	4240      	negs	r0, r0
 800199c:	18e3      	adds	r3, r4, r3
 800199e:	181b      	adds	r3, r3, r0
 80019a0:	07dd      	lsls	r5, r3, #31
 80019a2:	085c      	lsrs	r4, r3, #1
 80019a4:	2307      	movs	r3, #7
 80019a6:	0849      	lsrs	r1, r1, #1
 80019a8:	430d      	orrs	r5, r1
 80019aa:	0017      	movs	r7, r2
 80019ac:	402b      	ands	r3, r5
 80019ae:	e710      	b.n	80017d2 <__aeabi_dsub+0x34a>
 80019b0:	4663      	mov	r3, ip
 80019b2:	1a1d      	subs	r5, r3, r0
 80019b4:	45ac      	cmp	ip, r5
 80019b6:	4192      	sbcs	r2, r2
 80019b8:	2601      	movs	r6, #1
 80019ba:	9b02      	ldr	r3, [sp, #8]
 80019bc:	4252      	negs	r2, r2
 80019be:	1b1c      	subs	r4, r3, r4
 80019c0:	4688      	mov	r8, r1
 80019c2:	1aa4      	subs	r4, r4, r2
 80019c4:	400e      	ands	r6, r1
 80019c6:	e5c6      	b.n	8001556 <__aeabi_dsub+0xce>
 80019c8:	4663      	mov	r3, ip
 80019ca:	18c5      	adds	r5, r0, r3
 80019cc:	9b02      	ldr	r3, [sp, #8]
 80019ce:	4285      	cmp	r5, r0
 80019d0:	4180      	sbcs	r0, r0
 80019d2:	469c      	mov	ip, r3
 80019d4:	4240      	negs	r0, r0
 80019d6:	4464      	add	r4, ip
 80019d8:	1824      	adds	r4, r4, r0
 80019da:	2701      	movs	r7, #1
 80019dc:	0223      	lsls	r3, r4, #8
 80019de:	d400      	bmi.n	80019e2 <__aeabi_dsub+0x55a>
 80019e0:	e6f5      	b.n	80017ce <__aeabi_dsub+0x346>
 80019e2:	2702      	movs	r7, #2
 80019e4:	e641      	b.n	800166a <__aeabi_dsub+0x1e2>
 80019e6:	4663      	mov	r3, ip
 80019e8:	1ac5      	subs	r5, r0, r3
 80019ea:	42a8      	cmp	r0, r5
 80019ec:	4180      	sbcs	r0, r0
 80019ee:	9b02      	ldr	r3, [sp, #8]
 80019f0:	4240      	negs	r0, r0
 80019f2:	1ae4      	subs	r4, r4, r3
 80019f4:	2701      	movs	r7, #1
 80019f6:	1a24      	subs	r4, r4, r0
 80019f8:	e5a8      	b.n	800154c <__aeabi_dsub+0xc4>
 80019fa:	9d02      	ldr	r5, [sp, #8]
 80019fc:	4652      	mov	r2, sl
 80019fe:	002b      	movs	r3, r5
 8001a00:	3a20      	subs	r2, #32
 8001a02:	40d3      	lsrs	r3, r2
 8001a04:	0019      	movs	r1, r3
 8001a06:	4653      	mov	r3, sl
 8001a08:	2b20      	cmp	r3, #32
 8001a0a:	d006      	beq.n	8001a1a <__aeabi_dsub+0x592>
 8001a0c:	2240      	movs	r2, #64	@ 0x40
 8001a0e:	1ad2      	subs	r2, r2, r3
 8001a10:	002b      	movs	r3, r5
 8001a12:	4093      	lsls	r3, r2
 8001a14:	4662      	mov	r2, ip
 8001a16:	431a      	orrs	r2, r3
 8001a18:	4693      	mov	fp, r2
 8001a1a:	465d      	mov	r5, fp
 8001a1c:	1e6b      	subs	r3, r5, #1
 8001a1e:	419d      	sbcs	r5, r3
 8001a20:	430d      	orrs	r5, r1
 8001a22:	e615      	b.n	8001650 <__aeabi_dsub+0x1c8>
 8001a24:	0762      	lsls	r2, r4, #29
 8001a26:	08c0      	lsrs	r0, r0, #3
 8001a28:	4302      	orrs	r2, r0
 8001a2a:	08e4      	lsrs	r4, r4, #3
 8001a2c:	e70d      	b.n	800184a <__aeabi_dsub+0x3c2>
 8001a2e:	0011      	movs	r1, r2
 8001a30:	0027      	movs	r7, r4
 8001a32:	3920      	subs	r1, #32
 8001a34:	40cf      	lsrs	r7, r1
 8001a36:	2a20      	cmp	r2, #32
 8001a38:	d005      	beq.n	8001a46 <__aeabi_dsub+0x5be>
 8001a3a:	2140      	movs	r1, #64	@ 0x40
 8001a3c:	1a8a      	subs	r2, r1, r2
 8001a3e:	4094      	lsls	r4, r2
 8001a40:	0025      	movs	r5, r4
 8001a42:	4305      	orrs	r5, r0
 8001a44:	9503      	str	r5, [sp, #12]
 8001a46:	9d03      	ldr	r5, [sp, #12]
 8001a48:	1e6a      	subs	r2, r5, #1
 8001a4a:	4195      	sbcs	r5, r2
 8001a4c:	433d      	orrs	r5, r7
 8001a4e:	e77d      	b.n	800194c <__aeabi_dsub+0x4c4>
 8001a50:	2a00      	cmp	r2, #0
 8001a52:	d100      	bne.n	8001a56 <__aeabi_dsub+0x5ce>
 8001a54:	e744      	b.n	80018e0 <__aeabi_dsub+0x458>
 8001a56:	2601      	movs	r6, #1
 8001a58:	400e      	ands	r6, r1
 8001a5a:	4663      	mov	r3, ip
 8001a5c:	08d9      	lsrs	r1, r3, #3
 8001a5e:	9b02      	ldr	r3, [sp, #8]
 8001a60:	075a      	lsls	r2, r3, #29
 8001a62:	430a      	orrs	r2, r1
 8001a64:	08dc      	lsrs	r4, r3, #3
 8001a66:	e6f0      	b.n	800184a <__aeabi_dsub+0x3c2>
 8001a68:	2a00      	cmp	r2, #0
 8001a6a:	d028      	beq.n	8001abe <__aeabi_dsub+0x636>
 8001a6c:	4662      	mov	r2, ip
 8001a6e:	9f02      	ldr	r7, [sp, #8]
 8001a70:	08c0      	lsrs	r0, r0, #3
 8001a72:	433a      	orrs	r2, r7
 8001a74:	d100      	bne.n	8001a78 <__aeabi_dsub+0x5f0>
 8001a76:	e6dc      	b.n	8001832 <__aeabi_dsub+0x3aa>
 8001a78:	0762      	lsls	r2, r4, #29
 8001a7a:	4310      	orrs	r0, r2
 8001a7c:	2280      	movs	r2, #128	@ 0x80
 8001a7e:	08e4      	lsrs	r4, r4, #3
 8001a80:	0312      	lsls	r2, r2, #12
 8001a82:	4214      	tst	r4, r2
 8001a84:	d009      	beq.n	8001a9a <__aeabi_dsub+0x612>
 8001a86:	08fd      	lsrs	r5, r7, #3
 8001a88:	4215      	tst	r5, r2
 8001a8a:	d106      	bne.n	8001a9a <__aeabi_dsub+0x612>
 8001a8c:	4663      	mov	r3, ip
 8001a8e:	2601      	movs	r6, #1
 8001a90:	002c      	movs	r4, r5
 8001a92:	08d8      	lsrs	r0, r3, #3
 8001a94:	077b      	lsls	r3, r7, #29
 8001a96:	4318      	orrs	r0, r3
 8001a98:	400e      	ands	r6, r1
 8001a9a:	0f42      	lsrs	r2, r0, #29
 8001a9c:	00c0      	lsls	r0, r0, #3
 8001a9e:	08c0      	lsrs	r0, r0, #3
 8001aa0:	0752      	lsls	r2, r2, #29
 8001aa2:	4302      	orrs	r2, r0
 8001aa4:	e601      	b.n	80016aa <__aeabi_dsub+0x222>
 8001aa6:	4663      	mov	r3, ip
 8001aa8:	1a1d      	subs	r5, r3, r0
 8001aaa:	45ac      	cmp	ip, r5
 8001aac:	4192      	sbcs	r2, r2
 8001aae:	9b02      	ldr	r3, [sp, #8]
 8001ab0:	4252      	negs	r2, r2
 8001ab2:	1b1c      	subs	r4, r3, r4
 8001ab4:	000e      	movs	r6, r1
 8001ab6:	4688      	mov	r8, r1
 8001ab8:	2701      	movs	r7, #1
 8001aba:	1aa4      	subs	r4, r4, r2
 8001abc:	e546      	b.n	800154c <__aeabi_dsub+0xc4>
 8001abe:	4663      	mov	r3, ip
 8001ac0:	08d9      	lsrs	r1, r3, #3
 8001ac2:	9b02      	ldr	r3, [sp, #8]
 8001ac4:	075a      	lsls	r2, r3, #29
 8001ac6:	430a      	orrs	r2, r1
 8001ac8:	08dc      	lsrs	r4, r3, #3
 8001aca:	e5ee      	b.n	80016aa <__aeabi_dsub+0x222>
 8001acc:	4663      	mov	r3, ip
 8001ace:	9c02      	ldr	r4, [sp, #8]
 8001ad0:	9303      	str	r3, [sp, #12]
 8001ad2:	e6c7      	b.n	8001864 <__aeabi_dsub+0x3dc>
 8001ad4:	08c0      	lsrs	r0, r0, #3
 8001ad6:	2a00      	cmp	r2, #0
 8001ad8:	d100      	bne.n	8001adc <__aeabi_dsub+0x654>
 8001ada:	e6aa      	b.n	8001832 <__aeabi_dsub+0x3aa>
 8001adc:	0762      	lsls	r2, r4, #29
 8001ade:	4310      	orrs	r0, r2
 8001ae0:	2280      	movs	r2, #128	@ 0x80
 8001ae2:	08e4      	lsrs	r4, r4, #3
 8001ae4:	0312      	lsls	r2, r2, #12
 8001ae6:	4214      	tst	r4, r2
 8001ae8:	d0d7      	beq.n	8001a9a <__aeabi_dsub+0x612>
 8001aea:	9f02      	ldr	r7, [sp, #8]
 8001aec:	08fd      	lsrs	r5, r7, #3
 8001aee:	4215      	tst	r5, r2
 8001af0:	d1d3      	bne.n	8001a9a <__aeabi_dsub+0x612>
 8001af2:	4663      	mov	r3, ip
 8001af4:	2601      	movs	r6, #1
 8001af6:	08d8      	lsrs	r0, r3, #3
 8001af8:	077b      	lsls	r3, r7, #29
 8001afa:	002c      	movs	r4, r5
 8001afc:	4318      	orrs	r0, r3
 8001afe:	400e      	ands	r6, r1
 8001b00:	e7cb      	b.n	8001a9a <__aeabi_dsub+0x612>
 8001b02:	000a      	movs	r2, r1
 8001b04:	0027      	movs	r7, r4
 8001b06:	3a20      	subs	r2, #32
 8001b08:	40d7      	lsrs	r7, r2
 8001b0a:	2920      	cmp	r1, #32
 8001b0c:	d005      	beq.n	8001b1a <__aeabi_dsub+0x692>
 8001b0e:	2240      	movs	r2, #64	@ 0x40
 8001b10:	1a52      	subs	r2, r2, r1
 8001b12:	4094      	lsls	r4, r2
 8001b14:	0025      	movs	r5, r4
 8001b16:	4305      	orrs	r5, r0
 8001b18:	9503      	str	r5, [sp, #12]
 8001b1a:	9d03      	ldr	r5, [sp, #12]
 8001b1c:	1e6a      	subs	r2, r5, #1
 8001b1e:	4195      	sbcs	r5, r2
 8001b20:	432f      	orrs	r7, r5
 8001b22:	e610      	b.n	8001746 <__aeabi_dsub+0x2be>
 8001b24:	0014      	movs	r4, r2
 8001b26:	2500      	movs	r5, #0
 8001b28:	2200      	movs	r2, #0
 8001b2a:	e556      	b.n	80015da <__aeabi_dsub+0x152>
 8001b2c:	9b02      	ldr	r3, [sp, #8]
 8001b2e:	4460      	add	r0, ip
 8001b30:	4699      	mov	r9, r3
 8001b32:	4560      	cmp	r0, ip
 8001b34:	4192      	sbcs	r2, r2
 8001b36:	444c      	add	r4, r9
 8001b38:	4252      	negs	r2, r2
 8001b3a:	0005      	movs	r5, r0
 8001b3c:	18a4      	adds	r4, r4, r2
 8001b3e:	e74c      	b.n	80019da <__aeabi_dsub+0x552>
 8001b40:	001a      	movs	r2, r3
 8001b42:	001c      	movs	r4, r3
 8001b44:	432a      	orrs	r2, r5
 8001b46:	d000      	beq.n	8001b4a <__aeabi_dsub+0x6c2>
 8001b48:	e6b3      	b.n	80018b2 <__aeabi_dsub+0x42a>
 8001b4a:	e6c9      	b.n	80018e0 <__aeabi_dsub+0x458>
 8001b4c:	2480      	movs	r4, #128	@ 0x80
 8001b4e:	2600      	movs	r6, #0
 8001b50:	0324      	lsls	r4, r4, #12
 8001b52:	e5ae      	b.n	80016b2 <__aeabi_dsub+0x22a>
 8001b54:	2120      	movs	r1, #32
 8001b56:	2500      	movs	r5, #0
 8001b58:	1a09      	subs	r1, r1, r0
 8001b5a:	e517      	b.n	800158c <__aeabi_dsub+0x104>
 8001b5c:	2200      	movs	r2, #0
 8001b5e:	2500      	movs	r5, #0
 8001b60:	4c0b      	ldr	r4, [pc, #44]	@ (8001b90 <__aeabi_dsub+0x708>)
 8001b62:	e53a      	b.n	80015da <__aeabi_dsub+0x152>
 8001b64:	2d00      	cmp	r5, #0
 8001b66:	d100      	bne.n	8001b6a <__aeabi_dsub+0x6e2>
 8001b68:	e5f6      	b.n	8001758 <__aeabi_dsub+0x2d0>
 8001b6a:	464b      	mov	r3, r9
 8001b6c:	1bda      	subs	r2, r3, r7
 8001b6e:	4692      	mov	sl, r2
 8001b70:	2f00      	cmp	r7, #0
 8001b72:	d100      	bne.n	8001b76 <__aeabi_dsub+0x6ee>
 8001b74:	e66f      	b.n	8001856 <__aeabi_dsub+0x3ce>
 8001b76:	2a38      	cmp	r2, #56	@ 0x38
 8001b78:	dc05      	bgt.n	8001b86 <__aeabi_dsub+0x6fe>
 8001b7a:	2680      	movs	r6, #128	@ 0x80
 8001b7c:	0436      	lsls	r6, r6, #16
 8001b7e:	4334      	orrs	r4, r6
 8001b80:	4688      	mov	r8, r1
 8001b82:	000e      	movs	r6, r1
 8001b84:	e6d1      	b.n	800192a <__aeabi_dsub+0x4a2>
 8001b86:	4688      	mov	r8, r1
 8001b88:	000e      	movs	r6, r1
 8001b8a:	2501      	movs	r5, #1
 8001b8c:	e6de      	b.n	800194c <__aeabi_dsub+0x4c4>
 8001b8e:	46c0      	nop			@ (mov r8, r8)
 8001b90:	000007ff 	.word	0x000007ff
 8001b94:	ff7fffff 	.word	0xff7fffff
 8001b98:	000007fe 	.word	0x000007fe
 8001b9c:	2d00      	cmp	r5, #0
 8001b9e:	d100      	bne.n	8001ba2 <__aeabi_dsub+0x71a>
 8001ba0:	e668      	b.n	8001874 <__aeabi_dsub+0x3ec>
 8001ba2:	464b      	mov	r3, r9
 8001ba4:	1bd9      	subs	r1, r3, r7
 8001ba6:	2f00      	cmp	r7, #0
 8001ba8:	d101      	bne.n	8001bae <__aeabi_dsub+0x726>
 8001baa:	468a      	mov	sl, r1
 8001bac:	e5a7      	b.n	80016fe <__aeabi_dsub+0x276>
 8001bae:	2701      	movs	r7, #1
 8001bb0:	2938      	cmp	r1, #56	@ 0x38
 8001bb2:	dd00      	ble.n	8001bb6 <__aeabi_dsub+0x72e>
 8001bb4:	e5c7      	b.n	8001746 <__aeabi_dsub+0x2be>
 8001bb6:	2280      	movs	r2, #128	@ 0x80
 8001bb8:	0412      	lsls	r2, r2, #16
 8001bba:	4314      	orrs	r4, r2
 8001bbc:	e5af      	b.n	800171e <__aeabi_dsub+0x296>
 8001bbe:	46c0      	nop			@ (mov r8, r8)

08001bc0 <__aeabi_i2d>:
 8001bc0:	b570      	push	{r4, r5, r6, lr}
 8001bc2:	2800      	cmp	r0, #0
 8001bc4:	d016      	beq.n	8001bf4 <__aeabi_i2d+0x34>
 8001bc6:	17c3      	asrs	r3, r0, #31
 8001bc8:	18c5      	adds	r5, r0, r3
 8001bca:	405d      	eors	r5, r3
 8001bcc:	0fc4      	lsrs	r4, r0, #31
 8001bce:	0028      	movs	r0, r5
 8001bd0:	f000 f8f0 	bl	8001db4 <__clzsi2>
 8001bd4:	4b10      	ldr	r3, [pc, #64]	@ (8001c18 <__aeabi_i2d+0x58>)
 8001bd6:	1a1b      	subs	r3, r3, r0
 8001bd8:	055b      	lsls	r3, r3, #21
 8001bda:	0d5b      	lsrs	r3, r3, #21
 8001bdc:	280a      	cmp	r0, #10
 8001bde:	dc14      	bgt.n	8001c0a <__aeabi_i2d+0x4a>
 8001be0:	0002      	movs	r2, r0
 8001be2:	002e      	movs	r6, r5
 8001be4:	3215      	adds	r2, #21
 8001be6:	4096      	lsls	r6, r2
 8001be8:	220b      	movs	r2, #11
 8001bea:	1a12      	subs	r2, r2, r0
 8001bec:	40d5      	lsrs	r5, r2
 8001bee:	032d      	lsls	r5, r5, #12
 8001bf0:	0b2d      	lsrs	r5, r5, #12
 8001bf2:	e003      	b.n	8001bfc <__aeabi_i2d+0x3c>
 8001bf4:	2400      	movs	r4, #0
 8001bf6:	2300      	movs	r3, #0
 8001bf8:	2500      	movs	r5, #0
 8001bfa:	2600      	movs	r6, #0
 8001bfc:	051b      	lsls	r3, r3, #20
 8001bfe:	432b      	orrs	r3, r5
 8001c00:	07e4      	lsls	r4, r4, #31
 8001c02:	4323      	orrs	r3, r4
 8001c04:	0030      	movs	r0, r6
 8001c06:	0019      	movs	r1, r3
 8001c08:	bd70      	pop	{r4, r5, r6, pc}
 8001c0a:	380b      	subs	r0, #11
 8001c0c:	4085      	lsls	r5, r0
 8001c0e:	032d      	lsls	r5, r5, #12
 8001c10:	2600      	movs	r6, #0
 8001c12:	0b2d      	lsrs	r5, r5, #12
 8001c14:	e7f2      	b.n	8001bfc <__aeabi_i2d+0x3c>
 8001c16:	46c0      	nop			@ (mov r8, r8)
 8001c18:	0000041e 	.word	0x0000041e

08001c1c <__aeabi_f2d>:
 8001c1c:	b570      	push	{r4, r5, r6, lr}
 8001c1e:	0242      	lsls	r2, r0, #9
 8001c20:	0043      	lsls	r3, r0, #1
 8001c22:	0fc4      	lsrs	r4, r0, #31
 8001c24:	20fe      	movs	r0, #254	@ 0xfe
 8001c26:	0e1b      	lsrs	r3, r3, #24
 8001c28:	1c59      	adds	r1, r3, #1
 8001c2a:	0a55      	lsrs	r5, r2, #9
 8001c2c:	4208      	tst	r0, r1
 8001c2e:	d00c      	beq.n	8001c4a <__aeabi_f2d+0x2e>
 8001c30:	21e0      	movs	r1, #224	@ 0xe0
 8001c32:	0089      	lsls	r1, r1, #2
 8001c34:	468c      	mov	ip, r1
 8001c36:	076d      	lsls	r5, r5, #29
 8001c38:	0b12      	lsrs	r2, r2, #12
 8001c3a:	4463      	add	r3, ip
 8001c3c:	051b      	lsls	r3, r3, #20
 8001c3e:	4313      	orrs	r3, r2
 8001c40:	07e4      	lsls	r4, r4, #31
 8001c42:	4323      	orrs	r3, r4
 8001c44:	0028      	movs	r0, r5
 8001c46:	0019      	movs	r1, r3
 8001c48:	bd70      	pop	{r4, r5, r6, pc}
 8001c4a:	2b00      	cmp	r3, #0
 8001c4c:	d114      	bne.n	8001c78 <__aeabi_f2d+0x5c>
 8001c4e:	2d00      	cmp	r5, #0
 8001c50:	d01b      	beq.n	8001c8a <__aeabi_f2d+0x6e>
 8001c52:	0028      	movs	r0, r5
 8001c54:	f000 f8ae 	bl	8001db4 <__clzsi2>
 8001c58:	280a      	cmp	r0, #10
 8001c5a:	dc1c      	bgt.n	8001c96 <__aeabi_f2d+0x7a>
 8001c5c:	230b      	movs	r3, #11
 8001c5e:	002a      	movs	r2, r5
 8001c60:	1a1b      	subs	r3, r3, r0
 8001c62:	40da      	lsrs	r2, r3
 8001c64:	0003      	movs	r3, r0
 8001c66:	3315      	adds	r3, #21
 8001c68:	409d      	lsls	r5, r3
 8001c6a:	4b0e      	ldr	r3, [pc, #56]	@ (8001ca4 <__aeabi_f2d+0x88>)
 8001c6c:	0312      	lsls	r2, r2, #12
 8001c6e:	1a1b      	subs	r3, r3, r0
 8001c70:	055b      	lsls	r3, r3, #21
 8001c72:	0b12      	lsrs	r2, r2, #12
 8001c74:	0d5b      	lsrs	r3, r3, #21
 8001c76:	e7e1      	b.n	8001c3c <__aeabi_f2d+0x20>
 8001c78:	2d00      	cmp	r5, #0
 8001c7a:	d009      	beq.n	8001c90 <__aeabi_f2d+0x74>
 8001c7c:	0b13      	lsrs	r3, r2, #12
 8001c7e:	2280      	movs	r2, #128	@ 0x80
 8001c80:	0312      	lsls	r2, r2, #12
 8001c82:	431a      	orrs	r2, r3
 8001c84:	076d      	lsls	r5, r5, #29
 8001c86:	4b08      	ldr	r3, [pc, #32]	@ (8001ca8 <__aeabi_f2d+0x8c>)
 8001c88:	e7d8      	b.n	8001c3c <__aeabi_f2d+0x20>
 8001c8a:	2300      	movs	r3, #0
 8001c8c:	2200      	movs	r2, #0
 8001c8e:	e7d5      	b.n	8001c3c <__aeabi_f2d+0x20>
 8001c90:	2200      	movs	r2, #0
 8001c92:	4b05      	ldr	r3, [pc, #20]	@ (8001ca8 <__aeabi_f2d+0x8c>)
 8001c94:	e7d2      	b.n	8001c3c <__aeabi_f2d+0x20>
 8001c96:	0003      	movs	r3, r0
 8001c98:	002a      	movs	r2, r5
 8001c9a:	3b0b      	subs	r3, #11
 8001c9c:	409a      	lsls	r2, r3
 8001c9e:	2500      	movs	r5, #0
 8001ca0:	e7e3      	b.n	8001c6a <__aeabi_f2d+0x4e>
 8001ca2:	46c0      	nop			@ (mov r8, r8)
 8001ca4:	00000389 	.word	0x00000389
 8001ca8:	000007ff 	.word	0x000007ff

08001cac <__aeabi_d2f>:
 8001cac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cae:	004b      	lsls	r3, r1, #1
 8001cb0:	030f      	lsls	r7, r1, #12
 8001cb2:	0d5b      	lsrs	r3, r3, #21
 8001cb4:	4c3b      	ldr	r4, [pc, #236]	@ (8001da4 <__aeabi_d2f+0xf8>)
 8001cb6:	0f45      	lsrs	r5, r0, #29
 8001cb8:	b083      	sub	sp, #12
 8001cba:	0a7f      	lsrs	r7, r7, #9
 8001cbc:	1c5e      	adds	r6, r3, #1
 8001cbe:	432f      	orrs	r7, r5
 8001cc0:	9000      	str	r0, [sp, #0]
 8001cc2:	9101      	str	r1, [sp, #4]
 8001cc4:	0fca      	lsrs	r2, r1, #31
 8001cc6:	00c5      	lsls	r5, r0, #3
 8001cc8:	4226      	tst	r6, r4
 8001cca:	d00b      	beq.n	8001ce4 <__aeabi_d2f+0x38>
 8001ccc:	4936      	ldr	r1, [pc, #216]	@ (8001da8 <__aeabi_d2f+0xfc>)
 8001cce:	185c      	adds	r4, r3, r1
 8001cd0:	2cfe      	cmp	r4, #254	@ 0xfe
 8001cd2:	dd13      	ble.n	8001cfc <__aeabi_d2f+0x50>
 8001cd4:	20ff      	movs	r0, #255	@ 0xff
 8001cd6:	2300      	movs	r3, #0
 8001cd8:	05c0      	lsls	r0, r0, #23
 8001cda:	4318      	orrs	r0, r3
 8001cdc:	07d2      	lsls	r2, r2, #31
 8001cde:	4310      	orrs	r0, r2
 8001ce0:	b003      	add	sp, #12
 8001ce2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ce4:	2b00      	cmp	r3, #0
 8001ce6:	d102      	bne.n	8001cee <__aeabi_d2f+0x42>
 8001ce8:	2000      	movs	r0, #0
 8001cea:	2300      	movs	r3, #0
 8001cec:	e7f4      	b.n	8001cd8 <__aeabi_d2f+0x2c>
 8001cee:	433d      	orrs	r5, r7
 8001cf0:	d0f0      	beq.n	8001cd4 <__aeabi_d2f+0x28>
 8001cf2:	2380      	movs	r3, #128	@ 0x80
 8001cf4:	03db      	lsls	r3, r3, #15
 8001cf6:	20ff      	movs	r0, #255	@ 0xff
 8001cf8:	433b      	orrs	r3, r7
 8001cfa:	e7ed      	b.n	8001cd8 <__aeabi_d2f+0x2c>
 8001cfc:	2c00      	cmp	r4, #0
 8001cfe:	dd14      	ble.n	8001d2a <__aeabi_d2f+0x7e>
 8001d00:	9b00      	ldr	r3, [sp, #0]
 8001d02:	00ff      	lsls	r7, r7, #3
 8001d04:	019b      	lsls	r3, r3, #6
 8001d06:	1e58      	subs	r0, r3, #1
 8001d08:	4183      	sbcs	r3, r0
 8001d0a:	0f69      	lsrs	r1, r5, #29
 8001d0c:	433b      	orrs	r3, r7
 8001d0e:	430b      	orrs	r3, r1
 8001d10:	0759      	lsls	r1, r3, #29
 8001d12:	d041      	beq.n	8001d98 <__aeabi_d2f+0xec>
 8001d14:	210f      	movs	r1, #15
 8001d16:	4019      	ands	r1, r3
 8001d18:	2904      	cmp	r1, #4
 8001d1a:	d028      	beq.n	8001d6e <__aeabi_d2f+0xc2>
 8001d1c:	3304      	adds	r3, #4
 8001d1e:	0159      	lsls	r1, r3, #5
 8001d20:	d525      	bpl.n	8001d6e <__aeabi_d2f+0xc2>
 8001d22:	3401      	adds	r4, #1
 8001d24:	2300      	movs	r3, #0
 8001d26:	b2e0      	uxtb	r0, r4
 8001d28:	e7d6      	b.n	8001cd8 <__aeabi_d2f+0x2c>
 8001d2a:	0021      	movs	r1, r4
 8001d2c:	3117      	adds	r1, #23
 8001d2e:	dbdb      	blt.n	8001ce8 <__aeabi_d2f+0x3c>
 8001d30:	2180      	movs	r1, #128	@ 0x80
 8001d32:	201e      	movs	r0, #30
 8001d34:	0409      	lsls	r1, r1, #16
 8001d36:	4339      	orrs	r1, r7
 8001d38:	1b00      	subs	r0, r0, r4
 8001d3a:	281f      	cmp	r0, #31
 8001d3c:	dd1b      	ble.n	8001d76 <__aeabi_d2f+0xca>
 8001d3e:	2602      	movs	r6, #2
 8001d40:	4276      	negs	r6, r6
 8001d42:	1b34      	subs	r4, r6, r4
 8001d44:	000e      	movs	r6, r1
 8001d46:	40e6      	lsrs	r6, r4
 8001d48:	0034      	movs	r4, r6
 8001d4a:	2820      	cmp	r0, #32
 8001d4c:	d004      	beq.n	8001d58 <__aeabi_d2f+0xac>
 8001d4e:	4817      	ldr	r0, [pc, #92]	@ (8001dac <__aeabi_d2f+0x100>)
 8001d50:	4684      	mov	ip, r0
 8001d52:	4463      	add	r3, ip
 8001d54:	4099      	lsls	r1, r3
 8001d56:	430d      	orrs	r5, r1
 8001d58:	002b      	movs	r3, r5
 8001d5a:	1e59      	subs	r1, r3, #1
 8001d5c:	418b      	sbcs	r3, r1
 8001d5e:	4323      	orrs	r3, r4
 8001d60:	0759      	lsls	r1, r3, #29
 8001d62:	d015      	beq.n	8001d90 <__aeabi_d2f+0xe4>
 8001d64:	210f      	movs	r1, #15
 8001d66:	2400      	movs	r4, #0
 8001d68:	4019      	ands	r1, r3
 8001d6a:	2904      	cmp	r1, #4
 8001d6c:	d117      	bne.n	8001d9e <__aeabi_d2f+0xf2>
 8001d6e:	019b      	lsls	r3, r3, #6
 8001d70:	0a5b      	lsrs	r3, r3, #9
 8001d72:	b2e0      	uxtb	r0, r4
 8001d74:	e7b0      	b.n	8001cd8 <__aeabi_d2f+0x2c>
 8001d76:	4c0e      	ldr	r4, [pc, #56]	@ (8001db0 <__aeabi_d2f+0x104>)
 8001d78:	191c      	adds	r4, r3, r4
 8001d7a:	002b      	movs	r3, r5
 8001d7c:	40a5      	lsls	r5, r4
 8001d7e:	40c3      	lsrs	r3, r0
 8001d80:	40a1      	lsls	r1, r4
 8001d82:	1e68      	subs	r0, r5, #1
 8001d84:	4185      	sbcs	r5, r0
 8001d86:	4329      	orrs	r1, r5
 8001d88:	430b      	orrs	r3, r1
 8001d8a:	2400      	movs	r4, #0
 8001d8c:	0759      	lsls	r1, r3, #29
 8001d8e:	d1c1      	bne.n	8001d14 <__aeabi_d2f+0x68>
 8001d90:	019b      	lsls	r3, r3, #6
 8001d92:	2000      	movs	r0, #0
 8001d94:	0a5b      	lsrs	r3, r3, #9
 8001d96:	e79f      	b.n	8001cd8 <__aeabi_d2f+0x2c>
 8001d98:	08db      	lsrs	r3, r3, #3
 8001d9a:	b2e0      	uxtb	r0, r4
 8001d9c:	e79c      	b.n	8001cd8 <__aeabi_d2f+0x2c>
 8001d9e:	3304      	adds	r3, #4
 8001da0:	e7e5      	b.n	8001d6e <__aeabi_d2f+0xc2>
 8001da2:	46c0      	nop			@ (mov r8, r8)
 8001da4:	000007fe 	.word	0x000007fe
 8001da8:	fffffc80 	.word	0xfffffc80
 8001dac:	fffffca2 	.word	0xfffffca2
 8001db0:	fffffc82 	.word	0xfffffc82

08001db4 <__clzsi2>:
 8001db4:	211c      	movs	r1, #28
 8001db6:	2301      	movs	r3, #1
 8001db8:	041b      	lsls	r3, r3, #16
 8001dba:	4298      	cmp	r0, r3
 8001dbc:	d301      	bcc.n	8001dc2 <__clzsi2+0xe>
 8001dbe:	0c00      	lsrs	r0, r0, #16
 8001dc0:	3910      	subs	r1, #16
 8001dc2:	0a1b      	lsrs	r3, r3, #8
 8001dc4:	4298      	cmp	r0, r3
 8001dc6:	d301      	bcc.n	8001dcc <__clzsi2+0x18>
 8001dc8:	0a00      	lsrs	r0, r0, #8
 8001dca:	3908      	subs	r1, #8
 8001dcc:	091b      	lsrs	r3, r3, #4
 8001dce:	4298      	cmp	r0, r3
 8001dd0:	d301      	bcc.n	8001dd6 <__clzsi2+0x22>
 8001dd2:	0900      	lsrs	r0, r0, #4
 8001dd4:	3904      	subs	r1, #4
 8001dd6:	a202      	add	r2, pc, #8	@ (adr r2, 8001de0 <__clzsi2+0x2c>)
 8001dd8:	5c10      	ldrb	r0, [r2, r0]
 8001dda:	1840      	adds	r0, r0, r1
 8001ddc:	4770      	bx	lr
 8001dde:	46c0      	nop			@ (mov r8, r8)
 8001de0:	02020304 	.word	0x02020304
 8001de4:	01010101 	.word	0x01010101
	...

08001df0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001df0:	b580      	push	{r7, lr}
 8001df2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001df4:	f000 fb1e 	bl	8002434 <HAL_Init>

  /* USER CODE BEGIN Init */
  dsw_lsw_rl_gpio_init();
 8001df8:	f000 f848 	bl	8001e8c <dsw_lsw_rl_gpio_init>
  adc_init();
 8001dfc:	f000 f8da 	bl	8001fb4 <adc_init>
  //UART_INIT();

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001e00:	f000 f803 	bl	8001e0a <SystemClock_Config>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  up_down();
 8001e04:	f000 f992 	bl	800212c <up_down>
 8001e08:	e7fc      	b.n	8001e04 <main+0x14>

08001e0a <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001e0a:	b590      	push	{r4, r7, lr}
 8001e0c:	b091      	sub	sp, #68	@ 0x44
 8001e0e:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001e10:	2410      	movs	r4, #16
 8001e12:	193b      	adds	r3, r7, r4
 8001e14:	0018      	movs	r0, r3
 8001e16:	2330      	movs	r3, #48	@ 0x30
 8001e18:	001a      	movs	r2, r3
 8001e1a:	2100      	movs	r1, #0
 8001e1c:	f001 f860 	bl	8002ee0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001e20:	003b      	movs	r3, r7
 8001e22:	0018      	movs	r0, r3
 8001e24:	2310      	movs	r3, #16
 8001e26:	001a      	movs	r2, r3
 8001e28:	2100      	movs	r1, #0
 8001e2a:	f001 f859 	bl	8002ee0 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001e2e:	0021      	movs	r1, r4
 8001e30:	187b      	adds	r3, r7, r1
 8001e32:	2202      	movs	r2, #2
 8001e34:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001e36:	187b      	adds	r3, r7, r1
 8001e38:	2201      	movs	r2, #1
 8001e3a:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001e3c:	187b      	adds	r3, r7, r1
 8001e3e:	2210      	movs	r2, #16
 8001e40:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8001e42:	187b      	adds	r3, r7, r1
 8001e44:	2200      	movs	r2, #0
 8001e46:	621a      	str	r2, [r3, #32]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e48:	187b      	adds	r3, r7, r1
 8001e4a:	0018      	movs	r0, r3
 8001e4c:	f000 fc0a 	bl	8002664 <HAL_RCC_OscConfig>
 8001e50:	1e03      	subs	r3, r0, #0
 8001e52:	d001      	beq.n	8001e58 <SystemClock_Config+0x4e>
  {
    Error_Handler();
 8001e54:	f000 fa7c 	bl	8002350 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001e58:	003b      	movs	r3, r7
 8001e5a:	2207      	movs	r2, #7
 8001e5c:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8001e5e:	003b      	movs	r3, r7
 8001e60:	2200      	movs	r2, #0
 8001e62:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001e64:	003b      	movs	r3, r7
 8001e66:	2200      	movs	r2, #0
 8001e68:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001e6a:	003b      	movs	r3, r7
 8001e6c:	2200      	movs	r2, #0
 8001e6e:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001e70:	003b      	movs	r3, r7
 8001e72:	2100      	movs	r1, #0
 8001e74:	0018      	movs	r0, r3
 8001e76:	f000 ff0f 	bl	8002c98 <HAL_RCC_ClockConfig>
 8001e7a:	1e03      	subs	r3, r0, #0
 8001e7c:	d001      	beq.n	8001e82 <SystemClock_Config+0x78>
  {
    Error_Handler();
 8001e7e:	f000 fa67 	bl	8002350 <Error_Handler>
  }
}
 8001e82:	46c0      	nop			@ (mov r8, r8)
 8001e84:	46bd      	mov	sp, r7
 8001e86:	b011      	add	sp, #68	@ 0x44
 8001e88:	bd90      	pop	{r4, r7, pc}
	...

08001e8c <dsw_lsw_rl_gpio_init>:

/* USER CODE BEGIN 4 */
void dsw_lsw_rl_gpio_init(void)
{
 8001e8c:	b580      	push	{r7, lr}
 8001e8e:	af00      	add	r7, sp, #0
  	RCC->AHBENR|=(1<<17);//CLK FOR GPIOA
 8001e90:	4b3b      	ldr	r3, [pc, #236]	@ (8001f80 <dsw_lsw_rl_gpio_init+0xf4>)
 8001e92:	695a      	ldr	r2, [r3, #20]
 8001e94:	4b3a      	ldr	r3, [pc, #232]	@ (8001f80 <dsw_lsw_rl_gpio_init+0xf4>)
 8001e96:	2180      	movs	r1, #128	@ 0x80
 8001e98:	0289      	lsls	r1, r1, #10
 8001e9a:	430a      	orrs	r2, r1
 8001e9c:	615a      	str	r2, [r3, #20]


  	GPIOA->MODER&=(~(1<<2))&(~(1<<3));//PA1 INPUT(DOOR DOWN SWITCH)
 8001e9e:	2390      	movs	r3, #144	@ 0x90
 8001ea0:	05db      	lsls	r3, r3, #23
 8001ea2:	681a      	ldr	r2, [r3, #0]
 8001ea4:	2390      	movs	r3, #144	@ 0x90
 8001ea6:	05db      	lsls	r3, r3, #23
 8001ea8:	210c      	movs	r1, #12
 8001eaa:	438a      	bics	r2, r1
 8001eac:	601a      	str	r2, [r3, #0]
  	GPIOA->MODER&=(~(1<<4))&(~(1<<5));//PA2 INPUT(DOOR UP SWITCH)
 8001eae:	2390      	movs	r3, #144	@ 0x90
 8001eb0:	05db      	lsls	r3, r3, #23
 8001eb2:	681a      	ldr	r2, [r3, #0]
 8001eb4:	2390      	movs	r3, #144	@ 0x90
 8001eb6:	05db      	lsls	r3, r3, #23
 8001eb8:	2130      	movs	r1, #48	@ 0x30
 8001eba:	438a      	bics	r2, r1
 8001ebc:	601a      	str	r2, [r3, #0]


  	GPIOA->MODER&=(~(1<<6))&(~(1<<7));//PA3 INPUT(LIMIT DOWN SWITCH)
 8001ebe:	2390      	movs	r3, #144	@ 0x90
 8001ec0:	05db      	lsls	r3, r3, #23
 8001ec2:	681a      	ldr	r2, [r3, #0]
 8001ec4:	2390      	movs	r3, #144	@ 0x90
 8001ec6:	05db      	lsls	r3, r3, #23
 8001ec8:	21c0      	movs	r1, #192	@ 0xc0
 8001eca:	438a      	bics	r2, r1
 8001ecc:	601a      	str	r2, [r3, #0]
  	GPIOA->MODER&=(~(1<<8))&(~(1<<9));//PA4 INPUT(LIMIT UP SWITCH)
 8001ece:	2390      	movs	r3, #144	@ 0x90
 8001ed0:	05db      	lsls	r3, r3, #23
 8001ed2:	681a      	ldr	r2, [r3, #0]
 8001ed4:	2390      	movs	r3, #144	@ 0x90
 8001ed6:	05db      	lsls	r3, r3, #23
 8001ed8:	492a      	ldr	r1, [pc, #168]	@ (8001f84 <dsw_lsw_rl_gpio_init+0xf8>)
 8001eda:	400a      	ands	r2, r1
 8001edc:	601a      	str	r2, [r3, #0]

  	GPIOA->MODER|=(1<<10);//PA5 OUTPUT(RELAY R1)
 8001ede:	2390      	movs	r3, #144	@ 0x90
 8001ee0:	05db      	lsls	r3, r3, #23
 8001ee2:	681a      	ldr	r2, [r3, #0]
 8001ee4:	2390      	movs	r3, #144	@ 0x90
 8001ee6:	05db      	lsls	r3, r3, #23
 8001ee8:	2180      	movs	r1, #128	@ 0x80
 8001eea:	00c9      	lsls	r1, r1, #3
 8001eec:	430a      	orrs	r2, r1
 8001eee:	601a      	str	r2, [r3, #0]
  	GPIOA->MODER|=(1<<12);//PA6 OUTPUT(RELAY R2)
 8001ef0:	2390      	movs	r3, #144	@ 0x90
 8001ef2:	05db      	lsls	r3, r3, #23
 8001ef4:	681a      	ldr	r2, [r3, #0]
 8001ef6:	2390      	movs	r3, #144	@ 0x90
 8001ef8:	05db      	lsls	r3, r3, #23
 8001efa:	2180      	movs	r1, #128	@ 0x80
 8001efc:	0149      	lsls	r1, r1, #5
 8001efe:	430a      	orrs	r2, r1
 8001f00:	601a      	str	r2, [r3, #0]

  	GPIOA->PUPDR|=1<<3;//PA1 PULL-DOWN
 8001f02:	2390      	movs	r3, #144	@ 0x90
 8001f04:	05db      	lsls	r3, r3, #23
 8001f06:	68da      	ldr	r2, [r3, #12]
 8001f08:	2390      	movs	r3, #144	@ 0x90
 8001f0a:	05db      	lsls	r3, r3, #23
 8001f0c:	2108      	movs	r1, #8
 8001f0e:	430a      	orrs	r2, r1
 8001f10:	60da      	str	r2, [r3, #12]
  	GPIOA->PUPDR|=1<<5;//PA2 PULL-DOWN
 8001f12:	2390      	movs	r3, #144	@ 0x90
 8001f14:	05db      	lsls	r3, r3, #23
 8001f16:	68da      	ldr	r2, [r3, #12]
 8001f18:	2390      	movs	r3, #144	@ 0x90
 8001f1a:	05db      	lsls	r3, r3, #23
 8001f1c:	2120      	movs	r1, #32
 8001f1e:	430a      	orrs	r2, r1
 8001f20:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR|=1<<7;//PA3 PULL-DOWN
 8001f22:	2390      	movs	r3, #144	@ 0x90
 8001f24:	05db      	lsls	r3, r3, #23
 8001f26:	68da      	ldr	r2, [r3, #12]
 8001f28:	2390      	movs	r3, #144	@ 0x90
 8001f2a:	05db      	lsls	r3, r3, #23
 8001f2c:	2180      	movs	r1, #128	@ 0x80
 8001f2e:	430a      	orrs	r2, r1
 8001f30:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR|=1<<9;//PA4 PULL-DOWN
 8001f32:	2390      	movs	r3, #144	@ 0x90
 8001f34:	05db      	lsls	r3, r3, #23
 8001f36:	68da      	ldr	r2, [r3, #12]
 8001f38:	2390      	movs	r3, #144	@ 0x90
 8001f3a:	05db      	lsls	r3, r3, #23
 8001f3c:	2180      	movs	r1, #128	@ 0x80
 8001f3e:	0089      	lsls	r1, r1, #2
 8001f40:	430a      	orrs	r2, r1
 8001f42:	60da      	str	r2, [r3, #12]

	GPIOA->PUPDR|=1<<10;//PA5 PULL-UP(Relay 1)
 8001f44:	2390      	movs	r3, #144	@ 0x90
 8001f46:	05db      	lsls	r3, r3, #23
 8001f48:	68da      	ldr	r2, [r3, #12]
 8001f4a:	2390      	movs	r3, #144	@ 0x90
 8001f4c:	05db      	lsls	r3, r3, #23
 8001f4e:	2180      	movs	r1, #128	@ 0x80
 8001f50:	00c9      	lsls	r1, r1, #3
 8001f52:	430a      	orrs	r2, r1
 8001f54:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR|=1<<12;//PA6 PULL-UP(Relay 2)
 8001f56:	2390      	movs	r3, #144	@ 0x90
 8001f58:	05db      	lsls	r3, r3, #23
 8001f5a:	68da      	ldr	r2, [r3, #12]
 8001f5c:	2390      	movs	r3, #144	@ 0x90
 8001f5e:	05db      	lsls	r3, r3, #23
 8001f60:	2180      	movs	r1, #128	@ 0x80
 8001f62:	0149      	lsls	r1, r1, #5
 8001f64:	430a      	orrs	r2, r1
 8001f66:	60da      	str	r2, [r3, #12]

	GPIOA->ODR|=(1<<5)|(1<<6);//Initially realay should on
 8001f68:	2390      	movs	r3, #144	@ 0x90
 8001f6a:	05db      	lsls	r3, r3, #23
 8001f6c:	695a      	ldr	r2, [r3, #20]
 8001f6e:	2390      	movs	r3, #144	@ 0x90
 8001f70:	05db      	lsls	r3, r3, #23
 8001f72:	2160      	movs	r1, #96	@ 0x60
 8001f74:	430a      	orrs	r2, r1
 8001f76:	615a      	str	r2, [r3, #20]

}
 8001f78:	46c0      	nop			@ (mov r8, r8)
 8001f7a:	46bd      	mov	sp, r7
 8001f7c:	bd80      	pop	{r7, pc}
 8001f7e:	46c0      	nop			@ (mov r8, r8)
 8001f80:	40021000 	.word	0x40021000
 8001f84:	fffffcff 	.word	0xfffffcff

08001f88 <delay_ms>:
/************************* SOFTWARE DELAY **************************************/
void delay_ms(int ms)
{
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	b082      	sub	sp, #8
 8001f8c:	af00      	add	r7, sp, #0
 8001f8e:	6078      	str	r0, [r7, #4]
 ms*=12000;
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	4a07      	ldr	r2, [pc, #28]	@ (8001fb0 <delay_ms+0x28>)
 8001f94:	4353      	muls	r3, r2
 8001f96:	607b      	str	r3, [r7, #4]
 while(ms--);
 8001f98:	46c0      	nop			@ (mov r8, r8)
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	1e5a      	subs	r2, r3, #1
 8001f9e:	607a      	str	r2, [r7, #4]
 8001fa0:	2b00      	cmp	r3, #0
 8001fa2:	d1fa      	bne.n	8001f9a <delay_ms+0x12>
}
 8001fa4:	46c0      	nop			@ (mov r8, r8)
 8001fa6:	46c0      	nop			@ (mov r8, r8)
 8001fa8:	46bd      	mov	sp, r7
 8001faa:	b002      	add	sp, #8
 8001fac:	bd80      	pop	{r7, pc}
 8001fae:	46c0      	nop			@ (mov r8, r8)
 8001fb0:	00002ee0 	.word	0x00002ee0

08001fb4 <adc_init>:
/************************* ADC INIT ********************************************/
void adc_init()
{
 8001fb4:	b580      	push	{r7, lr}
 8001fb6:	af00      	add	r7, sp, #0

	RCC->APB2ENR|=(1<<9);
 8001fb8:	4b25      	ldr	r3, [pc, #148]	@ (8002050 <adc_init+0x9c>)
 8001fba:	699a      	ldr	r2, [r3, #24]
 8001fbc:	4b24      	ldr	r3, [pc, #144]	@ (8002050 <adc_init+0x9c>)
 8001fbe:	2180      	movs	r1, #128	@ 0x80
 8001fc0:	0089      	lsls	r1, r1, #2
 8001fc2:	430a      	orrs	r2, r1
 8001fc4:	619a      	str	r2, [r3, #24]
	RCC->AHBENR|=(1<<17);
 8001fc6:	4b22      	ldr	r3, [pc, #136]	@ (8002050 <adc_init+0x9c>)
 8001fc8:	695a      	ldr	r2, [r3, #20]
 8001fca:	4b21      	ldr	r3, [pc, #132]	@ (8002050 <adc_init+0x9c>)
 8001fcc:	2180      	movs	r1, #128	@ 0x80
 8001fce:	0289      	lsls	r1, r1, #10
 8001fd0:	430a      	orrs	r2, r1
 8001fd2:	615a      	str	r2, [r3, #20]
	GPIOA->MODER|=0X3;
 8001fd4:	2390      	movs	r3, #144	@ 0x90
 8001fd6:	05db      	lsls	r3, r3, #23
 8001fd8:	681a      	ldr	r2, [r3, #0]
 8001fda:	2390      	movs	r3, #144	@ 0x90
 8001fdc:	05db      	lsls	r3, r3, #23
 8001fde:	2103      	movs	r1, #3
 8001fe0:	430a      	orrs	r2, r1
 8001fe2:	601a      	str	r2, [r3, #0]
	ADC1->CR |= 1<<31; /* (4) */
 8001fe4:	4b1b      	ldr	r3, [pc, #108]	@ (8002054 <adc_init+0xa0>)
 8001fe6:	689a      	ldr	r2, [r3, #8]
 8001fe8:	4b1a      	ldr	r3, [pc, #104]	@ (8002054 <adc_init+0xa0>)
 8001fea:	2180      	movs	r1, #128	@ 0x80
 8001fec:	0609      	lsls	r1, r1, #24
 8001fee:	430a      	orrs	r2, r1
 8001ff0:	609a      	str	r2, [r3, #8]
	while ((ADC1->CR>>31 & 1) != 0);
 8001ff2:	46c0      	nop			@ (mov r8, r8)
 8001ff4:	4b17      	ldr	r3, [pc, #92]	@ (8002054 <adc_init+0xa0>)
 8001ff6:	689b      	ldr	r3, [r3, #8]
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	dbfb      	blt.n	8001ff4 <adc_init+0x40>
	ADC1->CFGR2&=(~(1<<31))&(~(1<<30));//ASYN CLK
 8001ffc:	4b15      	ldr	r3, [pc, #84]	@ (8002054 <adc_init+0xa0>)
 8001ffe:	691a      	ldr	r2, [r3, #16]
 8002000:	4b14      	ldr	r3, [pc, #80]	@ (8002054 <adc_init+0xa0>)
 8002002:	0092      	lsls	r2, r2, #2
 8002004:	0892      	lsrs	r2, r2, #2
 8002006:	611a      	str	r2, [r3, #16]
	ADC1->CFGR1&=(~(1<<0));//SCAN CHNL FROM 0 TO 18
 8002008:	4b12      	ldr	r3, [pc, #72]	@ (8002054 <adc_init+0xa0>)
 800200a:	68da      	ldr	r2, [r3, #12]
 800200c:	4b11      	ldr	r3, [pc, #68]	@ (8002054 <adc_init+0xa0>)
 800200e:	2101      	movs	r1, #1
 8002010:	438a      	bics	r2, r1
 8002012:	60da      	str	r2, [r3, #12]
	ADC1->CFGR1|=(1<<13);
 8002014:	4b0f      	ldr	r3, [pc, #60]	@ (8002054 <adc_init+0xa0>)
 8002016:	68da      	ldr	r2, [r3, #12]
 8002018:	4b0e      	ldr	r3, [pc, #56]	@ (8002054 <adc_init+0xa0>)
 800201a:	2180      	movs	r1, #128	@ 0x80
 800201c:	0189      	lsls	r1, r1, #6
 800201e:	430a      	orrs	r2, r1
 8002020:	60da      	str	r2, [r3, #12]
	ADC1->CR|=(1<<0);
 8002022:	4b0c      	ldr	r3, [pc, #48]	@ (8002054 <adc_init+0xa0>)
 8002024:	689a      	ldr	r2, [r3, #8]
 8002026:	4b0b      	ldr	r3, [pc, #44]	@ (8002054 <adc_init+0xa0>)
 8002028:	2101      	movs	r1, #1
 800202a:	430a      	orrs	r2, r1
 800202c:	609a      	str	r2, [r3, #8]
	ADC1->CHSELR|=(1<<0);
 800202e:	4b09      	ldr	r3, [pc, #36]	@ (8002054 <adc_init+0xa0>)
 8002030:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8002032:	4b08      	ldr	r3, [pc, #32]	@ (8002054 <adc_init+0xa0>)
 8002034:	2101      	movs	r1, #1
 8002036:	430a      	orrs	r2, r1
 8002038:	629a      	str	r2, [r3, #40]	@ 0x28
	while(!(ADC1->ISR>>0 &1));
 800203a:	46c0      	nop			@ (mov r8, r8)
 800203c:	4b05      	ldr	r3, [pc, #20]	@ (8002054 <adc_init+0xa0>)
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	2201      	movs	r2, #1
 8002042:	4013      	ands	r3, r2
 8002044:	d0fa      	beq.n	800203c <adc_init+0x88>
}
 8002046:	46c0      	nop			@ (mov r8, r8)
 8002048:	46c0      	nop			@ (mov r8, r8)
 800204a:	46bd      	mov	sp, r7
 800204c:	bd80      	pop	{r7, pc}
 800204e:	46c0      	nop			@ (mov r8, r8)
 8002050:	40021000 	.word	0x40021000
 8002054:	40012400 	.word	0x40012400

08002058 <ADC_READ>:
/*****************************ADC READ ****************************************/
uint16_t ADC_READ()
{
 8002058:	b580      	push	{r7, lr}
 800205a:	af00      	add	r7, sp, #0
	    ADC1->CR |= (1<<2); // START COVR
 800205c:	4b08      	ldr	r3, [pc, #32]	@ (8002080 <ADC_READ+0x28>)
 800205e:	689a      	ldr	r2, [r3, #8]
 8002060:	4b07      	ldr	r3, [pc, #28]	@ (8002080 <ADC_READ+0x28>)
 8002062:	2104      	movs	r1, #4
 8002064:	430a      	orrs	r2, r1
 8002066:	609a      	str	r2, [r3, #8]
	    while (!(ADC1->ISR>>2&1)); // END CONVER
 8002068:	46c0      	nop			@ (mov r8, r8)
 800206a:	4b05      	ldr	r3, [pc, #20]	@ (8002080 <ADC_READ+0x28>)
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	2204      	movs	r2, #4
 8002070:	4013      	ands	r3, r2
 8002072:	d0fa      	beq.n	800206a <ADC_READ+0x12>
	    return ADC1->DR; // READ COVERT VAL
 8002074:	4b02      	ldr	r3, [pc, #8]	@ (8002080 <ADC_READ+0x28>)
 8002076:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002078:	b29b      	uxth	r3, r3
}
 800207a:	0018      	movs	r0, r3
 800207c:	46bd      	mov	sp, r7
 800207e:	bd80      	pop	{r7, pc}
 8002080:	40012400 	.word	0x40012400

08002084 <motor_down>:
/*-------------------------------------MOTOR_UP--------------------------------*/
void motor_down(void)
{
 8002084:	b580      	push	{r7, lr}
 8002086:	af00      	add	r7, sp, #0
   GPIOA->BSRR|=(1<<21);//RELAY R1 ON
 8002088:	2390      	movs	r3, #144	@ 0x90
 800208a:	05db      	lsls	r3, r3, #23
 800208c:	699a      	ldr	r2, [r3, #24]
 800208e:	2390      	movs	r3, #144	@ 0x90
 8002090:	05db      	lsls	r3, r3, #23
 8002092:	2180      	movs	r1, #128	@ 0x80
 8002094:	0389      	lsls	r1, r1, #14
 8002096:	430a      	orrs	r2, r1
 8002098:	619a      	str	r2, [r3, #24]
   GPIOA->ODR|=(1<<6);//RELAY R2 OFF
 800209a:	2390      	movs	r3, #144	@ 0x90
 800209c:	05db      	lsls	r3, r3, #23
 800209e:	695a      	ldr	r2, [r3, #20]
 80020a0:	2390      	movs	r3, #144	@ 0x90
 80020a2:	05db      	lsls	r3, r3, #23
 80020a4:	2140      	movs	r1, #64	@ 0x40
 80020a6:	430a      	orrs	r2, r1
 80020a8:	615a      	str	r2, [r3, #20]
}
 80020aa:	46c0      	nop			@ (mov r8, r8)
 80020ac:	46bd      	mov	sp, r7
 80020ae:	bd80      	pop	{r7, pc}

080020b0 <motor_up>:


/*------------------------------------MOTOR_DOWN-----------------------------*/
void motor_up(void)
{
 80020b0:	b580      	push	{r7, lr}
 80020b2:	af00      	add	r7, sp, #0
   GPIOA->BSRR|=(1<<22);//RELAY R2 ON
 80020b4:	2390      	movs	r3, #144	@ 0x90
 80020b6:	05db      	lsls	r3, r3, #23
 80020b8:	699a      	ldr	r2, [r3, #24]
 80020ba:	2390      	movs	r3, #144	@ 0x90
 80020bc:	05db      	lsls	r3, r3, #23
 80020be:	2180      	movs	r1, #128	@ 0x80
 80020c0:	03c9      	lsls	r1, r1, #15
 80020c2:	430a      	orrs	r2, r1
 80020c4:	619a      	str	r2, [r3, #24]
   GPIOA->ODR|=(1<<5);//RELAY R1 0FF
 80020c6:	2390      	movs	r3, #144	@ 0x90
 80020c8:	05db      	lsls	r3, r3, #23
 80020ca:	695a      	ldr	r2, [r3, #20]
 80020cc:	2390      	movs	r3, #144	@ 0x90
 80020ce:	05db      	lsls	r3, r3, #23
 80020d0:	2120      	movs	r1, #32
 80020d2:	430a      	orrs	r2, r1
 80020d4:	615a      	str	r2, [r3, #20]
}
 80020d6:	46c0      	nop			@ (mov r8, r8)
 80020d8:	46bd      	mov	sp, r7
 80020da:	bd80      	pop	{r7, pc}

080020dc <motor_stop>:


/*------------------------------------MOTOR_STOP-----------------------------*/
void motor_stop(void)
{
 80020dc:	b580      	push	{r7, lr}
 80020de:	af00      	add	r7, sp, #0
	GPIOA->ODR|=(1<<5)|(1<<6);//Stop Motor,RELAY PINS HIGH
 80020e0:	2390      	movs	r3, #144	@ 0x90
 80020e2:	05db      	lsls	r3, r3, #23
 80020e4:	695a      	ldr	r2, [r3, #20]
 80020e6:	2390      	movs	r3, #144	@ 0x90
 80020e8:	05db      	lsls	r3, r3, #23
 80020ea:	2160      	movs	r1, #96	@ 0x60
 80020ec:	430a      	orrs	r2, r1
 80020ee:	615a      	str	r2, [r3, #20]
	//current=0;
	cnt=0;
 80020f0:	4b02      	ldr	r3, [pc, #8]	@ (80020fc <motor_stop+0x20>)
 80020f2:	2200      	movs	r2, #0
 80020f4:	601a      	str	r2, [r3, #0]
}
 80020f6:	46c0      	nop			@ (mov r8, r8)
 80020f8:	46bd      	mov	sp, r7
 80020fa:	bd80      	pop	{r7, pc}
 80020fc:	20000038 	.word	0x20000038

08002100 <anti_pinch>:
/************************************ANTI-PINCH*********************************/
void anti_pinch(void)
{
 8002100:	b580      	push	{r7, lr}
 8002102:	af00      	add	r7, sp, #0
motor_stop();
 8002104:	f7ff ffea 	bl	80020dc <motor_stop>
//delay_ms(1);
motor_down();
 8002108:	f7ff ffbc 	bl	8002084 <motor_down>
delay_ms(50);
 800210c:	2032      	movs	r0, #50	@ 0x32
 800210e:	f7ff ff3b 	bl	8001f88 <delay_ms>
motor_stop();
 8002112:	f7ff ffe3 	bl	80020dc <motor_stop>
while(GPIOA->IDR>>2 &1);
 8002116:	46c0      	nop			@ (mov r8, r8)
 8002118:	2390      	movs	r3, #144	@ 0x90
 800211a:	05db      	lsls	r3, r3, #23
 800211c:	691b      	ldr	r3, [r3, #16]
 800211e:	2204      	movs	r2, #4
 8002120:	4013      	ands	r3, r2
 8002122:	d1f9      	bne.n	8002118 <anti_pinch+0x18>
}
 8002124:	46c0      	nop			@ (mov r8, r8)
 8002126:	46c0      	nop			@ (mov r8, r8)
 8002128:	46bd      	mov	sp, r7
 800212a:	bd80      	pop	{r7, pc}

0800212c <up_down>:
/****************************** UP_DOWN_CHECK************************************/
void up_down(void)
{
 800212c:	b580      	push	{r7, lr}
 800212e:	af00      	add	r7, sp, #0
 8002130:	e002      	b.n	8002138 <up_down+0xc>
label1:if(((GPIOA->IDR>>1)&1)==1)
	 {
		 delay_ms(5);
		 if(((GPIOA->IDR>>1)&1)==0)//DEBOUNCE
		 {
			 goto label1;
 8002132:	46c0      	nop			@ (mov r8, r8)
 8002134:	e000      	b.n	8002138 <up_down+0xc>
	 {
		 goto label2;
	 }
	 if((GPIOA->IDR>>4 & 1)==1)//limit switch already press
	 {
		 goto label1;
 8002136:	46c0      	nop			@ (mov r8, r8)
label1:if(((GPIOA->IDR>>1)&1)==1)
 8002138:	2390      	movs	r3, #144	@ 0x90
 800213a:	05db      	lsls	r3, r3, #23
 800213c:	691b      	ldr	r3, [r3, #16]
 800213e:	085b      	lsrs	r3, r3, #1
 8002140:	2201      	movs	r2, #1
 8002142:	4013      	ands	r3, r2
 8002144:	2b01      	cmp	r3, #1
 8002146:	d127      	bne.n	8002198 <up_down+0x6c>
		 delay_ms(5);
 8002148:	2005      	movs	r0, #5
 800214a:	f7ff ff1d 	bl	8001f88 <delay_ms>
		 if(((GPIOA->IDR>>1)&1)==0)//DEBOUNCE
 800214e:	2390      	movs	r3, #144	@ 0x90
 8002150:	05db      	lsls	r3, r3, #23
 8002152:	691b      	ldr	r3, [r3, #16]
 8002154:	2202      	movs	r2, #2
 8002156:	4013      	ands	r3, r2
 8002158:	d0eb      	beq.n	8002132 <up_down+0x6>
		 if((GPIOA->IDR>>3 & 1)==1)//limit switch already press
 800215a:	2390      	movs	r3, #144	@ 0x90
 800215c:	05db      	lsls	r3, r3, #23
 800215e:	691b      	ldr	r3, [r3, #16]
 8002160:	08db      	lsrs	r3, r3, #3
 8002162:	2201      	movs	r2, #1
 8002164:	4013      	ands	r3, r2
 8002166:	2b01      	cmp	r3, #1
 8002168:	d104      	bne.n	8002174 <up_down+0x48>
			 k=2;
 800216a:	4b29      	ldr	r3, [pc, #164]	@ (8002210 <up_down+0xe4>)
 800216c:	2280      	movs	r2, #128	@ 0x80
 800216e:	05d2      	lsls	r2, r2, #23
 8002170:	601a      	str	r2, [r3, #0]
			 goto label1;
 8002172:	e7e1      	b.n	8002138 <up_down+0xc>
			  motor_down();
 8002174:	f7ff ff86 	bl	8002084 <motor_down>
		 while((GPIOA->IDR>>1 &1)&&(!(GPIOA->IDR>>3 &1)));
 8002178:	46c0      	nop			@ (mov r8, r8)
 800217a:	2390      	movs	r3, #144	@ 0x90
 800217c:	05db      	lsls	r3, r3, #23
 800217e:	691b      	ldr	r3, [r3, #16]
 8002180:	2202      	movs	r2, #2
 8002182:	4013      	ands	r3, r2
 8002184:	d005      	beq.n	8002192 <up_down+0x66>
 8002186:	2390      	movs	r3, #144	@ 0x90
 8002188:	05db      	lsls	r3, r3, #23
 800218a:	691b      	ldr	r3, [r3, #16]
 800218c:	2208      	movs	r2, #8
 800218e:	4013      	ands	r3, r2
 8002190:	d0f3      	beq.n	800217a <up_down+0x4e>
	     motor_stop();
 8002192:	f7ff ffa3 	bl	80020dc <motor_stop>
 8002196:	e001      	b.n	800219c <up_down+0x70>
      motor_stop();
 8002198:	f7ff ffa0 	bl	80020dc <motor_stop>
 label2:if(((GPIOA->IDR>>2)&1)==1)
 800219c:	2390      	movs	r3, #144	@ 0x90
 800219e:	05db      	lsls	r3, r3, #23
 80021a0:	691b      	ldr	r3, [r3, #16]
 80021a2:	089b      	lsrs	r3, r3, #2
 80021a4:	2201      	movs	r2, #1
 80021a6:	4013      	ands	r3, r2
 80021a8:	2b01      	cmp	r3, #1
 80021aa:	d12c      	bne.n	8002206 <up_down+0xda>
      delay_ms(5);
 80021ac:	2005      	movs	r0, #5
 80021ae:	f7ff feeb 	bl	8001f88 <delay_ms>
	if(((GPIOA->IDR>>2)&1)==0)//DEBOUNCE
 80021b2:	2390      	movs	r3, #144	@ 0x90
 80021b4:	05db      	lsls	r3, r3, #23
 80021b6:	691b      	ldr	r3, [r3, #16]
 80021b8:	2204      	movs	r2, #4
 80021ba:	4013      	ands	r3, r2
 80021bc:	d100      	bne.n	80021c0 <up_down+0x94>
		 goto label2;
 80021be:	e7ed      	b.n	800219c <up_down+0x70>
	 if((GPIOA->IDR>>4 & 1)==1)//limit switch already press
 80021c0:	2390      	movs	r3, #144	@ 0x90
 80021c2:	05db      	lsls	r3, r3, #23
 80021c4:	691b      	ldr	r3, [r3, #16]
 80021c6:	091b      	lsrs	r3, r3, #4
 80021c8:	2201      	movs	r2, #1
 80021ca:	4013      	ands	r3, r2
 80021cc:	2b01      	cmp	r3, #1
 80021ce:	d0b2      	beq.n	8002136 <up_down+0xa>
	 }
	 else
	 {
		  motor_up();
 80021d0:	f7ff ff6e 	bl	80020b0 <motor_up>
	 }
	 //wait until window switch release or limit switch press or adc current is more
	 while((GPIOA->IDR>>2 & 1)&&(!(GPIOA->IDR>>4 &1)))
 80021d4:	e001      	b.n	80021da <up_down+0xae>
	 {
		 if(!CURRENT())
 80021d6:	f000 f81d 	bl	8002214 <CURRENT>
	 while((GPIOA->IDR>>2 & 1)&&(!(GPIOA->IDR>>4 &1)))
 80021da:	2390      	movs	r3, #144	@ 0x90
 80021dc:	05db      	lsls	r3, r3, #23
 80021de:	691b      	ldr	r3, [r3, #16]
 80021e0:	2204      	movs	r2, #4
 80021e2:	4013      	ands	r3, r2
 80021e4:	d005      	beq.n	80021f2 <up_down+0xc6>
 80021e6:	2390      	movs	r3, #144	@ 0x90
 80021e8:	05db      	lsls	r3, r3, #23
 80021ea:	691b      	ldr	r3, [r3, #16]
 80021ec:	2210      	movs	r2, #16
 80021ee:	4013      	ands	r3, r2
 80021f0:	d0f1      	beq.n	80021d6 <up_down+0xaa>
		 {
		 }
	 }
	 motor_stop();
 80021f2:	f7ff ff73 	bl	80020dc <motor_stop>
	 while(GPIOA->IDR>>2 &1);
 80021f6:	46c0      	nop			@ (mov r8, r8)
 80021f8:	2390      	movs	r3, #144	@ 0x90
 80021fa:	05db      	lsls	r3, r3, #23
 80021fc:	691b      	ldr	r3, [r3, #16]
 80021fe:	2204      	movs	r2, #4
 8002200:	4013      	ands	r3, r2
 8002202:	d1f9      	bne.n	80021f8 <up_down+0xcc>
}
else
{
  motor_stop();
}
}
 8002204:	e001      	b.n	800220a <up_down+0xde>
  motor_stop();
 8002206:	f7ff ff69 	bl	80020dc <motor_stop>
}
 800220a:	46c0      	nop			@ (mov r8, r8)
 800220c:	46bd      	mov	sp, r7
 800220e:	bd80      	pop	{r7, pc}
 8002210:	20000030 	.word	0x20000030

08002214 <CURRENT>:
/****************************CURRENT READ ***********************************/
int CURRENT(void)
{
 8002214:	b580      	push	{r7, lr}
 8002216:	b082      	sub	sp, #8
 8002218:	af00      	add	r7, sp, #0
   adc_val=0;
 800221a:	4b40      	ldr	r3, [pc, #256]	@ (800231c <CURRENT+0x108>)
 800221c:	2200      	movs	r2, #0
 800221e:	601a      	str	r2, [r3, #0]
   if(cnt==0)
 8002220:	4b3f      	ldr	r3, [pc, #252]	@ (8002320 <CURRENT+0x10c>)
 8002222:	681b      	ldr	r3, [r3, #0]
 8002224:	2b00      	cmp	r3, #0
 8002226:	d107      	bne.n	8002238 <CURRENT+0x24>
   {
	   delay_ms(10);
 8002228:	200a      	movs	r0, #10
 800222a:	f7ff fead 	bl	8001f88 <delay_ms>
	   cnt++;
 800222e:	4b3c      	ldr	r3, [pc, #240]	@ (8002320 <CURRENT+0x10c>)
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	1c5a      	adds	r2, r3, #1
 8002234:	4b3a      	ldr	r3, [pc, #232]	@ (8002320 <CURRENT+0x10c>)
 8002236:	601a      	str	r2, [r3, #0]
   }
   for(int i=0;i<10;i++)
 8002238:	2300      	movs	r3, #0
 800223a:	607b      	str	r3, [r7, #4]
 800223c:	e00b      	b.n	8002256 <CURRENT+0x42>
   {
	   adc_val=adc_val+ADC_READ();
 800223e:	f7ff ff0b 	bl	8002058 <ADC_READ>
 8002242:	0003      	movs	r3, r0
 8002244:	001a      	movs	r2, r3
 8002246:	4b35      	ldr	r3, [pc, #212]	@ (800231c <CURRENT+0x108>)
 8002248:	681b      	ldr	r3, [r3, #0]
 800224a:	18d2      	adds	r2, r2, r3
 800224c:	4b33      	ldr	r3, [pc, #204]	@ (800231c <CURRENT+0x108>)
 800224e:	601a      	str	r2, [r3, #0]
   for(int i=0;i<10;i++)
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	3301      	adds	r3, #1
 8002254:	607b      	str	r3, [r7, #4]
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	2b09      	cmp	r3, #9
 800225a:	ddf0      	ble.n	800223e <CURRENT+0x2a>
   }
   //adc_val=ADC_READ();
   adc_val=adc_val/10;
 800225c:	4b2f      	ldr	r3, [pc, #188]	@ (800231c <CURRENT+0x108>)
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	210a      	movs	r1, #10
 8002262:	0018      	movs	r0, r3
 8002264:	f7fd ffda 	bl	800021c <__divsi3>
 8002268:	0003      	movs	r3, r0
 800226a:	001a      	movs	r2, r3
 800226c:	4b2b      	ldr	r3, [pc, #172]	@ (800231c <CURRENT+0x108>)
 800226e:	601a      	str	r2, [r3, #0]
   adc_vol=(adc_val*(3.6/4095.0))-0.52;
 8002270:	4b2a      	ldr	r3, [pc, #168]	@ (800231c <CURRENT+0x108>)
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	0018      	movs	r0, r3
 8002276:	f7ff fca3 	bl	8001bc0 <__aeabi_i2d>
 800227a:	4a2a      	ldr	r2, [pc, #168]	@ (8002324 <CURRENT+0x110>)
 800227c:	4b2a      	ldr	r3, [pc, #168]	@ (8002328 <CURRENT+0x114>)
 800227e:	f7fe fe3b 	bl	8000ef8 <__aeabi_dmul>
 8002282:	0002      	movs	r2, r0
 8002284:	000b      	movs	r3, r1
 8002286:	0010      	movs	r0, r2
 8002288:	0019      	movs	r1, r3
 800228a:	4a28      	ldr	r2, [pc, #160]	@ (800232c <CURRENT+0x118>)
 800228c:	4b28      	ldr	r3, [pc, #160]	@ (8002330 <CURRENT+0x11c>)
 800228e:	f7ff f8fb 	bl	8001488 <__aeabi_dsub>
 8002292:	0002      	movs	r2, r0
 8002294:	000b      	movs	r3, r1
 8002296:	0010      	movs	r0, r2
 8002298:	0019      	movs	r1, r3
 800229a:	f7ff fd07 	bl	8001cac <__aeabi_d2f>
 800229e:	1c02      	adds	r2, r0, #0
 80022a0:	4b24      	ldr	r3, [pc, #144]	@ (8002334 <CURRENT+0x120>)
 80022a2:	601a      	str	r2, [r3, #0]
   adc_cur=(adc_vol-2.5)/0.066;
 80022a4:	4b23      	ldr	r3, [pc, #140]	@ (8002334 <CURRENT+0x120>)
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	1c18      	adds	r0, r3, #0
 80022aa:	f7ff fcb7 	bl	8001c1c <__aeabi_f2d>
 80022ae:	2200      	movs	r2, #0
 80022b0:	4b21      	ldr	r3, [pc, #132]	@ (8002338 <CURRENT+0x124>)
 80022b2:	f7ff f8e9 	bl	8001488 <__aeabi_dsub>
 80022b6:	0002      	movs	r2, r0
 80022b8:	000b      	movs	r3, r1
 80022ba:	0010      	movs	r0, r2
 80022bc:	0019      	movs	r1, r3
 80022be:	4a1f      	ldr	r2, [pc, #124]	@ (800233c <CURRENT+0x128>)
 80022c0:	4b1f      	ldr	r3, [pc, #124]	@ (8002340 <CURRENT+0x12c>)
 80022c2:	f7fe f9d5 	bl	8000670 <__aeabi_ddiv>
 80022c6:	0002      	movs	r2, r0
 80022c8:	000b      	movs	r3, r1
 80022ca:	0010      	movs	r0, r2
 80022cc:	0019      	movs	r1, r3
 80022ce:	f7ff fced 	bl	8001cac <__aeabi_d2f>
 80022d2:	1c02      	adds	r2, r0, #0
 80022d4:	4b1b      	ldr	r3, [pc, #108]	@ (8002344 <CURRENT+0x130>)
 80022d6:	601a      	str	r2, [r3, #0]
   if(adc_cur<0)
 80022d8:	4b1a      	ldr	r3, [pc, #104]	@ (8002344 <CURRENT+0x130>)
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	2100      	movs	r1, #0
 80022de:	1c18      	adds	r0, r3, #0
 80022e0:	f7fe f8d8 	bl	8000494 <__aeabi_fcmplt>
 80022e4:	1e03      	subs	r3, r0, #0
 80022e6:	d006      	beq.n	80022f6 <CURRENT+0xe2>
   {
	   adc_cur=-adc_cur;
 80022e8:	4b16      	ldr	r3, [pc, #88]	@ (8002344 <CURRENT+0x130>)
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	2280      	movs	r2, #128	@ 0x80
 80022ee:	0612      	lsls	r2, r2, #24
 80022f0:	405a      	eors	r2, r3
 80022f2:	4b14      	ldr	r3, [pc, #80]	@ (8002344 <CURRENT+0x130>)
 80022f4:	601a      	str	r2, [r3, #0]
   }
     if(adc_cur>THRESHOLD_CURRENT)
 80022f6:	4b13      	ldr	r3, [pc, #76]	@ (8002344 <CURRENT+0x130>)
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	1c18      	adds	r0, r3, #0
 80022fc:	f7ff fc8e 	bl	8001c1c <__aeabi_f2d>
 8002300:	4a11      	ldr	r2, [pc, #68]	@ (8002348 <CURRENT+0x134>)
 8002302:	4b12      	ldr	r3, [pc, #72]	@ (800234c <CURRENT+0x138>)
 8002304:	f7fe f8a0 	bl	8000448 <__aeabi_dcmpgt>
 8002308:	1e03      	subs	r3, r0, #0
 800230a:	d001      	beq.n	8002310 <CURRENT+0xfc>
     {
  	   anti_pinch();
 800230c:	f7ff fef8 	bl	8002100 <anti_pinch>
     }
  return 1;
 8002310:	2301      	movs	r3, #1
}
 8002312:	0018      	movs	r0, r3
 8002314:	46bd      	mov	sp, r7
 8002316:	b002      	add	sp, #8
 8002318:	bd80      	pop	{r7, pc}
 800231a:	46c0      	nop			@ (mov r8, r8)
 800231c:	20000034 	.word	0x20000034
 8002320:	20000038 	.word	0x20000038
 8002324:	b6683350 	.word	0xb6683350
 8002328:	3f4cce99 	.word	0x3f4cce99
 800232c:	0a3d70a4 	.word	0x0a3d70a4
 8002330:	3fe0a3d7 	.word	0x3fe0a3d7
 8002334:	20000028 	.word	0x20000028
 8002338:	40040000 	.word	0x40040000
 800233c:	4189374c 	.word	0x4189374c
 8002340:	3fb0e560 	.word	0x3fb0e560
 8002344:	2000002c 	.word	0x2000002c
 8002348:	7ae147ae 	.word	0x7ae147ae
 800234c:	4010ae14 	.word	0x4010ae14

08002350 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002350:	b580      	push	{r7, lr}
 8002352:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002354:	b672      	cpsid	i
}
 8002356:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002358:	46c0      	nop			@ (mov r8, r8)
 800235a:	e7fd      	b.n	8002358 <Error_Handler+0x8>

0800235c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800235c:	b580      	push	{r7, lr}
 800235e:	b082      	sub	sp, #8
 8002360:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002362:	4b0f      	ldr	r3, [pc, #60]	@ (80023a0 <HAL_MspInit+0x44>)
 8002364:	699a      	ldr	r2, [r3, #24]
 8002366:	4b0e      	ldr	r3, [pc, #56]	@ (80023a0 <HAL_MspInit+0x44>)
 8002368:	2101      	movs	r1, #1
 800236a:	430a      	orrs	r2, r1
 800236c:	619a      	str	r2, [r3, #24]
 800236e:	4b0c      	ldr	r3, [pc, #48]	@ (80023a0 <HAL_MspInit+0x44>)
 8002370:	699b      	ldr	r3, [r3, #24]
 8002372:	2201      	movs	r2, #1
 8002374:	4013      	ands	r3, r2
 8002376:	607b      	str	r3, [r7, #4]
 8002378:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800237a:	4b09      	ldr	r3, [pc, #36]	@ (80023a0 <HAL_MspInit+0x44>)
 800237c:	69da      	ldr	r2, [r3, #28]
 800237e:	4b08      	ldr	r3, [pc, #32]	@ (80023a0 <HAL_MspInit+0x44>)
 8002380:	2180      	movs	r1, #128	@ 0x80
 8002382:	0549      	lsls	r1, r1, #21
 8002384:	430a      	orrs	r2, r1
 8002386:	61da      	str	r2, [r3, #28]
 8002388:	4b05      	ldr	r3, [pc, #20]	@ (80023a0 <HAL_MspInit+0x44>)
 800238a:	69da      	ldr	r2, [r3, #28]
 800238c:	2380      	movs	r3, #128	@ 0x80
 800238e:	055b      	lsls	r3, r3, #21
 8002390:	4013      	ands	r3, r2
 8002392:	603b      	str	r3, [r7, #0]
 8002394:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002396:	46c0      	nop			@ (mov r8, r8)
 8002398:	46bd      	mov	sp, r7
 800239a:	b002      	add	sp, #8
 800239c:	bd80      	pop	{r7, pc}
 800239e:	46c0      	nop			@ (mov r8, r8)
 80023a0:	40021000 	.word	0x40021000

080023a4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80023a4:	b580      	push	{r7, lr}
 80023a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80023a8:	46c0      	nop			@ (mov r8, r8)
 80023aa:	e7fd      	b.n	80023a8 <NMI_Handler+0x4>

080023ac <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80023ac:	b580      	push	{r7, lr}
 80023ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80023b0:	46c0      	nop			@ (mov r8, r8)
 80023b2:	e7fd      	b.n	80023b0 <HardFault_Handler+0x4>

080023b4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80023b4:	b580      	push	{r7, lr}
 80023b6:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80023b8:	46c0      	nop			@ (mov r8, r8)
 80023ba:	46bd      	mov	sp, r7
 80023bc:	bd80      	pop	{r7, pc}

080023be <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80023be:	b580      	push	{r7, lr}
 80023c0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80023c2:	46c0      	nop			@ (mov r8, r8)
 80023c4:	46bd      	mov	sp, r7
 80023c6:	bd80      	pop	{r7, pc}

080023c8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80023c8:	b580      	push	{r7, lr}
 80023ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80023cc:	f000 f87a 	bl	80024c4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80023d0:	46c0      	nop			@ (mov r8, r8)
 80023d2:	46bd      	mov	sp, r7
 80023d4:	bd80      	pop	{r7, pc}

080023d6 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80023d6:	b580      	push	{r7, lr}
 80023d8:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 80023da:	46c0      	nop			@ (mov r8, r8)
 80023dc:	46bd      	mov	sp, r7
 80023de:	bd80      	pop	{r7, pc}

080023e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80023e0:	480d      	ldr	r0, [pc, #52]	@ (8002418 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80023e2:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 80023e4:	f7ff fff7 	bl	80023d6 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80023e8:	480c      	ldr	r0, [pc, #48]	@ (800241c <LoopForever+0x6>)
  ldr r1, =_edata
 80023ea:	490d      	ldr	r1, [pc, #52]	@ (8002420 <LoopForever+0xa>)
  ldr r2, =_sidata
 80023ec:	4a0d      	ldr	r2, [pc, #52]	@ (8002424 <LoopForever+0xe>)
  movs r3, #0
 80023ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80023f0:	e002      	b.n	80023f8 <LoopCopyDataInit>

080023f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80023f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80023f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80023f6:	3304      	adds	r3, #4

080023f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80023f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80023fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80023fc:	d3f9      	bcc.n	80023f2 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80023fe:	4a0a      	ldr	r2, [pc, #40]	@ (8002428 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002400:	4c0a      	ldr	r4, [pc, #40]	@ (800242c <LoopForever+0x16>)
  movs r3, #0
 8002402:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002404:	e001      	b.n	800240a <LoopFillZerobss>

08002406 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002406:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002408:	3204      	adds	r2, #4

0800240a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800240a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800240c:	d3fb      	bcc.n	8002406 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800240e:	f000 fd6f 	bl	8002ef0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002412:	f7ff fced 	bl	8001df0 <main>

08002416 <LoopForever>:

LoopForever:
    b LoopForever
 8002416:	e7fe      	b.n	8002416 <LoopForever>
  ldr   r0, =_estack
 8002418:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 800241c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002420:	2000000c 	.word	0x2000000c
  ldr r2, =_sidata
 8002424:	08002fc8 	.word	0x08002fc8
  ldr r2, =_sbss
 8002428:	2000000c 	.word	0x2000000c
  ldr r4, =_ebss
 800242c:	20000040 	.word	0x20000040

08002430 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002430:	e7fe      	b.n	8002430 <ADC1_IRQHandler>
	...

08002434 <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002434:	b580      	push	{r7, lr}
 8002436:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002438:	4b07      	ldr	r3, [pc, #28]	@ (8002458 <HAL_Init+0x24>)
 800243a:	681a      	ldr	r2, [r3, #0]
 800243c:	4b06      	ldr	r3, [pc, #24]	@ (8002458 <HAL_Init+0x24>)
 800243e:	2110      	movs	r1, #16
 8002440:	430a      	orrs	r2, r1
 8002442:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 8002444:	2003      	movs	r0, #3
 8002446:	f000 f809 	bl	800245c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800244a:	f7ff ff87 	bl	800235c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 800244e:	2300      	movs	r3, #0
}
 8002450:	0018      	movs	r0, r3
 8002452:	46bd      	mov	sp, r7
 8002454:	bd80      	pop	{r7, pc}
 8002456:	46c0      	nop			@ (mov r8, r8)
 8002458:	40022000 	.word	0x40022000

0800245c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800245c:	b590      	push	{r4, r7, lr}
 800245e:	b083      	sub	sp, #12
 8002460:	af00      	add	r7, sp, #0
 8002462:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002464:	4b14      	ldr	r3, [pc, #80]	@ (80024b8 <HAL_InitTick+0x5c>)
 8002466:	681c      	ldr	r4, [r3, #0]
 8002468:	4b14      	ldr	r3, [pc, #80]	@ (80024bc <HAL_InitTick+0x60>)
 800246a:	781b      	ldrb	r3, [r3, #0]
 800246c:	0019      	movs	r1, r3
 800246e:	23fa      	movs	r3, #250	@ 0xfa
 8002470:	0098      	lsls	r0, r3, #2
 8002472:	f7fd fe49 	bl	8000108 <__udivsi3>
 8002476:	0003      	movs	r3, r0
 8002478:	0019      	movs	r1, r3
 800247a:	0020      	movs	r0, r4
 800247c:	f7fd fe44 	bl	8000108 <__udivsi3>
 8002480:	0003      	movs	r3, r0
 8002482:	0018      	movs	r0, r3
 8002484:	f000 f8e1 	bl	800264a <HAL_SYSTICK_Config>
 8002488:	1e03      	subs	r3, r0, #0
 800248a:	d001      	beq.n	8002490 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 800248c:	2301      	movs	r3, #1
 800248e:	e00f      	b.n	80024b0 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	2b03      	cmp	r3, #3
 8002494:	d80b      	bhi.n	80024ae <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002496:	6879      	ldr	r1, [r7, #4]
 8002498:	2301      	movs	r3, #1
 800249a:	425b      	negs	r3, r3
 800249c:	2200      	movs	r2, #0
 800249e:	0018      	movs	r0, r3
 80024a0:	f000 f8be 	bl	8002620 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80024a4:	4b06      	ldr	r3, [pc, #24]	@ (80024c0 <HAL_InitTick+0x64>)
 80024a6:	687a      	ldr	r2, [r7, #4]
 80024a8:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 80024aa:	2300      	movs	r3, #0
 80024ac:	e000      	b.n	80024b0 <HAL_InitTick+0x54>
    return HAL_ERROR;
 80024ae:	2301      	movs	r3, #1
}
 80024b0:	0018      	movs	r0, r3
 80024b2:	46bd      	mov	sp, r7
 80024b4:	b003      	add	sp, #12
 80024b6:	bd90      	pop	{r4, r7, pc}
 80024b8:	20000000 	.word	0x20000000
 80024bc:	20000008 	.word	0x20000008
 80024c0:	20000004 	.word	0x20000004

080024c4 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80024c4:	b580      	push	{r7, lr}
 80024c6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80024c8:	4b05      	ldr	r3, [pc, #20]	@ (80024e0 <HAL_IncTick+0x1c>)
 80024ca:	781b      	ldrb	r3, [r3, #0]
 80024cc:	001a      	movs	r2, r3
 80024ce:	4b05      	ldr	r3, [pc, #20]	@ (80024e4 <HAL_IncTick+0x20>)
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	18d2      	adds	r2, r2, r3
 80024d4:	4b03      	ldr	r3, [pc, #12]	@ (80024e4 <HAL_IncTick+0x20>)
 80024d6:	601a      	str	r2, [r3, #0]
}
 80024d8:	46c0      	nop			@ (mov r8, r8)
 80024da:	46bd      	mov	sp, r7
 80024dc:	bd80      	pop	{r7, pc}
 80024de:	46c0      	nop			@ (mov r8, r8)
 80024e0:	20000008 	.word	0x20000008
 80024e4:	2000003c 	.word	0x2000003c

080024e8 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80024e8:	b580      	push	{r7, lr}
 80024ea:	af00      	add	r7, sp, #0
  return uwTick;
 80024ec:	4b02      	ldr	r3, [pc, #8]	@ (80024f8 <HAL_GetTick+0x10>)
 80024ee:	681b      	ldr	r3, [r3, #0]
}
 80024f0:	0018      	movs	r0, r3
 80024f2:	46bd      	mov	sp, r7
 80024f4:	bd80      	pop	{r7, pc}
 80024f6:	46c0      	nop			@ (mov r8, r8)
 80024f8:	2000003c 	.word	0x2000003c

080024fc <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80024fc:	b590      	push	{r4, r7, lr}
 80024fe:	b083      	sub	sp, #12
 8002500:	af00      	add	r7, sp, #0
 8002502:	0002      	movs	r2, r0
 8002504:	6039      	str	r1, [r7, #0]
 8002506:	1dfb      	adds	r3, r7, #7
 8002508:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800250a:	1dfb      	adds	r3, r7, #7
 800250c:	781b      	ldrb	r3, [r3, #0]
 800250e:	2b7f      	cmp	r3, #127	@ 0x7f
 8002510:	d828      	bhi.n	8002564 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002512:	4a2f      	ldr	r2, [pc, #188]	@ (80025d0 <__NVIC_SetPriority+0xd4>)
 8002514:	1dfb      	adds	r3, r7, #7
 8002516:	781b      	ldrb	r3, [r3, #0]
 8002518:	b25b      	sxtb	r3, r3
 800251a:	089b      	lsrs	r3, r3, #2
 800251c:	33c0      	adds	r3, #192	@ 0xc0
 800251e:	009b      	lsls	r3, r3, #2
 8002520:	589b      	ldr	r3, [r3, r2]
 8002522:	1dfa      	adds	r2, r7, #7
 8002524:	7812      	ldrb	r2, [r2, #0]
 8002526:	0011      	movs	r1, r2
 8002528:	2203      	movs	r2, #3
 800252a:	400a      	ands	r2, r1
 800252c:	00d2      	lsls	r2, r2, #3
 800252e:	21ff      	movs	r1, #255	@ 0xff
 8002530:	4091      	lsls	r1, r2
 8002532:	000a      	movs	r2, r1
 8002534:	43d2      	mvns	r2, r2
 8002536:	401a      	ands	r2, r3
 8002538:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800253a:	683b      	ldr	r3, [r7, #0]
 800253c:	019b      	lsls	r3, r3, #6
 800253e:	22ff      	movs	r2, #255	@ 0xff
 8002540:	401a      	ands	r2, r3
 8002542:	1dfb      	adds	r3, r7, #7
 8002544:	781b      	ldrb	r3, [r3, #0]
 8002546:	0018      	movs	r0, r3
 8002548:	2303      	movs	r3, #3
 800254a:	4003      	ands	r3, r0
 800254c:	00db      	lsls	r3, r3, #3
 800254e:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002550:	481f      	ldr	r0, [pc, #124]	@ (80025d0 <__NVIC_SetPriority+0xd4>)
 8002552:	1dfb      	adds	r3, r7, #7
 8002554:	781b      	ldrb	r3, [r3, #0]
 8002556:	b25b      	sxtb	r3, r3
 8002558:	089b      	lsrs	r3, r3, #2
 800255a:	430a      	orrs	r2, r1
 800255c:	33c0      	adds	r3, #192	@ 0xc0
 800255e:	009b      	lsls	r3, r3, #2
 8002560:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8002562:	e031      	b.n	80025c8 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002564:	4a1b      	ldr	r2, [pc, #108]	@ (80025d4 <__NVIC_SetPriority+0xd8>)
 8002566:	1dfb      	adds	r3, r7, #7
 8002568:	781b      	ldrb	r3, [r3, #0]
 800256a:	0019      	movs	r1, r3
 800256c:	230f      	movs	r3, #15
 800256e:	400b      	ands	r3, r1
 8002570:	3b08      	subs	r3, #8
 8002572:	089b      	lsrs	r3, r3, #2
 8002574:	3306      	adds	r3, #6
 8002576:	009b      	lsls	r3, r3, #2
 8002578:	18d3      	adds	r3, r2, r3
 800257a:	3304      	adds	r3, #4
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	1dfa      	adds	r2, r7, #7
 8002580:	7812      	ldrb	r2, [r2, #0]
 8002582:	0011      	movs	r1, r2
 8002584:	2203      	movs	r2, #3
 8002586:	400a      	ands	r2, r1
 8002588:	00d2      	lsls	r2, r2, #3
 800258a:	21ff      	movs	r1, #255	@ 0xff
 800258c:	4091      	lsls	r1, r2
 800258e:	000a      	movs	r2, r1
 8002590:	43d2      	mvns	r2, r2
 8002592:	401a      	ands	r2, r3
 8002594:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002596:	683b      	ldr	r3, [r7, #0]
 8002598:	019b      	lsls	r3, r3, #6
 800259a:	22ff      	movs	r2, #255	@ 0xff
 800259c:	401a      	ands	r2, r3
 800259e:	1dfb      	adds	r3, r7, #7
 80025a0:	781b      	ldrb	r3, [r3, #0]
 80025a2:	0018      	movs	r0, r3
 80025a4:	2303      	movs	r3, #3
 80025a6:	4003      	ands	r3, r0
 80025a8:	00db      	lsls	r3, r3, #3
 80025aa:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80025ac:	4809      	ldr	r0, [pc, #36]	@ (80025d4 <__NVIC_SetPriority+0xd8>)
 80025ae:	1dfb      	adds	r3, r7, #7
 80025b0:	781b      	ldrb	r3, [r3, #0]
 80025b2:	001c      	movs	r4, r3
 80025b4:	230f      	movs	r3, #15
 80025b6:	4023      	ands	r3, r4
 80025b8:	3b08      	subs	r3, #8
 80025ba:	089b      	lsrs	r3, r3, #2
 80025bc:	430a      	orrs	r2, r1
 80025be:	3306      	adds	r3, #6
 80025c0:	009b      	lsls	r3, r3, #2
 80025c2:	18c3      	adds	r3, r0, r3
 80025c4:	3304      	adds	r3, #4
 80025c6:	601a      	str	r2, [r3, #0]
}
 80025c8:	46c0      	nop			@ (mov r8, r8)
 80025ca:	46bd      	mov	sp, r7
 80025cc:	b003      	add	sp, #12
 80025ce:	bd90      	pop	{r4, r7, pc}
 80025d0:	e000e100 	.word	0xe000e100
 80025d4:	e000ed00 	.word	0xe000ed00

080025d8 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80025d8:	b580      	push	{r7, lr}
 80025da:	b082      	sub	sp, #8
 80025dc:	af00      	add	r7, sp, #0
 80025de:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	1e5a      	subs	r2, r3, #1
 80025e4:	2380      	movs	r3, #128	@ 0x80
 80025e6:	045b      	lsls	r3, r3, #17
 80025e8:	429a      	cmp	r2, r3
 80025ea:	d301      	bcc.n	80025f0 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 80025ec:	2301      	movs	r3, #1
 80025ee:	e010      	b.n	8002612 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80025f0:	4b0a      	ldr	r3, [pc, #40]	@ (800261c <SysTick_Config+0x44>)
 80025f2:	687a      	ldr	r2, [r7, #4]
 80025f4:	3a01      	subs	r2, #1
 80025f6:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80025f8:	2301      	movs	r3, #1
 80025fa:	425b      	negs	r3, r3
 80025fc:	2103      	movs	r1, #3
 80025fe:	0018      	movs	r0, r3
 8002600:	f7ff ff7c 	bl	80024fc <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002604:	4b05      	ldr	r3, [pc, #20]	@ (800261c <SysTick_Config+0x44>)
 8002606:	2200      	movs	r2, #0
 8002608:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800260a:	4b04      	ldr	r3, [pc, #16]	@ (800261c <SysTick_Config+0x44>)
 800260c:	2207      	movs	r2, #7
 800260e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002610:	2300      	movs	r3, #0
}
 8002612:	0018      	movs	r0, r3
 8002614:	46bd      	mov	sp, r7
 8002616:	b002      	add	sp, #8
 8002618:	bd80      	pop	{r7, pc}
 800261a:	46c0      	nop			@ (mov r8, r8)
 800261c:	e000e010 	.word	0xe000e010

08002620 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002620:	b580      	push	{r7, lr}
 8002622:	b084      	sub	sp, #16
 8002624:	af00      	add	r7, sp, #0
 8002626:	60b9      	str	r1, [r7, #8]
 8002628:	607a      	str	r2, [r7, #4]
 800262a:	210f      	movs	r1, #15
 800262c:	187b      	adds	r3, r7, r1
 800262e:	1c02      	adds	r2, r0, #0
 8002630:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8002632:	68ba      	ldr	r2, [r7, #8]
 8002634:	187b      	adds	r3, r7, r1
 8002636:	781b      	ldrb	r3, [r3, #0]
 8002638:	b25b      	sxtb	r3, r3
 800263a:	0011      	movs	r1, r2
 800263c:	0018      	movs	r0, r3
 800263e:	f7ff ff5d 	bl	80024fc <__NVIC_SetPriority>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(SubPriority);
}
 8002642:	46c0      	nop			@ (mov r8, r8)
 8002644:	46bd      	mov	sp, r7
 8002646:	b004      	add	sp, #16
 8002648:	bd80      	pop	{r7, pc}

0800264a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800264a:	b580      	push	{r7, lr}
 800264c:	b082      	sub	sp, #8
 800264e:	af00      	add	r7, sp, #0
 8002650:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	0018      	movs	r0, r3
 8002656:	f7ff ffbf 	bl	80025d8 <SysTick_Config>
 800265a:	0003      	movs	r3, r0
}
 800265c:	0018      	movs	r0, r3
 800265e:	46bd      	mov	sp, r7
 8002660:	b002      	add	sp, #8
 8002662:	bd80      	pop	{r7, pc}

08002664 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002664:	b580      	push	{r7, lr}
 8002666:	b088      	sub	sp, #32
 8002668:	af00      	add	r7, sp, #0
 800266a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	2b00      	cmp	r3, #0
 8002670:	d101      	bne.n	8002676 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8002672:	2301      	movs	r3, #1
 8002674:	e301      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	2201      	movs	r2, #1
 800267c:	4013      	ands	r3, r2
 800267e:	d100      	bne.n	8002682 <HAL_RCC_OscConfig+0x1e>
 8002680:	e08d      	b.n	800279e <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8002682:	4bc3      	ldr	r3, [pc, #780]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002684:	685b      	ldr	r3, [r3, #4]
 8002686:	220c      	movs	r2, #12
 8002688:	4013      	ands	r3, r2
 800268a:	2b04      	cmp	r3, #4
 800268c:	d00e      	beq.n	80026ac <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 800268e:	4bc0      	ldr	r3, [pc, #768]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002690:	685b      	ldr	r3, [r3, #4]
 8002692:	220c      	movs	r2, #12
 8002694:	4013      	ands	r3, r2
 8002696:	2b08      	cmp	r3, #8
 8002698:	d116      	bne.n	80026c8 <HAL_RCC_OscConfig+0x64>
 800269a:	4bbd      	ldr	r3, [pc, #756]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800269c:	685a      	ldr	r2, [r3, #4]
 800269e:	2380      	movs	r3, #128	@ 0x80
 80026a0:	025b      	lsls	r3, r3, #9
 80026a2:	401a      	ands	r2, r3
 80026a4:	2380      	movs	r3, #128	@ 0x80
 80026a6:	025b      	lsls	r3, r3, #9
 80026a8:	429a      	cmp	r2, r3
 80026aa:	d10d      	bne.n	80026c8 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80026ac:	4bb8      	ldr	r3, [pc, #736]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80026ae:	681a      	ldr	r2, [r3, #0]
 80026b0:	2380      	movs	r3, #128	@ 0x80
 80026b2:	029b      	lsls	r3, r3, #10
 80026b4:	4013      	ands	r3, r2
 80026b6:	d100      	bne.n	80026ba <HAL_RCC_OscConfig+0x56>
 80026b8:	e070      	b.n	800279c <HAL_RCC_OscConfig+0x138>
 80026ba:	687b      	ldr	r3, [r7, #4]
 80026bc:	685b      	ldr	r3, [r3, #4]
 80026be:	2b00      	cmp	r3, #0
 80026c0:	d000      	beq.n	80026c4 <HAL_RCC_OscConfig+0x60>
 80026c2:	e06b      	b.n	800279c <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 80026c4:	2301      	movs	r3, #1
 80026c6:	e2d8      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	685b      	ldr	r3, [r3, #4]
 80026cc:	2b01      	cmp	r3, #1
 80026ce:	d107      	bne.n	80026e0 <HAL_RCC_OscConfig+0x7c>
 80026d0:	4baf      	ldr	r3, [pc, #700]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80026d2:	681a      	ldr	r2, [r3, #0]
 80026d4:	4bae      	ldr	r3, [pc, #696]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80026d6:	2180      	movs	r1, #128	@ 0x80
 80026d8:	0249      	lsls	r1, r1, #9
 80026da:	430a      	orrs	r2, r1
 80026dc:	601a      	str	r2, [r3, #0]
 80026de:	e02f      	b.n	8002740 <HAL_RCC_OscConfig+0xdc>
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	685b      	ldr	r3, [r3, #4]
 80026e4:	2b00      	cmp	r3, #0
 80026e6:	d10c      	bne.n	8002702 <HAL_RCC_OscConfig+0x9e>
 80026e8:	4ba9      	ldr	r3, [pc, #676]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80026ea:	681a      	ldr	r2, [r3, #0]
 80026ec:	4ba8      	ldr	r3, [pc, #672]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80026ee:	49a9      	ldr	r1, [pc, #676]	@ (8002994 <HAL_RCC_OscConfig+0x330>)
 80026f0:	400a      	ands	r2, r1
 80026f2:	601a      	str	r2, [r3, #0]
 80026f4:	4ba6      	ldr	r3, [pc, #664]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80026f6:	681a      	ldr	r2, [r3, #0]
 80026f8:	4ba5      	ldr	r3, [pc, #660]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80026fa:	49a7      	ldr	r1, [pc, #668]	@ (8002998 <HAL_RCC_OscConfig+0x334>)
 80026fc:	400a      	ands	r2, r1
 80026fe:	601a      	str	r2, [r3, #0]
 8002700:	e01e      	b.n	8002740 <HAL_RCC_OscConfig+0xdc>
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	685b      	ldr	r3, [r3, #4]
 8002706:	2b05      	cmp	r3, #5
 8002708:	d10e      	bne.n	8002728 <HAL_RCC_OscConfig+0xc4>
 800270a:	4ba1      	ldr	r3, [pc, #644]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800270c:	681a      	ldr	r2, [r3, #0]
 800270e:	4ba0      	ldr	r3, [pc, #640]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002710:	2180      	movs	r1, #128	@ 0x80
 8002712:	02c9      	lsls	r1, r1, #11
 8002714:	430a      	orrs	r2, r1
 8002716:	601a      	str	r2, [r3, #0]
 8002718:	4b9d      	ldr	r3, [pc, #628]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800271a:	681a      	ldr	r2, [r3, #0]
 800271c:	4b9c      	ldr	r3, [pc, #624]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800271e:	2180      	movs	r1, #128	@ 0x80
 8002720:	0249      	lsls	r1, r1, #9
 8002722:	430a      	orrs	r2, r1
 8002724:	601a      	str	r2, [r3, #0]
 8002726:	e00b      	b.n	8002740 <HAL_RCC_OscConfig+0xdc>
 8002728:	4b99      	ldr	r3, [pc, #612]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800272a:	681a      	ldr	r2, [r3, #0]
 800272c:	4b98      	ldr	r3, [pc, #608]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800272e:	4999      	ldr	r1, [pc, #612]	@ (8002994 <HAL_RCC_OscConfig+0x330>)
 8002730:	400a      	ands	r2, r1
 8002732:	601a      	str	r2, [r3, #0]
 8002734:	4b96      	ldr	r3, [pc, #600]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002736:	681a      	ldr	r2, [r3, #0]
 8002738:	4b95      	ldr	r3, [pc, #596]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800273a:	4997      	ldr	r1, [pc, #604]	@ (8002998 <HAL_RCC_OscConfig+0x334>)
 800273c:	400a      	ands	r2, r1
 800273e:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	685b      	ldr	r3, [r3, #4]
 8002744:	2b00      	cmp	r3, #0
 8002746:	d014      	beq.n	8002772 <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002748:	f7ff fece 	bl	80024e8 <HAL_GetTick>
 800274c:	0003      	movs	r3, r0
 800274e:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002750:	e008      	b.n	8002764 <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002752:	f7ff fec9 	bl	80024e8 <HAL_GetTick>
 8002756:	0002      	movs	r2, r0
 8002758:	69bb      	ldr	r3, [r7, #24]
 800275a:	1ad3      	subs	r3, r2, r3
 800275c:	2b64      	cmp	r3, #100	@ 0x64
 800275e:	d901      	bls.n	8002764 <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 8002760:	2303      	movs	r3, #3
 8002762:	e28a      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002764:	4b8a      	ldr	r3, [pc, #552]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002766:	681a      	ldr	r2, [r3, #0]
 8002768:	2380      	movs	r3, #128	@ 0x80
 800276a:	029b      	lsls	r3, r3, #10
 800276c:	4013      	ands	r3, r2
 800276e:	d0f0      	beq.n	8002752 <HAL_RCC_OscConfig+0xee>
 8002770:	e015      	b.n	800279e <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002772:	f7ff feb9 	bl	80024e8 <HAL_GetTick>
 8002776:	0003      	movs	r3, r0
 8002778:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800277a:	e008      	b.n	800278e <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800277c:	f7ff feb4 	bl	80024e8 <HAL_GetTick>
 8002780:	0002      	movs	r2, r0
 8002782:	69bb      	ldr	r3, [r7, #24]
 8002784:	1ad3      	subs	r3, r2, r3
 8002786:	2b64      	cmp	r3, #100	@ 0x64
 8002788:	d901      	bls.n	800278e <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 800278a:	2303      	movs	r3, #3
 800278c:	e275      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800278e:	4b80      	ldr	r3, [pc, #512]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002790:	681a      	ldr	r2, [r3, #0]
 8002792:	2380      	movs	r3, #128	@ 0x80
 8002794:	029b      	lsls	r3, r3, #10
 8002796:	4013      	ands	r3, r2
 8002798:	d1f0      	bne.n	800277c <HAL_RCC_OscConfig+0x118>
 800279a:	e000      	b.n	800279e <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800279c:	46c0      	nop			@ (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	2202      	movs	r2, #2
 80027a4:	4013      	ands	r3, r2
 80027a6:	d100      	bne.n	80027aa <HAL_RCC_OscConfig+0x146>
 80027a8:	e069      	b.n	800287e <HAL_RCC_OscConfig+0x21a>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 80027aa:	4b79      	ldr	r3, [pc, #484]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80027ac:	685b      	ldr	r3, [r3, #4]
 80027ae:	220c      	movs	r2, #12
 80027b0:	4013      	ands	r3, r2
 80027b2:	d00b      	beq.n	80027cc <HAL_RCC_OscConfig+0x168>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 80027b4:	4b76      	ldr	r3, [pc, #472]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80027b6:	685b      	ldr	r3, [r3, #4]
 80027b8:	220c      	movs	r2, #12
 80027ba:	4013      	ands	r3, r2
 80027bc:	2b08      	cmp	r3, #8
 80027be:	d11c      	bne.n	80027fa <HAL_RCC_OscConfig+0x196>
 80027c0:	4b73      	ldr	r3, [pc, #460]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80027c2:	685a      	ldr	r2, [r3, #4]
 80027c4:	2380      	movs	r3, #128	@ 0x80
 80027c6:	025b      	lsls	r3, r3, #9
 80027c8:	4013      	ands	r3, r2
 80027ca:	d116      	bne.n	80027fa <HAL_RCC_OscConfig+0x196>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80027cc:	4b70      	ldr	r3, [pc, #448]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	2202      	movs	r2, #2
 80027d2:	4013      	ands	r3, r2
 80027d4:	d005      	beq.n	80027e2 <HAL_RCC_OscConfig+0x17e>
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	68db      	ldr	r3, [r3, #12]
 80027da:	2b01      	cmp	r3, #1
 80027dc:	d001      	beq.n	80027e2 <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 80027de:	2301      	movs	r3, #1
 80027e0:	e24b      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80027e2:	4b6b      	ldr	r3, [pc, #428]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80027e4:	681b      	ldr	r3, [r3, #0]
 80027e6:	22f8      	movs	r2, #248	@ 0xf8
 80027e8:	4393      	bics	r3, r2
 80027ea:	0019      	movs	r1, r3
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	691b      	ldr	r3, [r3, #16]
 80027f0:	00da      	lsls	r2, r3, #3
 80027f2:	4b67      	ldr	r3, [pc, #412]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80027f4:	430a      	orrs	r2, r1
 80027f6:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80027f8:	e041      	b.n	800287e <HAL_RCC_OscConfig+0x21a>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	68db      	ldr	r3, [r3, #12]
 80027fe:	2b00      	cmp	r3, #0
 8002800:	d024      	beq.n	800284c <HAL_RCC_OscConfig+0x1e8>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8002802:	4b63      	ldr	r3, [pc, #396]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002804:	681a      	ldr	r2, [r3, #0]
 8002806:	4b62      	ldr	r3, [pc, #392]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002808:	2101      	movs	r1, #1
 800280a:	430a      	orrs	r2, r1
 800280c:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800280e:	f7ff fe6b 	bl	80024e8 <HAL_GetTick>
 8002812:	0003      	movs	r3, r0
 8002814:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002816:	e008      	b.n	800282a <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002818:	f7ff fe66 	bl	80024e8 <HAL_GetTick>
 800281c:	0002      	movs	r2, r0
 800281e:	69bb      	ldr	r3, [r7, #24]
 8002820:	1ad3      	subs	r3, r2, r3
 8002822:	2b02      	cmp	r3, #2
 8002824:	d901      	bls.n	800282a <HAL_RCC_OscConfig+0x1c6>
          {
            return HAL_TIMEOUT;
 8002826:	2303      	movs	r3, #3
 8002828:	e227      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800282a:	4b59      	ldr	r3, [pc, #356]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	2202      	movs	r2, #2
 8002830:	4013      	ands	r3, r2
 8002832:	d0f1      	beq.n	8002818 <HAL_RCC_OscConfig+0x1b4>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002834:	4b56      	ldr	r3, [pc, #344]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	22f8      	movs	r2, #248	@ 0xf8
 800283a:	4393      	bics	r3, r2
 800283c:	0019      	movs	r1, r3
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	691b      	ldr	r3, [r3, #16]
 8002842:	00da      	lsls	r2, r3, #3
 8002844:	4b52      	ldr	r3, [pc, #328]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002846:	430a      	orrs	r2, r1
 8002848:	601a      	str	r2, [r3, #0]
 800284a:	e018      	b.n	800287e <HAL_RCC_OscConfig+0x21a>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800284c:	4b50      	ldr	r3, [pc, #320]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800284e:	681a      	ldr	r2, [r3, #0]
 8002850:	4b4f      	ldr	r3, [pc, #316]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002852:	2101      	movs	r1, #1
 8002854:	438a      	bics	r2, r1
 8002856:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002858:	f7ff fe46 	bl	80024e8 <HAL_GetTick>
 800285c:	0003      	movs	r3, r0
 800285e:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002860:	e008      	b.n	8002874 <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002862:	f7ff fe41 	bl	80024e8 <HAL_GetTick>
 8002866:	0002      	movs	r2, r0
 8002868:	69bb      	ldr	r3, [r7, #24]
 800286a:	1ad3      	subs	r3, r2, r3
 800286c:	2b02      	cmp	r3, #2
 800286e:	d901      	bls.n	8002874 <HAL_RCC_OscConfig+0x210>
          {
            return HAL_TIMEOUT;
 8002870:	2303      	movs	r3, #3
 8002872:	e202      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002874:	4b46      	ldr	r3, [pc, #280]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	2202      	movs	r2, #2
 800287a:	4013      	ands	r3, r2
 800287c:	d1f1      	bne.n	8002862 <HAL_RCC_OscConfig+0x1fe>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	681b      	ldr	r3, [r3, #0]
 8002882:	2208      	movs	r2, #8
 8002884:	4013      	ands	r3, r2
 8002886:	d036      	beq.n	80028f6 <HAL_RCC_OscConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	69db      	ldr	r3, [r3, #28]
 800288c:	2b00      	cmp	r3, #0
 800288e:	d019      	beq.n	80028c4 <HAL_RCC_OscConfig+0x260>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8002890:	4b3f      	ldr	r3, [pc, #252]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002892:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002894:	4b3e      	ldr	r3, [pc, #248]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002896:	2101      	movs	r1, #1
 8002898:	430a      	orrs	r2, r1
 800289a:	625a      	str	r2, [r3, #36]	@ 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800289c:	f7ff fe24 	bl	80024e8 <HAL_GetTick>
 80028a0:	0003      	movs	r3, r0
 80028a2:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80028a4:	e008      	b.n	80028b8 <HAL_RCC_OscConfig+0x254>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80028a6:	f7ff fe1f 	bl	80024e8 <HAL_GetTick>
 80028aa:	0002      	movs	r2, r0
 80028ac:	69bb      	ldr	r3, [r7, #24]
 80028ae:	1ad3      	subs	r3, r2, r3
 80028b0:	2b02      	cmp	r3, #2
 80028b2:	d901      	bls.n	80028b8 <HAL_RCC_OscConfig+0x254>
        {
          return HAL_TIMEOUT;
 80028b4:	2303      	movs	r3, #3
 80028b6:	e1e0      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80028b8:	4b35      	ldr	r3, [pc, #212]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80028ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028bc:	2202      	movs	r2, #2
 80028be:	4013      	ands	r3, r2
 80028c0:	d0f1      	beq.n	80028a6 <HAL_RCC_OscConfig+0x242>
 80028c2:	e018      	b.n	80028f6 <HAL_RCC_OscConfig+0x292>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80028c4:	4b32      	ldr	r3, [pc, #200]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80028c6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80028c8:	4b31      	ldr	r3, [pc, #196]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80028ca:	2101      	movs	r1, #1
 80028cc:	438a      	bics	r2, r1
 80028ce:	625a      	str	r2, [r3, #36]	@ 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80028d0:	f7ff fe0a 	bl	80024e8 <HAL_GetTick>
 80028d4:	0003      	movs	r3, r0
 80028d6:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80028d8:	e008      	b.n	80028ec <HAL_RCC_OscConfig+0x288>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80028da:	f7ff fe05 	bl	80024e8 <HAL_GetTick>
 80028de:	0002      	movs	r2, r0
 80028e0:	69bb      	ldr	r3, [r7, #24]
 80028e2:	1ad3      	subs	r3, r2, r3
 80028e4:	2b02      	cmp	r3, #2
 80028e6:	d901      	bls.n	80028ec <HAL_RCC_OscConfig+0x288>
        {
          return HAL_TIMEOUT;
 80028e8:	2303      	movs	r3, #3
 80028ea:	e1c6      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80028ec:	4b28      	ldr	r3, [pc, #160]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 80028ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028f0:	2202      	movs	r2, #2
 80028f2:	4013      	ands	r3, r2
 80028f4:	d1f1      	bne.n	80028da <HAL_RCC_OscConfig+0x276>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	2204      	movs	r2, #4
 80028fc:	4013      	ands	r3, r2
 80028fe:	d100      	bne.n	8002902 <HAL_RCC_OscConfig+0x29e>
 8002900:	e0b4      	b.n	8002a6c <HAL_RCC_OscConfig+0x408>
  {
    FlagStatus       pwrclkchanged = RESET;
 8002902:	201f      	movs	r0, #31
 8002904:	183b      	adds	r3, r7, r0
 8002906:	2200      	movs	r2, #0
 8002908:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800290a:	4b21      	ldr	r3, [pc, #132]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800290c:	69da      	ldr	r2, [r3, #28]
 800290e:	2380      	movs	r3, #128	@ 0x80
 8002910:	055b      	lsls	r3, r3, #21
 8002912:	4013      	ands	r3, r2
 8002914:	d110      	bne.n	8002938 <HAL_RCC_OscConfig+0x2d4>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8002916:	4b1e      	ldr	r3, [pc, #120]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002918:	69da      	ldr	r2, [r3, #28]
 800291a:	4b1d      	ldr	r3, [pc, #116]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 800291c:	2180      	movs	r1, #128	@ 0x80
 800291e:	0549      	lsls	r1, r1, #21
 8002920:	430a      	orrs	r2, r1
 8002922:	61da      	str	r2, [r3, #28]
 8002924:	4b1a      	ldr	r3, [pc, #104]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002926:	69da      	ldr	r2, [r3, #28]
 8002928:	2380      	movs	r3, #128	@ 0x80
 800292a:	055b      	lsls	r3, r3, #21
 800292c:	4013      	ands	r3, r2
 800292e:	60fb      	str	r3, [r7, #12]
 8002930:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 8002932:	183b      	adds	r3, r7, r0
 8002934:	2201      	movs	r2, #1
 8002936:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002938:	4b18      	ldr	r3, [pc, #96]	@ (800299c <HAL_RCC_OscConfig+0x338>)
 800293a:	681a      	ldr	r2, [r3, #0]
 800293c:	2380      	movs	r3, #128	@ 0x80
 800293e:	005b      	lsls	r3, r3, #1
 8002940:	4013      	ands	r3, r2
 8002942:	d11a      	bne.n	800297a <HAL_RCC_OscConfig+0x316>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002944:	4b15      	ldr	r3, [pc, #84]	@ (800299c <HAL_RCC_OscConfig+0x338>)
 8002946:	681a      	ldr	r2, [r3, #0]
 8002948:	4b14      	ldr	r3, [pc, #80]	@ (800299c <HAL_RCC_OscConfig+0x338>)
 800294a:	2180      	movs	r1, #128	@ 0x80
 800294c:	0049      	lsls	r1, r1, #1
 800294e:	430a      	orrs	r2, r1
 8002950:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002952:	f7ff fdc9 	bl	80024e8 <HAL_GetTick>
 8002956:	0003      	movs	r3, r0
 8002958:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800295a:	e008      	b.n	800296e <HAL_RCC_OscConfig+0x30a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800295c:	f7ff fdc4 	bl	80024e8 <HAL_GetTick>
 8002960:	0002      	movs	r2, r0
 8002962:	69bb      	ldr	r3, [r7, #24]
 8002964:	1ad3      	subs	r3, r2, r3
 8002966:	2b64      	cmp	r3, #100	@ 0x64
 8002968:	d901      	bls.n	800296e <HAL_RCC_OscConfig+0x30a>
        {
          return HAL_TIMEOUT;
 800296a:	2303      	movs	r3, #3
 800296c:	e185      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800296e:	4b0b      	ldr	r3, [pc, #44]	@ (800299c <HAL_RCC_OscConfig+0x338>)
 8002970:	681a      	ldr	r2, [r3, #0]
 8002972:	2380      	movs	r3, #128	@ 0x80
 8002974:	005b      	lsls	r3, r3, #1
 8002976:	4013      	ands	r3, r2
 8002978:	d0f0      	beq.n	800295c <HAL_RCC_OscConfig+0x2f8>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	689b      	ldr	r3, [r3, #8]
 800297e:	2b01      	cmp	r3, #1
 8002980:	d10e      	bne.n	80029a0 <HAL_RCC_OscConfig+0x33c>
 8002982:	4b03      	ldr	r3, [pc, #12]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002984:	6a1a      	ldr	r2, [r3, #32]
 8002986:	4b02      	ldr	r3, [pc, #8]	@ (8002990 <HAL_RCC_OscConfig+0x32c>)
 8002988:	2101      	movs	r1, #1
 800298a:	430a      	orrs	r2, r1
 800298c:	621a      	str	r2, [r3, #32]
 800298e:	e035      	b.n	80029fc <HAL_RCC_OscConfig+0x398>
 8002990:	40021000 	.word	0x40021000
 8002994:	fffeffff 	.word	0xfffeffff
 8002998:	fffbffff 	.word	0xfffbffff
 800299c:	40007000 	.word	0x40007000
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	689b      	ldr	r3, [r3, #8]
 80029a4:	2b00      	cmp	r3, #0
 80029a6:	d10c      	bne.n	80029c2 <HAL_RCC_OscConfig+0x35e>
 80029a8:	4bb6      	ldr	r3, [pc, #728]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029aa:	6a1a      	ldr	r2, [r3, #32]
 80029ac:	4bb5      	ldr	r3, [pc, #724]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029ae:	2101      	movs	r1, #1
 80029b0:	438a      	bics	r2, r1
 80029b2:	621a      	str	r2, [r3, #32]
 80029b4:	4bb3      	ldr	r3, [pc, #716]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029b6:	6a1a      	ldr	r2, [r3, #32]
 80029b8:	4bb2      	ldr	r3, [pc, #712]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029ba:	2104      	movs	r1, #4
 80029bc:	438a      	bics	r2, r1
 80029be:	621a      	str	r2, [r3, #32]
 80029c0:	e01c      	b.n	80029fc <HAL_RCC_OscConfig+0x398>
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	689b      	ldr	r3, [r3, #8]
 80029c6:	2b05      	cmp	r3, #5
 80029c8:	d10c      	bne.n	80029e4 <HAL_RCC_OscConfig+0x380>
 80029ca:	4bae      	ldr	r3, [pc, #696]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029cc:	6a1a      	ldr	r2, [r3, #32]
 80029ce:	4bad      	ldr	r3, [pc, #692]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029d0:	2104      	movs	r1, #4
 80029d2:	430a      	orrs	r2, r1
 80029d4:	621a      	str	r2, [r3, #32]
 80029d6:	4bab      	ldr	r3, [pc, #684]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029d8:	6a1a      	ldr	r2, [r3, #32]
 80029da:	4baa      	ldr	r3, [pc, #680]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029dc:	2101      	movs	r1, #1
 80029de:	430a      	orrs	r2, r1
 80029e0:	621a      	str	r2, [r3, #32]
 80029e2:	e00b      	b.n	80029fc <HAL_RCC_OscConfig+0x398>
 80029e4:	4ba7      	ldr	r3, [pc, #668]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029e6:	6a1a      	ldr	r2, [r3, #32]
 80029e8:	4ba6      	ldr	r3, [pc, #664]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029ea:	2101      	movs	r1, #1
 80029ec:	438a      	bics	r2, r1
 80029ee:	621a      	str	r2, [r3, #32]
 80029f0:	4ba4      	ldr	r3, [pc, #656]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029f2:	6a1a      	ldr	r2, [r3, #32]
 80029f4:	4ba3      	ldr	r3, [pc, #652]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 80029f6:	2104      	movs	r1, #4
 80029f8:	438a      	bics	r2, r1
 80029fa:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	689b      	ldr	r3, [r3, #8]
 8002a00:	2b00      	cmp	r3, #0
 8002a02:	d014      	beq.n	8002a2e <HAL_RCC_OscConfig+0x3ca>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002a04:	f7ff fd70 	bl	80024e8 <HAL_GetTick>
 8002a08:	0003      	movs	r3, r0
 8002a0a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002a0c:	e009      	b.n	8002a22 <HAL_RCC_OscConfig+0x3be>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002a0e:	f7ff fd6b 	bl	80024e8 <HAL_GetTick>
 8002a12:	0002      	movs	r2, r0
 8002a14:	69bb      	ldr	r3, [r7, #24]
 8002a16:	1ad3      	subs	r3, r2, r3
 8002a18:	4a9b      	ldr	r2, [pc, #620]	@ (8002c88 <HAL_RCC_OscConfig+0x624>)
 8002a1a:	4293      	cmp	r3, r2
 8002a1c:	d901      	bls.n	8002a22 <HAL_RCC_OscConfig+0x3be>
        {
          return HAL_TIMEOUT;
 8002a1e:	2303      	movs	r3, #3
 8002a20:	e12b      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002a22:	4b98      	ldr	r3, [pc, #608]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002a24:	6a1b      	ldr	r3, [r3, #32]
 8002a26:	2202      	movs	r2, #2
 8002a28:	4013      	ands	r3, r2
 8002a2a:	d0f0      	beq.n	8002a0e <HAL_RCC_OscConfig+0x3aa>
 8002a2c:	e013      	b.n	8002a56 <HAL_RCC_OscConfig+0x3f2>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002a2e:	f7ff fd5b 	bl	80024e8 <HAL_GetTick>
 8002a32:	0003      	movs	r3, r0
 8002a34:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002a36:	e009      	b.n	8002a4c <HAL_RCC_OscConfig+0x3e8>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002a38:	f7ff fd56 	bl	80024e8 <HAL_GetTick>
 8002a3c:	0002      	movs	r2, r0
 8002a3e:	69bb      	ldr	r3, [r7, #24]
 8002a40:	1ad3      	subs	r3, r2, r3
 8002a42:	4a91      	ldr	r2, [pc, #580]	@ (8002c88 <HAL_RCC_OscConfig+0x624>)
 8002a44:	4293      	cmp	r3, r2
 8002a46:	d901      	bls.n	8002a4c <HAL_RCC_OscConfig+0x3e8>
        {
          return HAL_TIMEOUT;
 8002a48:	2303      	movs	r3, #3
 8002a4a:	e116      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002a4c:	4b8d      	ldr	r3, [pc, #564]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002a4e:	6a1b      	ldr	r3, [r3, #32]
 8002a50:	2202      	movs	r2, #2
 8002a52:	4013      	ands	r3, r2
 8002a54:	d1f0      	bne.n	8002a38 <HAL_RCC_OscConfig+0x3d4>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8002a56:	231f      	movs	r3, #31
 8002a58:	18fb      	adds	r3, r7, r3
 8002a5a:	781b      	ldrb	r3, [r3, #0]
 8002a5c:	2b01      	cmp	r3, #1
 8002a5e:	d105      	bne.n	8002a6c <HAL_RCC_OscConfig+0x408>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8002a60:	4b88      	ldr	r3, [pc, #544]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002a62:	69da      	ldr	r2, [r3, #28]
 8002a64:	4b87      	ldr	r3, [pc, #540]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002a66:	4989      	ldr	r1, [pc, #548]	@ (8002c8c <HAL_RCC_OscConfig+0x628>)
 8002a68:	400a      	ands	r2, r1
 8002a6a:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	2210      	movs	r2, #16
 8002a72:	4013      	ands	r3, r2
 8002a74:	d063      	beq.n	8002b3e <HAL_RCC_OscConfig+0x4da>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8002a76:	687b      	ldr	r3, [r7, #4]
 8002a78:	695b      	ldr	r3, [r3, #20]
 8002a7a:	2b01      	cmp	r3, #1
 8002a7c:	d12a      	bne.n	8002ad4 <HAL_RCC_OscConfig+0x470>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8002a7e:	4b81      	ldr	r3, [pc, #516]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002a80:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002a82:	4b80      	ldr	r3, [pc, #512]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002a84:	2104      	movs	r1, #4
 8002a86:	430a      	orrs	r2, r1
 8002a88:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 8002a8a:	4b7e      	ldr	r3, [pc, #504]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002a8c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002a8e:	4b7d      	ldr	r3, [pc, #500]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002a90:	2101      	movs	r1, #1
 8002a92:	430a      	orrs	r2, r1
 8002a94:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002a96:	f7ff fd27 	bl	80024e8 <HAL_GetTick>
 8002a9a:	0003      	movs	r3, r0
 8002a9c:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8002a9e:	e008      	b.n	8002ab2 <HAL_RCC_OscConfig+0x44e>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8002aa0:	f7ff fd22 	bl	80024e8 <HAL_GetTick>
 8002aa4:	0002      	movs	r2, r0
 8002aa6:	69bb      	ldr	r3, [r7, #24]
 8002aa8:	1ad3      	subs	r3, r2, r3
 8002aaa:	2b02      	cmp	r3, #2
 8002aac:	d901      	bls.n	8002ab2 <HAL_RCC_OscConfig+0x44e>
        {
          return HAL_TIMEOUT;
 8002aae:	2303      	movs	r3, #3
 8002ab0:	e0e3      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8002ab2:	4b74      	ldr	r3, [pc, #464]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002ab4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002ab6:	2202      	movs	r2, #2
 8002ab8:	4013      	ands	r3, r2
 8002aba:	d0f1      	beq.n	8002aa0 <HAL_RCC_OscConfig+0x43c>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8002abc:	4b71      	ldr	r3, [pc, #452]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002abe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002ac0:	22f8      	movs	r2, #248	@ 0xf8
 8002ac2:	4393      	bics	r3, r2
 8002ac4:	0019      	movs	r1, r3
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	699b      	ldr	r3, [r3, #24]
 8002aca:	00da      	lsls	r2, r3, #3
 8002acc:	4b6d      	ldr	r3, [pc, #436]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002ace:	430a      	orrs	r2, r1
 8002ad0:	635a      	str	r2, [r3, #52]	@ 0x34
 8002ad2:	e034      	b.n	8002b3e <HAL_RCC_OscConfig+0x4da>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	695b      	ldr	r3, [r3, #20]
 8002ad8:	3305      	adds	r3, #5
 8002ada:	d111      	bne.n	8002b00 <HAL_RCC_OscConfig+0x49c>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8002adc:	4b69      	ldr	r3, [pc, #420]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002ade:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002ae0:	4b68      	ldr	r3, [pc, #416]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002ae2:	2104      	movs	r1, #4
 8002ae4:	438a      	bics	r2, r1
 8002ae6:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8002ae8:	4b66      	ldr	r3, [pc, #408]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002aea:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002aec:	22f8      	movs	r2, #248	@ 0xf8
 8002aee:	4393      	bics	r3, r2
 8002af0:	0019      	movs	r1, r3
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	699b      	ldr	r3, [r3, #24]
 8002af6:	00da      	lsls	r2, r3, #3
 8002af8:	4b62      	ldr	r3, [pc, #392]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002afa:	430a      	orrs	r2, r1
 8002afc:	635a      	str	r2, [r3, #52]	@ 0x34
 8002afe:	e01e      	b.n	8002b3e <HAL_RCC_OscConfig+0x4da>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8002b00:	4b60      	ldr	r3, [pc, #384]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002b02:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002b04:	4b5f      	ldr	r3, [pc, #380]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002b06:	2104      	movs	r1, #4
 8002b08:	430a      	orrs	r2, r1
 8002b0a:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8002b0c:	4b5d      	ldr	r3, [pc, #372]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002b0e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002b10:	4b5c      	ldr	r3, [pc, #368]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002b12:	2101      	movs	r1, #1
 8002b14:	438a      	bics	r2, r1
 8002b16:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002b18:	f7ff fce6 	bl	80024e8 <HAL_GetTick>
 8002b1c:	0003      	movs	r3, r0
 8002b1e:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8002b20:	e008      	b.n	8002b34 <HAL_RCC_OscConfig+0x4d0>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8002b22:	f7ff fce1 	bl	80024e8 <HAL_GetTick>
 8002b26:	0002      	movs	r2, r0
 8002b28:	69bb      	ldr	r3, [r7, #24]
 8002b2a:	1ad3      	subs	r3, r2, r3
 8002b2c:	2b02      	cmp	r3, #2
 8002b2e:	d901      	bls.n	8002b34 <HAL_RCC_OscConfig+0x4d0>
        {
          return HAL_TIMEOUT;
 8002b30:	2303      	movs	r3, #3
 8002b32:	e0a2      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8002b34:	4b53      	ldr	r3, [pc, #332]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002b36:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002b38:	2202      	movs	r2, #2
 8002b3a:	4013      	ands	r3, r2
 8002b3c:	d1f1      	bne.n	8002b22 <HAL_RCC_OscConfig+0x4be>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	6a1b      	ldr	r3, [r3, #32]
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	d100      	bne.n	8002b48 <HAL_RCC_OscConfig+0x4e4>
 8002b46:	e097      	b.n	8002c78 <HAL_RCC_OscConfig+0x614>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002b48:	4b4e      	ldr	r3, [pc, #312]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002b4a:	685b      	ldr	r3, [r3, #4]
 8002b4c:	220c      	movs	r2, #12
 8002b4e:	4013      	ands	r3, r2
 8002b50:	2b08      	cmp	r3, #8
 8002b52:	d100      	bne.n	8002b56 <HAL_RCC_OscConfig+0x4f2>
 8002b54:	e06b      	b.n	8002c2e <HAL_RCC_OscConfig+0x5ca>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	6a1b      	ldr	r3, [r3, #32]
 8002b5a:	2b02      	cmp	r3, #2
 8002b5c:	d14c      	bne.n	8002bf8 <HAL_RCC_OscConfig+0x594>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002b5e:	4b49      	ldr	r3, [pc, #292]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002b60:	681a      	ldr	r2, [r3, #0]
 8002b62:	4b48      	ldr	r3, [pc, #288]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002b64:	494a      	ldr	r1, [pc, #296]	@ (8002c90 <HAL_RCC_OscConfig+0x62c>)
 8002b66:	400a      	ands	r2, r1
 8002b68:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002b6a:	f7ff fcbd 	bl	80024e8 <HAL_GetTick>
 8002b6e:	0003      	movs	r3, r0
 8002b70:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002b72:	e008      	b.n	8002b86 <HAL_RCC_OscConfig+0x522>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002b74:	f7ff fcb8 	bl	80024e8 <HAL_GetTick>
 8002b78:	0002      	movs	r2, r0
 8002b7a:	69bb      	ldr	r3, [r7, #24]
 8002b7c:	1ad3      	subs	r3, r2, r3
 8002b7e:	2b02      	cmp	r3, #2
 8002b80:	d901      	bls.n	8002b86 <HAL_RCC_OscConfig+0x522>
          {
            return HAL_TIMEOUT;
 8002b82:	2303      	movs	r3, #3
 8002b84:	e079      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002b86:	4b3f      	ldr	r3, [pc, #252]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002b88:	681a      	ldr	r2, [r3, #0]
 8002b8a:	2380      	movs	r3, #128	@ 0x80
 8002b8c:	049b      	lsls	r3, r3, #18
 8002b8e:	4013      	ands	r3, r2
 8002b90:	d1f0      	bne.n	8002b74 <HAL_RCC_OscConfig+0x510>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002b92:	4b3c      	ldr	r3, [pc, #240]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002b94:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002b96:	220f      	movs	r2, #15
 8002b98:	4393      	bics	r3, r2
 8002b9a:	0019      	movs	r1, r3
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002ba0:	4b38      	ldr	r3, [pc, #224]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002ba2:	430a      	orrs	r2, r1
 8002ba4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002ba6:	4b37      	ldr	r3, [pc, #220]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002ba8:	685b      	ldr	r3, [r3, #4]
 8002baa:	4a3a      	ldr	r2, [pc, #232]	@ (8002c94 <HAL_RCC_OscConfig+0x630>)
 8002bac:	4013      	ands	r3, r2
 8002bae:	0019      	movs	r1, r3
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002bb8:	431a      	orrs	r2, r3
 8002bba:	4b32      	ldr	r3, [pc, #200]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002bbc:	430a      	orrs	r2, r1
 8002bbe:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8002bc0:	4b30      	ldr	r3, [pc, #192]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002bc2:	681a      	ldr	r2, [r3, #0]
 8002bc4:	4b2f      	ldr	r3, [pc, #188]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002bc6:	2180      	movs	r1, #128	@ 0x80
 8002bc8:	0449      	lsls	r1, r1, #17
 8002bca:	430a      	orrs	r2, r1
 8002bcc:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002bce:	f7ff fc8b 	bl	80024e8 <HAL_GetTick>
 8002bd2:	0003      	movs	r3, r0
 8002bd4:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8002bd6:	e008      	b.n	8002bea <HAL_RCC_OscConfig+0x586>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002bd8:	f7ff fc86 	bl	80024e8 <HAL_GetTick>
 8002bdc:	0002      	movs	r2, r0
 8002bde:	69bb      	ldr	r3, [r7, #24]
 8002be0:	1ad3      	subs	r3, r2, r3
 8002be2:	2b02      	cmp	r3, #2
 8002be4:	d901      	bls.n	8002bea <HAL_RCC_OscConfig+0x586>
          {
            return HAL_TIMEOUT;
 8002be6:	2303      	movs	r3, #3
 8002be8:	e047      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8002bea:	4b26      	ldr	r3, [pc, #152]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002bec:	681a      	ldr	r2, [r3, #0]
 8002bee:	2380      	movs	r3, #128	@ 0x80
 8002bf0:	049b      	lsls	r3, r3, #18
 8002bf2:	4013      	ands	r3, r2
 8002bf4:	d0f0      	beq.n	8002bd8 <HAL_RCC_OscConfig+0x574>
 8002bf6:	e03f      	b.n	8002c78 <HAL_RCC_OscConfig+0x614>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002bf8:	4b22      	ldr	r3, [pc, #136]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002bfa:	681a      	ldr	r2, [r3, #0]
 8002bfc:	4b21      	ldr	r3, [pc, #132]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002bfe:	4924      	ldr	r1, [pc, #144]	@ (8002c90 <HAL_RCC_OscConfig+0x62c>)
 8002c00:	400a      	ands	r2, r1
 8002c02:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002c04:	f7ff fc70 	bl	80024e8 <HAL_GetTick>
 8002c08:	0003      	movs	r3, r0
 8002c0a:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002c0c:	e008      	b.n	8002c20 <HAL_RCC_OscConfig+0x5bc>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002c0e:	f7ff fc6b 	bl	80024e8 <HAL_GetTick>
 8002c12:	0002      	movs	r2, r0
 8002c14:	69bb      	ldr	r3, [r7, #24]
 8002c16:	1ad3      	subs	r3, r2, r3
 8002c18:	2b02      	cmp	r3, #2
 8002c1a:	d901      	bls.n	8002c20 <HAL_RCC_OscConfig+0x5bc>
          {
            return HAL_TIMEOUT;
 8002c1c:	2303      	movs	r3, #3
 8002c1e:	e02c      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8002c20:	4b18      	ldr	r3, [pc, #96]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002c22:	681a      	ldr	r2, [r3, #0]
 8002c24:	2380      	movs	r3, #128	@ 0x80
 8002c26:	049b      	lsls	r3, r3, #18
 8002c28:	4013      	ands	r3, r2
 8002c2a:	d1f0      	bne.n	8002c0e <HAL_RCC_OscConfig+0x5aa>
 8002c2c:	e024      	b.n	8002c78 <HAL_RCC_OscConfig+0x614>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	6a1b      	ldr	r3, [r3, #32]
 8002c32:	2b01      	cmp	r3, #1
 8002c34:	d101      	bne.n	8002c3a <HAL_RCC_OscConfig+0x5d6>
      {
        return HAL_ERROR;
 8002c36:	2301      	movs	r3, #1
 8002c38:	e01f      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8002c3a:	4b12      	ldr	r3, [pc, #72]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002c3c:	685b      	ldr	r3, [r3, #4]
 8002c3e:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 8002c40:	4b10      	ldr	r3, [pc, #64]	@ (8002c84 <HAL_RCC_OscConfig+0x620>)
 8002c42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002c44:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8002c46:	697a      	ldr	r2, [r7, #20]
 8002c48:	2380      	movs	r3, #128	@ 0x80
 8002c4a:	025b      	lsls	r3, r3, #9
 8002c4c:	401a      	ands	r2, r3
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c52:	429a      	cmp	r2, r3
 8002c54:	d10e      	bne.n	8002c74 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8002c56:	693b      	ldr	r3, [r7, #16]
 8002c58:	220f      	movs	r2, #15
 8002c5a:	401a      	ands	r2, r3
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8002c60:	429a      	cmp	r2, r3
 8002c62:	d107      	bne.n	8002c74 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8002c64:	697a      	ldr	r2, [r7, #20]
 8002c66:	23f0      	movs	r3, #240	@ 0xf0
 8002c68:	039b      	lsls	r3, r3, #14
 8002c6a:	401a      	ands	r2, r3
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8002c70:	429a      	cmp	r2, r3
 8002c72:	d001      	beq.n	8002c78 <HAL_RCC_OscConfig+0x614>
        {
          return HAL_ERROR;
 8002c74:	2301      	movs	r3, #1
 8002c76:	e000      	b.n	8002c7a <HAL_RCC_OscConfig+0x616>
        }
      }
    }
  }

  return HAL_OK;
 8002c78:	2300      	movs	r3, #0
}
 8002c7a:	0018      	movs	r0, r3
 8002c7c:	46bd      	mov	sp, r7
 8002c7e:	b008      	add	sp, #32
 8002c80:	bd80      	pop	{r7, pc}
 8002c82:	46c0      	nop			@ (mov r8, r8)
 8002c84:	40021000 	.word	0x40021000
 8002c88:	00001388 	.word	0x00001388
 8002c8c:	efffffff 	.word	0xefffffff
 8002c90:	feffffff 	.word	0xfeffffff
 8002c94:	ffc2ffff 	.word	0xffc2ffff

08002c98 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8002c98:	b580      	push	{r7, lr}
 8002c9a:	b084      	sub	sp, #16
 8002c9c:	af00      	add	r7, sp, #0
 8002c9e:	6078      	str	r0, [r7, #4]
 8002ca0:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	d101      	bne.n	8002cac <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8002ca8:	2301      	movs	r3, #1
 8002caa:	e0b3      	b.n	8002e14 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8002cac:	4b5b      	ldr	r3, [pc, #364]	@ (8002e1c <HAL_RCC_ClockConfig+0x184>)
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	2201      	movs	r2, #1
 8002cb2:	4013      	ands	r3, r2
 8002cb4:	683a      	ldr	r2, [r7, #0]
 8002cb6:	429a      	cmp	r2, r3
 8002cb8:	d911      	bls.n	8002cde <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002cba:	4b58      	ldr	r3, [pc, #352]	@ (8002e1c <HAL_RCC_ClockConfig+0x184>)
 8002cbc:	681b      	ldr	r3, [r3, #0]
 8002cbe:	2201      	movs	r2, #1
 8002cc0:	4393      	bics	r3, r2
 8002cc2:	0019      	movs	r1, r3
 8002cc4:	4b55      	ldr	r3, [pc, #340]	@ (8002e1c <HAL_RCC_ClockConfig+0x184>)
 8002cc6:	683a      	ldr	r2, [r7, #0]
 8002cc8:	430a      	orrs	r2, r1
 8002cca:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002ccc:	4b53      	ldr	r3, [pc, #332]	@ (8002e1c <HAL_RCC_ClockConfig+0x184>)
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	2201      	movs	r2, #1
 8002cd2:	4013      	ands	r3, r2
 8002cd4:	683a      	ldr	r2, [r7, #0]
 8002cd6:	429a      	cmp	r2, r3
 8002cd8:	d001      	beq.n	8002cde <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8002cda:	2301      	movs	r3, #1
 8002cdc:	e09a      	b.n	8002e14 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	2202      	movs	r2, #2
 8002ce4:	4013      	ands	r3, r2
 8002ce6:	d015      	beq.n	8002d14 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	2204      	movs	r2, #4
 8002cee:	4013      	ands	r3, r2
 8002cf0:	d006      	beq.n	8002d00 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8002cf2:	4b4b      	ldr	r3, [pc, #300]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002cf4:	685a      	ldr	r2, [r3, #4]
 8002cf6:	4b4a      	ldr	r3, [pc, #296]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002cf8:	21e0      	movs	r1, #224	@ 0xe0
 8002cfa:	00c9      	lsls	r1, r1, #3
 8002cfc:	430a      	orrs	r2, r1
 8002cfe:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002d00:	4b47      	ldr	r3, [pc, #284]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002d02:	685b      	ldr	r3, [r3, #4]
 8002d04:	22f0      	movs	r2, #240	@ 0xf0
 8002d06:	4393      	bics	r3, r2
 8002d08:	0019      	movs	r1, r3
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	689a      	ldr	r2, [r3, #8]
 8002d0e:	4b44      	ldr	r3, [pc, #272]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002d10:	430a      	orrs	r2, r1
 8002d12:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	2201      	movs	r2, #1
 8002d1a:	4013      	ands	r3, r2
 8002d1c:	d040      	beq.n	8002da0 <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	685b      	ldr	r3, [r3, #4]
 8002d22:	2b01      	cmp	r3, #1
 8002d24:	d107      	bne.n	8002d36 <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002d26:	4b3e      	ldr	r3, [pc, #248]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002d28:	681a      	ldr	r2, [r3, #0]
 8002d2a:	2380      	movs	r3, #128	@ 0x80
 8002d2c:	029b      	lsls	r3, r3, #10
 8002d2e:	4013      	ands	r3, r2
 8002d30:	d114      	bne.n	8002d5c <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8002d32:	2301      	movs	r3, #1
 8002d34:	e06e      	b.n	8002e14 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	685b      	ldr	r3, [r3, #4]
 8002d3a:	2b02      	cmp	r3, #2
 8002d3c:	d107      	bne.n	8002d4e <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002d3e:	4b38      	ldr	r3, [pc, #224]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002d40:	681a      	ldr	r2, [r3, #0]
 8002d42:	2380      	movs	r3, #128	@ 0x80
 8002d44:	049b      	lsls	r3, r3, #18
 8002d46:	4013      	ands	r3, r2
 8002d48:	d108      	bne.n	8002d5c <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8002d4a:	2301      	movs	r3, #1
 8002d4c:	e062      	b.n	8002e14 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002d4e:	4b34      	ldr	r3, [pc, #208]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002d50:	681b      	ldr	r3, [r3, #0]
 8002d52:	2202      	movs	r2, #2
 8002d54:	4013      	ands	r3, r2
 8002d56:	d101      	bne.n	8002d5c <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8002d58:	2301      	movs	r3, #1
 8002d5a:	e05b      	b.n	8002e14 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8002d5c:	4b30      	ldr	r3, [pc, #192]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002d5e:	685b      	ldr	r3, [r3, #4]
 8002d60:	2203      	movs	r2, #3
 8002d62:	4393      	bics	r3, r2
 8002d64:	0019      	movs	r1, r3
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	685a      	ldr	r2, [r3, #4]
 8002d6a:	4b2d      	ldr	r3, [pc, #180]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002d6c:	430a      	orrs	r2, r1
 8002d6e:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8002d70:	f7ff fbba 	bl	80024e8 <HAL_GetTick>
 8002d74:	0003      	movs	r3, r0
 8002d76:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002d78:	e009      	b.n	8002d8e <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002d7a:	f7ff fbb5 	bl	80024e8 <HAL_GetTick>
 8002d7e:	0002      	movs	r2, r0
 8002d80:	68fb      	ldr	r3, [r7, #12]
 8002d82:	1ad3      	subs	r3, r2, r3
 8002d84:	4a27      	ldr	r2, [pc, #156]	@ (8002e24 <HAL_RCC_ClockConfig+0x18c>)
 8002d86:	4293      	cmp	r3, r2
 8002d88:	d901      	bls.n	8002d8e <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 8002d8a:	2303      	movs	r3, #3
 8002d8c:	e042      	b.n	8002e14 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002d8e:	4b24      	ldr	r3, [pc, #144]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002d90:	685b      	ldr	r3, [r3, #4]
 8002d92:	220c      	movs	r2, #12
 8002d94:	401a      	ands	r2, r3
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	685b      	ldr	r3, [r3, #4]
 8002d9a:	009b      	lsls	r3, r3, #2
 8002d9c:	429a      	cmp	r2, r3
 8002d9e:	d1ec      	bne.n	8002d7a <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8002da0:	4b1e      	ldr	r3, [pc, #120]	@ (8002e1c <HAL_RCC_ClockConfig+0x184>)
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	2201      	movs	r2, #1
 8002da6:	4013      	ands	r3, r2
 8002da8:	683a      	ldr	r2, [r7, #0]
 8002daa:	429a      	cmp	r2, r3
 8002dac:	d211      	bcs.n	8002dd2 <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002dae:	4b1b      	ldr	r3, [pc, #108]	@ (8002e1c <HAL_RCC_ClockConfig+0x184>)
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	2201      	movs	r2, #1
 8002db4:	4393      	bics	r3, r2
 8002db6:	0019      	movs	r1, r3
 8002db8:	4b18      	ldr	r3, [pc, #96]	@ (8002e1c <HAL_RCC_ClockConfig+0x184>)
 8002dba:	683a      	ldr	r2, [r7, #0]
 8002dbc:	430a      	orrs	r2, r1
 8002dbe:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002dc0:	4b16      	ldr	r3, [pc, #88]	@ (8002e1c <HAL_RCC_ClockConfig+0x184>)
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	2201      	movs	r2, #1
 8002dc6:	4013      	ands	r3, r2
 8002dc8:	683a      	ldr	r2, [r7, #0]
 8002dca:	429a      	cmp	r2, r3
 8002dcc:	d001      	beq.n	8002dd2 <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 8002dce:	2301      	movs	r3, #1
 8002dd0:	e020      	b.n	8002e14 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	2204      	movs	r2, #4
 8002dd8:	4013      	ands	r3, r2
 8002dda:	d009      	beq.n	8002df0 <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8002ddc:	4b10      	ldr	r3, [pc, #64]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002dde:	685b      	ldr	r3, [r3, #4]
 8002de0:	4a11      	ldr	r2, [pc, #68]	@ (8002e28 <HAL_RCC_ClockConfig+0x190>)
 8002de2:	4013      	ands	r3, r2
 8002de4:	0019      	movs	r1, r3
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	68da      	ldr	r2, [r3, #12]
 8002dea:	4b0d      	ldr	r3, [pc, #52]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002dec:	430a      	orrs	r2, r1
 8002dee:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8002df0:	f000 f820 	bl	8002e34 <HAL_RCC_GetSysClockFreq>
 8002df4:	0001      	movs	r1, r0
 8002df6:	4b0a      	ldr	r3, [pc, #40]	@ (8002e20 <HAL_RCC_ClockConfig+0x188>)
 8002df8:	685b      	ldr	r3, [r3, #4]
 8002dfa:	091b      	lsrs	r3, r3, #4
 8002dfc:	220f      	movs	r2, #15
 8002dfe:	4013      	ands	r3, r2
 8002e00:	4a0a      	ldr	r2, [pc, #40]	@ (8002e2c <HAL_RCC_ClockConfig+0x194>)
 8002e02:	5cd3      	ldrb	r3, [r2, r3]
 8002e04:	000a      	movs	r2, r1
 8002e06:	40da      	lsrs	r2, r3
 8002e08:	4b09      	ldr	r3, [pc, #36]	@ (8002e30 <HAL_RCC_ClockConfig+0x198>)
 8002e0a:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8002e0c:	2003      	movs	r0, #3
 8002e0e:	f7ff fb25 	bl	800245c <HAL_InitTick>
  
  return HAL_OK;
 8002e12:	2300      	movs	r3, #0
}
 8002e14:	0018      	movs	r0, r3
 8002e16:	46bd      	mov	sp, r7
 8002e18:	b004      	add	sp, #16
 8002e1a:	bd80      	pop	{r7, pc}
 8002e1c:	40022000 	.word	0x40022000
 8002e20:	40021000 	.word	0x40021000
 8002e24:	00001388 	.word	0x00001388
 8002e28:	fffff8ff 	.word	0xfffff8ff
 8002e2c:	08002f90 	.word	0x08002f90
 8002e30:	20000000 	.word	0x20000000

08002e34 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8002e34:	b580      	push	{r7, lr}
 8002e36:	b086      	sub	sp, #24
 8002e38:	af00      	add	r7, sp, #0
  static const uint8_t aPLLMULFactorTable[16U] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
                                                   10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  static const uint8_t aPredivFactorTable[16U] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
                                                   9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8002e3a:	2300      	movs	r3, #0
 8002e3c:	60fb      	str	r3, [r7, #12]
 8002e3e:	2300      	movs	r3, #0
 8002e40:	60bb      	str	r3, [r7, #8]
 8002e42:	2300      	movs	r3, #0
 8002e44:	617b      	str	r3, [r7, #20]
 8002e46:	2300      	movs	r3, #0
 8002e48:	607b      	str	r3, [r7, #4]
  uint32_t sysclockfreq = 0U;
 8002e4a:	2300      	movs	r3, #0
 8002e4c:	613b      	str	r3, [r7, #16]
  
  tmpreg = RCC->CFGR;
 8002e4e:	4b20      	ldr	r3, [pc, #128]	@ (8002ed0 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002e50:	685b      	ldr	r3, [r3, #4]
 8002e52:	60fb      	str	r3, [r7, #12]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8002e54:	68fb      	ldr	r3, [r7, #12]
 8002e56:	220c      	movs	r2, #12
 8002e58:	4013      	ands	r3, r2
 8002e5a:	2b04      	cmp	r3, #4
 8002e5c:	d002      	beq.n	8002e64 <HAL_RCC_GetSysClockFreq+0x30>
 8002e5e:	2b08      	cmp	r3, #8
 8002e60:	d003      	beq.n	8002e6a <HAL_RCC_GetSysClockFreq+0x36>
 8002e62:	e02c      	b.n	8002ebe <HAL_RCC_GetSysClockFreq+0x8a>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8002e64:	4b1b      	ldr	r3, [pc, #108]	@ (8002ed4 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002e66:	613b      	str	r3, [r7, #16]
      break;
 8002e68:	e02c      	b.n	8002ec4 <HAL_RCC_GetSysClockFreq+0x90>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	0c9b      	lsrs	r3, r3, #18
 8002e6e:	220f      	movs	r2, #15
 8002e70:	4013      	ands	r3, r2
 8002e72:	4a19      	ldr	r2, [pc, #100]	@ (8002ed8 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002e74:	5cd3      	ldrb	r3, [r2, r3]
 8002e76:	607b      	str	r3, [r7, #4]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8002e78:	4b15      	ldr	r3, [pc, #84]	@ (8002ed0 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002e7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e7c:	220f      	movs	r2, #15
 8002e7e:	4013      	ands	r3, r2
 8002e80:	4a16      	ldr	r2, [pc, #88]	@ (8002edc <HAL_RCC_GetSysClockFreq+0xa8>)
 8002e82:	5cd3      	ldrb	r3, [r2, r3]
 8002e84:	60bb      	str	r3, [r7, #8]
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8002e86:	68fa      	ldr	r2, [r7, #12]
 8002e88:	2380      	movs	r3, #128	@ 0x80
 8002e8a:	025b      	lsls	r3, r3, #9
 8002e8c:	4013      	ands	r3, r2
 8002e8e:	d009      	beq.n	8002ea4 <HAL_RCC_GetSysClockFreq+0x70>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8002e90:	68b9      	ldr	r1, [r7, #8]
 8002e92:	4810      	ldr	r0, [pc, #64]	@ (8002ed4 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002e94:	f7fd f938 	bl	8000108 <__udivsi3>
 8002e98:	0003      	movs	r3, r0
 8002e9a:	001a      	movs	r2, r3
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	4353      	muls	r3, r2
 8002ea0:	617b      	str	r3, [r7, #20]
 8002ea2:	e009      	b.n	8002eb8 <HAL_RCC_GetSysClockFreq+0x84>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 8002ea4:	6879      	ldr	r1, [r7, #4]
 8002ea6:	000a      	movs	r2, r1
 8002ea8:	0152      	lsls	r2, r2, #5
 8002eaa:	1a52      	subs	r2, r2, r1
 8002eac:	0193      	lsls	r3, r2, #6
 8002eae:	1a9b      	subs	r3, r3, r2
 8002eb0:	00db      	lsls	r3, r3, #3
 8002eb2:	185b      	adds	r3, r3, r1
 8002eb4:	021b      	lsls	r3, r3, #8
 8002eb6:	617b      	str	r3, [r7, #20]
#endif
      }
      sysclockfreq = pllclk;
 8002eb8:	697b      	ldr	r3, [r7, #20]
 8002eba:	613b      	str	r3, [r7, #16]
      break;
 8002ebc:	e002      	b.n	8002ec4 <HAL_RCC_GetSysClockFreq+0x90>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8002ebe:	4b05      	ldr	r3, [pc, #20]	@ (8002ed4 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002ec0:	613b      	str	r3, [r7, #16]
      break;
 8002ec2:	46c0      	nop			@ (mov r8, r8)
    }
  }
  return sysclockfreq;
 8002ec4:	693b      	ldr	r3, [r7, #16]
}
 8002ec6:	0018      	movs	r0, r3
 8002ec8:	46bd      	mov	sp, r7
 8002eca:	b006      	add	sp, #24
 8002ecc:	bd80      	pop	{r7, pc}
 8002ece:	46c0      	nop			@ (mov r8, r8)
 8002ed0:	40021000 	.word	0x40021000
 8002ed4:	007a1200 	.word	0x007a1200
 8002ed8:	08002fa0 	.word	0x08002fa0
 8002edc:	08002fb0 	.word	0x08002fb0

08002ee0 <memset>:
 8002ee0:	0003      	movs	r3, r0
 8002ee2:	1882      	adds	r2, r0, r2
 8002ee4:	4293      	cmp	r3, r2
 8002ee6:	d100      	bne.n	8002eea <memset+0xa>
 8002ee8:	4770      	bx	lr
 8002eea:	7019      	strb	r1, [r3, #0]
 8002eec:	3301      	adds	r3, #1
 8002eee:	e7f9      	b.n	8002ee4 <memset+0x4>

08002ef0 <__libc_init_array>:
 8002ef0:	b570      	push	{r4, r5, r6, lr}
 8002ef2:	2600      	movs	r6, #0
 8002ef4:	4c0c      	ldr	r4, [pc, #48]	@ (8002f28 <__libc_init_array+0x38>)
 8002ef6:	4d0d      	ldr	r5, [pc, #52]	@ (8002f2c <__libc_init_array+0x3c>)
 8002ef8:	1b64      	subs	r4, r4, r5
 8002efa:	10a4      	asrs	r4, r4, #2
 8002efc:	42a6      	cmp	r6, r4
 8002efe:	d109      	bne.n	8002f14 <__libc_init_array+0x24>
 8002f00:	2600      	movs	r6, #0
 8002f02:	f000 f819 	bl	8002f38 <_init>
 8002f06:	4c0a      	ldr	r4, [pc, #40]	@ (8002f30 <__libc_init_array+0x40>)
 8002f08:	4d0a      	ldr	r5, [pc, #40]	@ (8002f34 <__libc_init_array+0x44>)
 8002f0a:	1b64      	subs	r4, r4, r5
 8002f0c:	10a4      	asrs	r4, r4, #2
 8002f0e:	42a6      	cmp	r6, r4
 8002f10:	d105      	bne.n	8002f1e <__libc_init_array+0x2e>
 8002f12:	bd70      	pop	{r4, r5, r6, pc}
 8002f14:	00b3      	lsls	r3, r6, #2
 8002f16:	58eb      	ldr	r3, [r5, r3]
 8002f18:	4798      	blx	r3
 8002f1a:	3601      	adds	r6, #1
 8002f1c:	e7ee      	b.n	8002efc <__libc_init_array+0xc>
 8002f1e:	00b3      	lsls	r3, r6, #2
 8002f20:	58eb      	ldr	r3, [r5, r3]
 8002f22:	4798      	blx	r3
 8002f24:	3601      	adds	r6, #1
 8002f26:	e7f2      	b.n	8002f0e <__libc_init_array+0x1e>
 8002f28:	08002fc0 	.word	0x08002fc0
 8002f2c:	08002fc0 	.word	0x08002fc0
 8002f30:	08002fc4 	.word	0x08002fc4
 8002f34:	08002fc0 	.word	0x08002fc0

08002f38 <_init>:
 8002f38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f3a:	46c0      	nop			@ (mov r8, r8)
 8002f3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002f3e:	bc08      	pop	{r3}
 8002f40:	469e      	mov	lr, r3
 8002f42:	4770      	bx	lr

08002f44 <_fini>:
 8002f44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f46:	46c0      	nop			@ (mov r8, r8)
 8002f48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002f4a:	bc08      	pop	{r3}
 8002f4c:	469e      	mov	lr, r3
 8002f4e:	4770      	bx	lr
